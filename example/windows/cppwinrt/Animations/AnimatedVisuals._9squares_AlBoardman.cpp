//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.0.0-build.90+ga9eb6fa111
//       
//       Command:
//           LottieGen -InterfaceBaseName Microsoft.UI.Xaml.Controls.IAnimatedVisual -Language Cppwinrt -WinUIVersion 2.4 -InputFile 9squares-AlBoardman.json
//       
//       Input file:
//           9squares-AlBoardman.json (62308 bytes created 20:50-08:00 Dec 28 2020)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ___________________________________________________________
// |       Object stats       | UAP v12 count | UAP v7 count |
// |__________________________|_______________|______________|
// | All CompositionObjects   |           334 |          334 |
// |--------------------------+---------------+--------------|
// | Expression animators     |            58 |           58 |
// | KeyFrame animators       |            58 |           58 |
// | Reference parameters     |            58 |           58 |
// | Expression operations    |             0 |            0 |
// |--------------------------+---------------+--------------|
// | Animated brushes         |             - |            - |
// | Animated gradient stops  |             - |            - |
// | ExpressionAnimations     |            10 |           10 |
// | PathKeyFrameAnimations   |             - |            - |
// |--------------------------+---------------+--------------|
// | ContainerVisuals         |             1 |            1 |
// | ShapeVisuals             |             1 |            1 |
// |--------------------------+---------------+--------------|
// | ContainerShapes          |            20 |           20 |
// | CompositionSpriteShapes  |            19 |           19 |
// |--------------------------+---------------+--------------|
// | Brushes                  |             3 |            3 |
// | Gradient stops           |             - |            - |
// | CompositionVisualSurface |             - |            - |
// -----------------------------------------------------------
#include "pch.h"
#include "AnimatedVisuals._9squares_AlBoardman.h"
#include "AnimatedVisuals._9squares_AlBoardman.g.cpp"
#include <winrt/Windows.Foundation.Metadata.h>
#include <winrt/Windows.UI.Composition.h>
#include "d2d1.h"
#include <d2d1_1.h>
#include <d2d1helper.h>
#include <Windows.Graphics.Interop.h>
#ifdef BUILD_WINDOWS
namespace ABI
{
#include <Windows.Graphics.Effects.Interop.h>
}
#else
#include <Windows.Graphics.Effects.Interop.h>
#endif
#include <winrt/Windows.Graphics.Effects.h>

using namespace winrt::Windows::Foundation;
using namespace winrt::Windows::Foundation::Numerics;
using namespace winrt::Windows::Graphics;
using namespace winrt::Windows::UI;
using namespace winrt::Windows::UI::Composition;
using TimeSpan = winrt::Windows::Foundation::TimeSpan;

namespace winrt::AnimatedVisuals::implementation
{
    class CanvasGeometry : public winrt::implements<CanvasGeometry,
        IGeometrySource2D,
        ::ABI::Windows::Graphics::IGeometrySource2DInterop>
    {
        winrt::com_ptr<ID2D1Geometry> _geometry{ nullptr };

    public:
        CanvasGeometry(winrt::com_ptr<ID2D1Geometry> geometry)
            : _geometry{ geometry }
        { }

        // IGeometrySource2D.
        winrt::com_ptr<ID2D1Geometry> Geometry() { return _geometry; }

        // IGeometrySource2DInterop.
        IFACEMETHODIMP GetGeometry(ID2D1Geometry** value) override
        {
            _geometry.copy_to(value);
            return S_OK;
        }

        // IGeometrySource2DInterop.
        IFACEMETHODIMP TryGetGeometryUsingFactory(ID2D1Factory*, ID2D1Geometry**) override
        {
            return E_NOTIMPL;
        }
    };
    class _9squares_AlBoardman_AnimatedVisual_UAPv12 : public winrt::implements<_9squares_AlBoardman_AnimatedVisual_UAPv12,
            winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual,
            IClosable>
    {
        winrt::com_ptr<ID2D1Factory> _d2dFactory{ nullptr };
        static constexpr int64_t c_durationTicks{ 58666666L };
        Compositor const _c{ nullptr };
        ExpressionAnimation const _reusableExpressionAnimation{ nullptr };
        CompositionColorBrush _colorBrush_AlmostCoral_FFF77C5E{ nullptr };
        CompositionColorBrush _colorBrush_AlmostMediumSeaGreen_FF3DBC5B{ nullptr };
        CompositionPathGeometry _pathGeometry_0{ nullptr };
        CompositionPathGeometry _pathGeometry_1{ nullptr };
        CompositionPathGeometry _pathGeometry_2{ nullptr };
        CompositionPathGeometry _pathGeometry_3{ nullptr };
        CompositionPathGeometry _pathGeometry_4{ nullptr };
        CompositionPathGeometry _pathGeometry_5{ nullptr };
        CompositionPathGeometry _pathGeometry_6{ nullptr };
        CompositionPathGeometry _pathGeometry_7{ nullptr };
        CompositionPathGeometry _pathGeometry_8{ nullptr };
        ContainerVisual _root{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_0{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_1{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_2{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_3{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_4{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_5{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_6{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_7{ nullptr };
        ExpressionAnimation _rootProgress{ nullptr };
        ExpressionAnimation _rootProgressRemapped_0{ nullptr };
        ExpressionAnimation _rootProgressRemapped_1{ nullptr };
        ExpressionAnimation _rootProgressRemapped_2{ nullptr };
        ExpressionAnimation _rootProgressRemapped_3{ nullptr };
        ExpressionAnimation _rootProgressRemapped_4{ nullptr };
        ExpressionAnimation _rootProgressRemapped_5{ nullptr };
        ExpressionAnimation _rootProgressRemapped_6{ nullptr };
        ExpressionAnimation _rootProgressRemapped_7{ nullptr };
        ExpressionAnimation _rootProgressRemapped_8{ nullptr };
        ScalarKeyFrameAnimation _scalarAnimation_0p9_to_1_0{ nullptr };
        ScalarKeyFrameAnimation _scalarAnimation_0p9_to_1_1{ nullptr };
        ScalarKeyFrameAnimation _scalarAnimation_0p9_to_1_2{ nullptr };
        ScalarKeyFrameAnimation _scalarAnimation_0p9_to_1_3{ nullptr };
        ScalarKeyFrameAnimation _scalarAnimation_1_to_0p9_0{ nullptr };
        ScalarKeyFrameAnimation _scalarAnimation_1_to_0p9_1{ nullptr };
        StepEasingFunction _holdThenStepEasingFunction{ nullptr };
        StepEasingFunction _stepThenHoldEasingFunction{ nullptr };

        static void StartProgressBoundAnimation(
            CompositionObject target,
            winrt::hstring animatedPropertyName,
            CompositionAnimation animation,
            ExpressionAnimation controllerProgressExpression)
        {
            target.StartAnimation(animatedPropertyName, animation);
            const auto controller = target.TryGetAnimationController(animatedPropertyName);
            controller.Pause();
            controller.StartAnimation(L"Progress", controllerProgressExpression);
        }

        ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateScalarKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, float2 initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateVector2KeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, float3x2 transformMatrix)
        {
            const auto result = _c.CreateSpriteShape(geometry);
            result.TransformMatrix(transformMatrix);
            return result;
        }

        CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, float3x2 transformMatrix, CompositionBrush fillBrush)
        {
            const auto result = _c.CreateSpriteShape(geometry);
            result.TransformMatrix(transformMatrix);
            result.FillBrush(fillBrush);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_0()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 116.994003F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 116.994003F, 64.6139984F }, { 64.6139984F, 116.994003F }, { 0.0F, 116.994003F } });
            sink->AddBezier({ { -64.6139984F, 116.994003F }, { -116.994003F, 64.6139984F }, { -116.994003F, 0.0F } });
            sink->AddBezier({ { -116.994003F, -64.6139984F }, { -64.6139984F, -116.994003F }, { 0.0F, -116.994003F } });
            sink->AddBezier({ { 64.6139984F, -116.994003F }, { 116.994003F, -64.6139984F }, { 116.994003F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_1()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 155.992004F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 155.992004F, 86.1520004F }, { 86.1520004F, 155.992004F }, { 0.0F, 155.992004F } });
            sink->AddBezier({ { -86.1520004F, 155.992004F }, { -155.992004F, 86.1520004F }, { -155.992004F, 0.0F } });
            sink->AddBezier({ { -155.992004F, -86.1520004F }, { -86.1520004F, -155.992004F }, { 0.0F, -155.992004F } });
            sink->AddBezier({ { 86.1520004F, -155.992004F }, { 155.992004F, -86.1520004F }, { 155.992004F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_2()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 199.490005F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 199.490005F, 110.175003F }, { 110.175003F, 199.490005F }, { 0.0F, 199.490005F } });
            sink->AddBezier({ { -110.175003F, 199.490005F }, { -199.490005F, 110.175003F }, { -199.490005F, 0.0F } });
            sink->AddBezier({ { -199.490005F, -110.175003F }, { -110.175003F, -199.490005F }, { 0.0F, -199.490005F } });
            sink->AddBezier({ { 110.175003F, -199.490005F }, { 199.490005F, -110.175003F }, { 199.490005F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_3()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 238.488007F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 238.488007F, 131.712997F }, { 131.712997F, 238.488007F }, { 0.0F, 238.488007F } });
            sink->AddBezier({ { -131.712997F, 238.488007F }, { -238.488007F, 131.712997F }, { -238.488007F, 0.0F } });
            sink->AddBezier({ { -238.488007F, -131.712997F }, { -131.712997F, -238.488007F }, { 0.0F, -238.488007F } });
            sink->AddBezier({ { 131.712997F, -238.488007F }, { 238.488007F, -131.712997F }, { 238.488007F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_4()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 277.485992F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 277.485992F, 153.251007F }, { 153.251007F, 277.485992F }, { 0.0F, 277.485992F } });
            sink->AddBezier({ { -153.251007F, 277.485992F }, { -277.485992F, 153.251007F }, { -277.485992F, 0.0F } });
            sink->AddBezier({ { -277.485992F, -153.251007F }, { -153.251007F, -277.485992F }, { 0.0F, -277.485992F } });
            sink->AddBezier({ { 153.251007F, -277.485992F }, { 277.485992F, -153.251007F }, { 277.485992F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_5()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 319.484009F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 319.484009F, 176.445999F }, { 176.445999F, 319.484009F }, { 0.0F, 319.484009F } });
            sink->AddBezier({ { -176.445999F, 319.484009F }, { -319.484009F, 176.445999F }, { -319.484009F, 0.0F } });
            sink->AddBezier({ { -319.484009F, -176.445999F }, { -176.445999F, -319.484009F }, { 0.0F, -319.484009F } });
            sink->AddBezier({ { 176.445999F, -319.484009F }, { 319.484009F, -176.445999F }, { 319.484009F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_6()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 361.481995F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 361.481995F, 199.641006F }, { 199.641006F, 361.481995F }, { 0.0F, 361.481995F } });
            sink->AddBezier({ { -199.641006F, 361.481995F }, { -361.481995F, 199.641006F }, { -361.481995F, 0.0F } });
            sink->AddBezier({ { -361.481995F, -199.641006F }, { -199.641006F, -361.481995F }, { 0.0F, -361.481995F } });
            sink->AddBezier({ { 199.641006F, -361.481995F }, { 361.481995F, -199.641006F }, { 361.481995F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_7()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 403.480011F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 403.480011F, 222.835999F }, { 222.835999F, 403.480011F }, { 0.0F, 403.480011F } });
            sink->AddBezier({ { -222.835999F, 403.480011F }, { -403.480011F, 222.835999F }, { -403.480011F, 0.0F } });
            sink->AddBezier({ { -403.480011F, -222.835999F }, { -222.835999F, -403.480011F }, { 0.0F, -403.480011F } });
            sink->AddBezier({ { 222.835999F, -403.480011F }, { 403.480011F, -222.835999F }, { 403.480011F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_8()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 446.977997F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 446.977997F, 246.858994F }, { 246.858994F, 446.977997F }, { 0.0F, 446.977997F } });
            sink->AddBezier({ { -246.858994F, 446.977997F }, { -446.97699F, 246.858994F }, { -446.97699F, 0.0F } });
            sink->AddBezier({ { -446.97699F, -246.858994F }, { -246.858994F, -446.977997F }, { 0.0F, -446.977997F } });
            sink->AddBezier({ { 246.858994F, -446.977997F }, { 446.977997F, -246.858994F }, { 446.977997F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        CompositionColorBrush ColorBrush_AlmostCoral_FFF77C5E()
        {
            return _colorBrush_AlmostCoral_FFF77C5E = _c.CreateColorBrush({ 0xFF, 0xF7, 0x7C, 0x5E });
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        CompositionColorBrush ColorBrush_AlmostDarkSlateGray_FF303030()
        {
            return _c.CreateColorBrush({ 0xFF, 0x30, 0x30, 0x30 });
        }

        CompositionColorBrush ColorBrush_AlmostMediumSeaGreen_FF3DBC5B()
        {
            return _colorBrush_AlmostMediumSeaGreen_FF3DBC5B = _c.CreateColorBrush({ 0xFF, 0x3D, 0xBC, 0x5B });
        }

        // Layer aggregator
        // Transforms for NULL CONTROL
        CompositionContainerShape ContainerShape_00()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.74000001F, 0.74000001F });
            // Offset:<-0.0017700195, -0.0017700195>, Scale:<0.16667, 0.16667>
            result.TransformMatrix({ 0.166669995F, 0.0F, 0.0F, 0.166669995F, -0.00177001953F, -0.00177001953F });
            const auto shapes = result.Shapes();
            // Transforms: Group 19
            shapes.Append(ContainerShape_01());
            // Transforms: Group 20
            shapes.Append(ContainerShape_02());
            // Transforms: Group 21
            shapes.Append(ContainerShape_03());
            // Transforms: Group 22
            shapes.Append(ContainerShape_04());
            // Transforms: Group 23
            shapes.Append(ContainerShape_05());
            // Transforms: Group 24
            shapes.Append(ContainerShape_06());
            // Transforms: Group 25
            shapes.Append(ContainerShape_07());
            // Transforms: Group 26
            shapes.Append(ContainerShape_08());
            // Transforms: Group 27
            shapes.Append(ContainerShape_09());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_180_to_0(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_09(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 19
        CompositionContainerShape ContainerShape_01()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 18 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_01());
            StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0p9_to_1_0(), RootProgressRemapped_0());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_0, _rootProgressRemapped_0);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_00(), RootProgress());
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 20
        CompositionContainerShape ContainerShape_02()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 17 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_02());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_0, RootProgressRemapped_1());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_0, _rootProgressRemapped_1);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_01(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 21
        CompositionContainerShape ContainerShape_03()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 16 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_03());
            StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0p9_to_1_1(), RootProgressRemapped_2());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_1, _rootProgressRemapped_2);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_02(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 22
        CompositionContainerShape ContainerShape_04()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 15 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_04());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_1, RootProgressRemapped_3());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_1, _rootProgressRemapped_3);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_03(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 23
        CompositionContainerShape ContainerShape_05()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 14 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_05());
            StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0p9_to_1_2(), RootProgressRemapped_4());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_4);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_04(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 24
        CompositionContainerShape ContainerShape_06()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 13 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_06());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_0, RootProgressRemapped_5());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_0, _rootProgressRemapped_5);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_05(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 25
        CompositionContainerShape ContainerShape_07()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 12 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_07());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_2, RootProgressRemapped_6());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_6);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_06(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 26
        CompositionContainerShape ContainerShape_08()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 11 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_08());
            StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0p9_to_1_3(), RootProgressRemapped_7());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_3, _rootProgressRemapped_7);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_07(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 27
        CompositionContainerShape ContainerShape_09()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 10 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_09());
            StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1_to_0p9_0(), RootProgressRemapped_8());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1_to_0p9_0, _rootProgressRemapped_8);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_08(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Transforms for NULL CONTROL 2
        CompositionContainerShape ContainerShape_10()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.74000001F, 0.74000001F });
            // Offset:<-0.0017700195, -0.0017700195>, Scale:<0.16667, 0.16667>
            result.TransformMatrix({ 0.166669995F, 0.0F, 0.0F, 0.166669995F, -0.00177001953F, -0.00177001953F });
            const auto shapes = result.Shapes();
            // Transforms: Group 18
            shapes.Append(ContainerShape_11());
            // Transforms: Group 17
            shapes.Append(ContainerShape_12());
            // Transforms: Group 16
            shapes.Append(ContainerShape_13());
            // Transforms: Group 15
            shapes.Append(ContainerShape_14());
            // Transforms: Group 14
            shapes.Append(ContainerShape_15());
            // Transforms: Group 13
            shapes.Append(ContainerShape_16());
            // Transforms: Group 12
            shapes.Append(ContainerShape_17());
            // Transforms: Group 11
            shapes.Append(ContainerShape_18());
            // Transforms: Group 10
            shapes.Append(ContainerShape_19());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_180(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_19(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 18
        CompositionContainerShape ContainerShape_11()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 18 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_10());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_0);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_0);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_10(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 17
        CompositionContainerShape ContainerShape_12()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 17 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_11());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_1);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_1);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_11(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 16
        CompositionContainerShape ContainerShape_13()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 16 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_12());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_3, _rootProgressRemapped_2);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_3, _rootProgressRemapped_2);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_12(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 15
        CompositionContainerShape ContainerShape_14()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 15 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_13());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_3, _rootProgressRemapped_3);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_3, _rootProgressRemapped_3);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_13(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 14
        CompositionContainerShape ContainerShape_15()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 14 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_14());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_4);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_4);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_14(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 13
        CompositionContainerShape ContainerShape_16()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 13 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_15());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_0, _rootProgressRemapped_5);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_0, _rootProgressRemapped_5);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_15(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 12
        CompositionContainerShape ContainerShape_17()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 12 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_16());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_6);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_6);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_16(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 11
        CompositionContainerShape ContainerShape_18()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 11 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_17());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_3, _rootProgressRemapped_7);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_3, _rootProgressRemapped_7);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_17(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 10
        CompositionContainerShape ContainerShape_19()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 10 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_18());
            StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1_to_0p9_1(), _rootProgressRemapped_8);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1_to_0p9_1, _rootProgressRemapped_8);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_18(), _rootProgress);
            return result;
        }

        CompositionPathGeometry PathGeometry_0()
        {
            return _pathGeometry_0 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_0())));
        }

        CompositionPathGeometry PathGeometry_1()
        {
            return _pathGeometry_1 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_1())));
        }

        CompositionPathGeometry PathGeometry_2()
        {
            return _pathGeometry_2 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_2())));
        }

        CompositionPathGeometry PathGeometry_3()
        {
            return _pathGeometry_3 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_3())));
        }

        CompositionPathGeometry PathGeometry_4()
        {
            return _pathGeometry_4 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_4())));
        }

        CompositionPathGeometry PathGeometry_5()
        {
            return _pathGeometry_5 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_5())));
        }

        CompositionPathGeometry PathGeometry_6()
        {
            return _pathGeometry_6 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_6())));
        }

        CompositionPathGeometry PathGeometry_7()
        {
            return _pathGeometry_7 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_7())));
        }

        CompositionPathGeometry PathGeometry_8()
        {
            return _pathGeometry_8 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_8())));
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // SolidLayerRectangle.RectangleGeometry
        CompositionRectangleGeometry Rectangle_1080()
        {
            const auto result = _c.CreateRectangleGeometry();
            result.Size({ 1080.0F, 1080.0F });
            return result;
        }

        // Layer aggregator
        // SolidLayerRectangle
        CompositionSpriteShape SpriteShape_00()
        {
            // Offset:<-0.0017700195, -0.0017700195>, Scale:<0.16667, 0.16667>
            const auto result = CreateSpriteShape(Rectangle_1080(), { 0.166669995F, 0.0F, 0.0F, 0.166669995F, -0.00177001953F, -0.00177001953F }, ColorBrush_AlmostDarkSlateGray_FF303030());
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 19
        // Path 1
        CompositionSpriteShape SpriteShape_01()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_0(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(ColorBrush_AlmostMediumSeaGreen_FF3DBC5B());
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 20
        // Path 1
        CompositionSpriteShape SpriteShape_02()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_1(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostMediumSeaGreen_FF3DBC5B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 21
        // Path 1
        CompositionSpriteShape SpriteShape_03()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_2(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostMediumSeaGreen_FF3DBC5B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 22
        // Path 1
        CompositionSpriteShape SpriteShape_04()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_3(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostMediumSeaGreen_FF3DBC5B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 23
        // Path 1
        CompositionSpriteShape SpriteShape_05()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_4(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostMediumSeaGreen_FF3DBC5B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 24
        // Path 1
        CompositionSpriteShape SpriteShape_06()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_5(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostMediumSeaGreen_FF3DBC5B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 25
        // Path 1
        CompositionSpriteShape SpriteShape_07()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_6(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostMediumSeaGreen_FF3DBC5B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 26
        // Path 1
        CompositionSpriteShape SpriteShape_08()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_7(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostMediumSeaGreen_FF3DBC5B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 27
        // Path 1
        CompositionSpriteShape SpriteShape_09()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_8(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostMediumSeaGreen_FF3DBC5B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 18
        // Path 1
        CompositionSpriteShape SpriteShape_10()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_0, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(ColorBrush_AlmostCoral_FFF77C5E());
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 17
        // Path 1
        CompositionSpriteShape SpriteShape_11()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostCoral_FFF77C5E);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 16
        // Path 1
        CompositionSpriteShape SpriteShape_12()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostCoral_FFF77C5E);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 15
        // Path 1
        CompositionSpriteShape SpriteShape_13()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_3, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostCoral_FFF77C5E);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 14
        // Path 1
        CompositionSpriteShape SpriteShape_14()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_4, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostCoral_FFF77C5E);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 13
        // Path 1
        CompositionSpriteShape SpriteShape_15()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_5, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostCoral_FFF77C5E);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 12
        // Path 1
        CompositionSpriteShape SpriteShape_16()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_6, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostCoral_FFF77C5E);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 11
        // Path 1
        CompositionSpriteShape SpriteShape_17()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_7, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostCoral_FFF77C5E);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 10
        // Path 1
        CompositionSpriteShape SpriteShape_18()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_8, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostCoral_FFF77C5E);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // The root of the composition.
        ContainerVisual Root()
        {
            const auto result = _root = _c.CreateContainerVisual();
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"Progress", 0.0F);
            // Layer aggregator
            result.Children().InsertAtTop(ShapeVisual_0());
            return result;
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_0()
        {
            return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.200000003F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_1()
        {
            return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction({ 0.100000001F, 0.0F }, { 0.200000003F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_2()
        {
            return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.0F }, { 0.0359999985F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_3()
        {
            return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.0359999985F, 0.0359999985F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_4()
        {
            return _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.0359999985F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_5()
        {
            return _cubicBezierEasingFunction_5 = _c.CreateCubicBezierEasingFunction({ 0.0130000003F, 0.0F }, { 0.0F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_6()
        {
            return _cubicBezierEasingFunction_6 = _c.CreateCubicBezierEasingFunction({ 0.100000001F, 0.100000001F }, { 0.200000003F, 0.200000003F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_7()
        {
            return _cubicBezierEasingFunction_7 = _c.CreateCubicBezierEasingFunction({ 0.0500000007F, 0.0F }, { 0.0F, 1.0F });
        }

        ExpressionAnimation RootProgress()
        {
            const auto result = _rootProgress = _c.CreateExpressionAnimation(L"_.Progress");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_0()
        {
            const auto result = _rootProgressRemapped_0 = _c.CreateExpressionAnimation(L"(_.Progress*0.9147657)+0.03638273");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_1()
        {
            const auto result = _rootProgressRemapped_1 = _c.CreateExpressionAnimation(L"(_.Progress*0.9147657)+0.03118519");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_2()
        {
            const auto result = _rootProgressRemapped_2 = _c.CreateExpressionAnimation(L"(_.Progress*0.9147609)+0.02598753");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_3()
        {
            const auto result = _rootProgressRemapped_3 = _c.CreateExpressionAnimation(L"(_.Progress*0.9147609)+0.02079002");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_4()
        {
            const auto result = _rootProgressRemapped_4 = _c.CreateExpressionAnimation(L"(_.Progress*0.9147657)+0.0155926");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_5()
        {
            const auto result = _rootProgressRemapped_5 = _c.CreateExpressionAnimation(L"(_.Progress*0.9147657)+0.01039506");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_6()
        {
            const auto result = _rootProgressRemapped_6 = _c.CreateExpressionAnimation(L"(_.Progress*0.9147657)+0.005197532");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_7()
        {
            const auto result = _rootProgressRemapped_7 = _c.CreateExpressionAnimation(L"_.Progress*0.9147609");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_8()
        {
            const auto result = _rootProgressRemapped_8 = _c.CreateExpressionAnimation(L"(_.Progress*0.913811)+0.08618899");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_180()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.722727299F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.900001109F, 180.0F, _c.CreateCubicBezierEasingFunction({ 0.194000006F, 0.0F }, { 0.379999995F, 1.0F }));
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_180_to_0()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 180.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.722727299F, 180.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.900001109F, 0.0F, _c.CreateCubicBezierEasingFunction({ 0.188999996F, 0.0F }, { 0.379999995F, 1.0F }));
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScalarAnimation_0p9_to_1_0()
        {
            const auto result = _scalarAnimation_0p9_to_1_0 = CreateScalarKeyFrameAnimation(0.0F, 0.899999976F, HoldThenStepEasingFunction());
            result.InsertKeyFrame(0.0904318616F, 1.0F, CubicBezierEasingFunction_0());
            result.InsertKeyFrame(0.181913629F, 0.899999976F, CubicBezierEasingFunction_1());
            result.InsertKeyFrame(0.272345483F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.363827258F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.454259127F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.545740902F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.636172771F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.727654517F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.818086386F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.909568131F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(1.0F, 1.0F, _cubicBezierEasingFunction_1);
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScalarAnimation_0p9_to_1_1()
        {
            const auto result = _scalarAnimation_0p9_to_1_1 = CreateScalarKeyFrameAnimation(0.0F, 0.899999976F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.0904365927F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.181912675F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.272349268F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.363825351F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.454261959F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.545738041F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.636174619F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.727650702F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.818087339F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.909563422F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(1.0F, 1.0F, _cubicBezierEasingFunction_1);
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScalarAnimation_0p9_to_1_2()
        {
            const auto result = _scalarAnimation_0p9_to_1_2 = CreateScalarKeyFrameAnimation(0.0F, 0.899999976F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.0904318616F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.181913629F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.272345483F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.363827258F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.454259127F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.545740902F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.636172771F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.727654517F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.818086386F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.909568131F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(1.0F, 1.0F, _cubicBezierEasingFunction_1);
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScalarAnimation_0p9_to_1_3()
        {
            const auto result = _scalarAnimation_0p9_to_1_3 = CreateScalarKeyFrameAnimation(0.0F, 0.899999976F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.0904365927F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.181912675F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.272349268F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.363825351F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.454261959F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.545738041F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.636174619F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.727650702F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.818087339F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.909563422F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(1.0F, 1.0F, _cubicBezierEasingFunction_1);
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScalarAnimation_1_to_0p9_0()
        {
            const auto result = _scalarAnimation_1_to_0p9_0 = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.0913811028F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.181723773F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.273104876F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.363447547F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.45482865F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.54517132F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.636552453F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.726895094F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.818276227F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.908618927F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(1.0F, 0.899999976F, _cubicBezierEasingFunction_1);
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScalarAnimation_1_to_0p9_1()
        {
            const auto result = _scalarAnimation_1_to_0p9_1 = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.0913811028F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.181723773F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.273104876F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.363447547F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.45482865F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.54517132F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.636552453F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.726895094F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.818276227F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.908618927F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(1.0F, 0.899999976F, _cubicBezierEasingFunction_1);
            return result;
        }

        // Layer aggregator
        ShapeVisual ShapeVisual_0()
        {
            const auto result = _c.CreateShapeVisual();
            result.Size({ 180.0F, 180.0F });
            const auto shapes = result.Shapes();
            // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
            shapes.Append(SpriteShape_00());
            // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
            shapes.Append(ContainerShape_00());
            // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
            shapes.Append(ContainerShape_10());
            return result;
        }

        StepEasingFunction HoldThenStepEasingFunction()
        {
            const auto result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
            result.IsFinalStepSingleFrame(true);
            return result;
        }

        StepEasingFunction StepThenHoldEasingFunction()
        {
            const auto result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
            result.IsInitialStepSingleFrame(true);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 19
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_00()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, StepThenHoldEasingFunction());
            result.InsertKeyFrame(0.075000003F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.340909094F, { -1064.99194F, -480.0F }, CubicBezierEasingFunction_2());
            result.InsertKeyFrame(0.722727299F, { -1064.99194F, -480.0F }, CubicBezierEasingFunction_3());
            result.InsertKeyFrame(0.893181801F, { -898.0F, -480.0F }, CubicBezierEasingFunction_4());
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 20
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_01()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0818181783F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.347727269F, { -1025.99402F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -1025.99402F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893180728F, { -898.0F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 21
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_02()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0886363611F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354545444F, { -982.495972F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -982.495972F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893179595F, { -898.0F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 22
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_03()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0954545438F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.361363649F, { -943.497986F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -943.497986F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893184066F, { -898.0F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 23
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_04()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.102272727F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.368181825F, { -904.5F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -904.5F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893182933F, { -898.0F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 24
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_05()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.109090909F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.375F, { -862.502014F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -862.502014F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893181801F, { -898.0F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 25
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_06()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.115909092F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.381818175F, { -820.504028F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -820.504028F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893180728F, { -898.0F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 26
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_07()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.008972F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.122727275F, { -735.008972F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.388636351F, { -778.505981F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -778.505981F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893179595F, { -898.0F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 27
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_08()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.12954545F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.722727299F, { -735.007996F, -480.0F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.609000027F, 0.609000027F }));
            result.InsertKeyFrame(0.893184066F, { -898.0F, -480.0F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.050999999F, 1.0F }));
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_09()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 602.099976F, 480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.13636364F, { 602.099976F, 480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.340909094F, { 676.099976F, 480.0F }, CubicBezierEasingFunction_5());
            result.InsertKeyFrame(0.722727299F, { 676.099976F, 480.0F }, CubicBezierEasingFunction_6());
            result.InsertKeyFrame(0.900001109F, { 478.514008F, 480.0F }, CubicBezierEasingFunction_7());
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 18
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_10()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.075000003F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.340909094F, { -1064.99194F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -1064.99194F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893181801F, { -901.900024F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 17
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_11()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0818181783F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.347727269F, { -1025.99402F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -1025.99402F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893180728F, { -901.900024F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 16
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_12()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0886363611F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354545444F, { -982.495972F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -982.495972F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893179595F, { -901.900024F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 15
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_13()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0954545438F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.361363649F, { -943.497986F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -943.497986F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893184066F, { -901.900024F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 14
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_14()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.102272727F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.368181825F, { -904.5F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -904.5F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893182933F, { -901.900024F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 13
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_15()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.109090909F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.375F, { -862.502014F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -862.502014F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893181801F, { -901.900024F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 12
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_16()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.115909092F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.381818175F, { -820.504028F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -820.504028F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893180728F, { -901.900024F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 11
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_17()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.008972F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.122727275F, { -735.008972F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.388636351F, { -778.505981F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -778.505981F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893179595F, { -901.900024F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 10
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_18()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -736.359985F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0170454551F, { -736.359985F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.12954545F, { -735.007996F, -480.0F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.833000004F, 1.0F }));
            result.InsertKeyFrame(0.722727299F, { -735.007996F, -480.0F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.611000001F, 0.611000001F }));
            result.InsertKeyFrame(0.893184066F, { -901.900024F, -480.0F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.0610000007F, 1.0F }));
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_19()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 357.899994F, 480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.13636364F, { 357.899994F, 480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.340909094F, { 280.200012F, 480.0F }, _cubicBezierEasingFunction_5);
            result.InsertKeyFrame(0.722727299F, { 280.200012F, 480.0F }, _cubicBezierEasingFunction_6);
            result.InsertKeyFrame(0.900001109F, { 478.514008F, 480.0F }, _cubicBezierEasingFunction_7);
            return result;
        }

        static IGeometrySource2D CanvasGeometryToIGeometrySource2D(winrt::com_ptr<CanvasGeometry> geo)
        {
            return geo.as<IGeometrySource2D>();
        }

    public:
        _9squares_AlBoardman_AnimatedVisual_UAPv12(Compositor compositor)
            : _c{compositor}
            , _reusableExpressionAnimation(compositor.CreateExpressionAnimation())
        {
            winrt::check_hresult(D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, _d2dFactory.put()));
            const auto _ = Root();
        }

        void Close()
        {
            if (_root)
            {
                _root.Close();
            }
        }

        TimeSpan Duration() const
        {
            return TimeSpan{ c_durationTicks };
        }

        Visual RootVisual() const
        {
            return _root;
        }

        float2 Size() const
        {
            return { 180.0F, 180.0F };
        }

        static bool IsRuntimeCompatible()
        {
            return winrt::Windows::Foundation::Metadata::ApiInformation::IsApiContractPresent(L"Windows.Foundation.UniversalApiContract", 12);
        }
    };

    class _9squares_AlBoardman_AnimatedVisual_UAPv7 : public winrt::implements<_9squares_AlBoardman_AnimatedVisual_UAPv7,
            winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual,
            IClosable>
    {
        winrt::com_ptr<ID2D1Factory> _d2dFactory{ nullptr };
        static constexpr int64_t c_durationTicks{ 58666666L };
        Compositor const _c{ nullptr };
        ExpressionAnimation const _reusableExpressionAnimation{ nullptr };
        CompositionColorBrush _colorBrush_AlmostCoral_FFF77C5E{ nullptr };
        CompositionColorBrush _colorBrush_AlmostMediumSeaGreen_FF3DBC5B{ nullptr };
        CompositionPathGeometry _pathGeometry_0{ nullptr };
        CompositionPathGeometry _pathGeometry_1{ nullptr };
        CompositionPathGeometry _pathGeometry_2{ nullptr };
        CompositionPathGeometry _pathGeometry_3{ nullptr };
        CompositionPathGeometry _pathGeometry_4{ nullptr };
        CompositionPathGeometry _pathGeometry_5{ nullptr };
        CompositionPathGeometry _pathGeometry_6{ nullptr };
        CompositionPathGeometry _pathGeometry_7{ nullptr };
        CompositionPathGeometry _pathGeometry_8{ nullptr };
        ContainerVisual _root{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_0{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_1{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_2{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_3{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_4{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_5{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_6{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_7{ nullptr };
        ExpressionAnimation _rootProgress{ nullptr };
        ExpressionAnimation _rootProgressRemapped_0{ nullptr };
        ExpressionAnimation _rootProgressRemapped_1{ nullptr };
        ExpressionAnimation _rootProgressRemapped_2{ nullptr };
        ExpressionAnimation _rootProgressRemapped_3{ nullptr };
        ExpressionAnimation _rootProgressRemapped_4{ nullptr };
        ExpressionAnimation _rootProgressRemapped_5{ nullptr };
        ExpressionAnimation _rootProgressRemapped_6{ nullptr };
        ExpressionAnimation _rootProgressRemapped_7{ nullptr };
        ExpressionAnimation _rootProgressRemapped_8{ nullptr };
        ScalarKeyFrameAnimation _scalarAnimation_0p9_to_1_0{ nullptr };
        ScalarKeyFrameAnimation _scalarAnimation_0p9_to_1_1{ nullptr };
        ScalarKeyFrameAnimation _scalarAnimation_0p9_to_1_2{ nullptr };
        ScalarKeyFrameAnimation _scalarAnimation_0p9_to_1_3{ nullptr };
        ScalarKeyFrameAnimation _scalarAnimation_1_to_0p9_0{ nullptr };
        ScalarKeyFrameAnimation _scalarAnimation_1_to_0p9_1{ nullptr };
        StepEasingFunction _holdThenStepEasingFunction{ nullptr };
        StepEasingFunction _stepThenHoldEasingFunction{ nullptr };

        static void StartProgressBoundAnimation(
            CompositionObject target,
            winrt::hstring animatedPropertyName,
            CompositionAnimation animation,
            ExpressionAnimation controllerProgressExpression)
        {
            target.StartAnimation(animatedPropertyName, animation);
            const auto controller = target.TryGetAnimationController(animatedPropertyName);
            controller.Pause();
            controller.StartAnimation(L"Progress", controllerProgressExpression);
        }

        ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateScalarKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, float2 initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateVector2KeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, float3x2 transformMatrix)
        {
            const auto result = _c.CreateSpriteShape(geometry);
            result.TransformMatrix(transformMatrix);
            return result;
        }

        CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, float3x2 transformMatrix, CompositionBrush fillBrush)
        {
            const auto result = _c.CreateSpriteShape(geometry);
            result.TransformMatrix(transformMatrix);
            result.FillBrush(fillBrush);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_0()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 116.994003F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 116.994003F, 64.6139984F }, { 64.6139984F, 116.994003F }, { 0.0F, 116.994003F } });
            sink->AddBezier({ { -64.6139984F, 116.994003F }, { -116.994003F, 64.6139984F }, { -116.994003F, 0.0F } });
            sink->AddBezier({ { -116.994003F, -64.6139984F }, { -64.6139984F, -116.994003F }, { 0.0F, -116.994003F } });
            sink->AddBezier({ { 64.6139984F, -116.994003F }, { 116.994003F, -64.6139984F }, { 116.994003F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_1()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 155.992004F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 155.992004F, 86.1520004F }, { 86.1520004F, 155.992004F }, { 0.0F, 155.992004F } });
            sink->AddBezier({ { -86.1520004F, 155.992004F }, { -155.992004F, 86.1520004F }, { -155.992004F, 0.0F } });
            sink->AddBezier({ { -155.992004F, -86.1520004F }, { -86.1520004F, -155.992004F }, { 0.0F, -155.992004F } });
            sink->AddBezier({ { 86.1520004F, -155.992004F }, { 155.992004F, -86.1520004F }, { 155.992004F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_2()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 199.490005F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 199.490005F, 110.175003F }, { 110.175003F, 199.490005F }, { 0.0F, 199.490005F } });
            sink->AddBezier({ { -110.175003F, 199.490005F }, { -199.490005F, 110.175003F }, { -199.490005F, 0.0F } });
            sink->AddBezier({ { -199.490005F, -110.175003F }, { -110.175003F, -199.490005F }, { 0.0F, -199.490005F } });
            sink->AddBezier({ { 110.175003F, -199.490005F }, { 199.490005F, -110.175003F }, { 199.490005F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_3()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 238.488007F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 238.488007F, 131.712997F }, { 131.712997F, 238.488007F }, { 0.0F, 238.488007F } });
            sink->AddBezier({ { -131.712997F, 238.488007F }, { -238.488007F, 131.712997F }, { -238.488007F, 0.0F } });
            sink->AddBezier({ { -238.488007F, -131.712997F }, { -131.712997F, -238.488007F }, { 0.0F, -238.488007F } });
            sink->AddBezier({ { 131.712997F, -238.488007F }, { 238.488007F, -131.712997F }, { 238.488007F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_4()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 277.485992F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 277.485992F, 153.251007F }, { 153.251007F, 277.485992F }, { 0.0F, 277.485992F } });
            sink->AddBezier({ { -153.251007F, 277.485992F }, { -277.485992F, 153.251007F }, { -277.485992F, 0.0F } });
            sink->AddBezier({ { -277.485992F, -153.251007F }, { -153.251007F, -277.485992F }, { 0.0F, -277.485992F } });
            sink->AddBezier({ { 153.251007F, -277.485992F }, { 277.485992F, -153.251007F }, { 277.485992F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_5()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 319.484009F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 319.484009F, 176.445999F }, { 176.445999F, 319.484009F }, { 0.0F, 319.484009F } });
            sink->AddBezier({ { -176.445999F, 319.484009F }, { -319.484009F, 176.445999F }, { -319.484009F, 0.0F } });
            sink->AddBezier({ { -319.484009F, -176.445999F }, { -176.445999F, -319.484009F }, { 0.0F, -319.484009F } });
            sink->AddBezier({ { 176.445999F, -319.484009F }, { 319.484009F, -176.445999F }, { 319.484009F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_6()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 361.481995F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 361.481995F, 199.641006F }, { 199.641006F, 361.481995F }, { 0.0F, 361.481995F } });
            sink->AddBezier({ { -199.641006F, 361.481995F }, { -361.481995F, 199.641006F }, { -361.481995F, 0.0F } });
            sink->AddBezier({ { -361.481995F, -199.641006F }, { -199.641006F, -361.481995F }, { 0.0F, -361.481995F } });
            sink->AddBezier({ { 199.641006F, -361.481995F }, { 361.481995F, -199.641006F }, { 361.481995F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_7()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 403.480011F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 403.480011F, 222.835999F }, { 222.835999F, 403.480011F }, { 0.0F, 403.480011F } });
            sink->AddBezier({ { -222.835999F, 403.480011F }, { -403.480011F, 222.835999F }, { -403.480011F, 0.0F } });
            sink->AddBezier({ { -403.480011F, -222.835999F }, { -222.835999F, -403.480011F }, { 0.0F, -403.480011F } });
            sink->AddBezier({ { 222.835999F, -403.480011F }, { 403.480011F, -222.835999F }, { 403.480011F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_8()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 446.977997F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 446.977997F, 246.858994F }, { 246.858994F, 446.977997F }, { 0.0F, 446.977997F } });
            sink->AddBezier({ { -246.858994F, 446.977997F }, { -446.97699F, 246.858994F }, { -446.97699F, 0.0F } });
            sink->AddBezier({ { -446.97699F, -246.858994F }, { -246.858994F, -446.977997F }, { 0.0F, -446.977997F } });
            sink->AddBezier({ { 246.858994F, -446.977997F }, { 446.977997F, -246.858994F }, { 446.977997F, 0.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        CompositionColorBrush ColorBrush_AlmostCoral_FFF77C5E()
        {
            return _colorBrush_AlmostCoral_FFF77C5E = _c.CreateColorBrush({ 0xFF, 0xF7, 0x7C, 0x5E });
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        CompositionColorBrush ColorBrush_AlmostDarkSlateGray_FF303030()
        {
            return _c.CreateColorBrush({ 0xFF, 0x30, 0x30, 0x30 });
        }

        CompositionColorBrush ColorBrush_AlmostMediumSeaGreen_FF3DBC5B()
        {
            return _colorBrush_AlmostMediumSeaGreen_FF3DBC5B = _c.CreateColorBrush({ 0xFF, 0x3D, 0xBC, 0x5B });
        }

        // Layer aggregator
        // Transforms for NULL CONTROL
        CompositionContainerShape ContainerShape_00()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.74000001F, 0.74000001F });
            // Offset:<-0.0017700195, -0.0017700195>, Scale:<0.16667, 0.16667>
            result.TransformMatrix({ 0.166669995F, 0.0F, 0.0F, 0.166669995F, -0.00177001953F, -0.00177001953F });
            const auto shapes = result.Shapes();
            // Transforms: Group 19
            shapes.Append(ContainerShape_01());
            // Transforms: Group 20
            shapes.Append(ContainerShape_02());
            // Transforms: Group 21
            shapes.Append(ContainerShape_03());
            // Transforms: Group 22
            shapes.Append(ContainerShape_04());
            // Transforms: Group 23
            shapes.Append(ContainerShape_05());
            // Transforms: Group 24
            shapes.Append(ContainerShape_06());
            // Transforms: Group 25
            shapes.Append(ContainerShape_07());
            // Transforms: Group 26
            shapes.Append(ContainerShape_08());
            // Transforms: Group 27
            shapes.Append(ContainerShape_09());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_180_to_0(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_09(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 19
        CompositionContainerShape ContainerShape_01()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 18 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_01());
            StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0p9_to_1_0(), RootProgressRemapped_0());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_0, _rootProgressRemapped_0);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_00(), RootProgress());
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 20
        CompositionContainerShape ContainerShape_02()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 17 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_02());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_0, RootProgressRemapped_1());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_0, _rootProgressRemapped_1);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_01(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 21
        CompositionContainerShape ContainerShape_03()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 16 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_03());
            StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0p9_to_1_1(), RootProgressRemapped_2());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_1, _rootProgressRemapped_2);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_02(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 22
        CompositionContainerShape ContainerShape_04()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 15 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_04());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_1, RootProgressRemapped_3());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_1, _rootProgressRemapped_3);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_03(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 23
        CompositionContainerShape ContainerShape_05()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 14 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_05());
            StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0p9_to_1_2(), RootProgressRemapped_4());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_4);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_04(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 24
        CompositionContainerShape ContainerShape_06()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 13 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_06());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_0, RootProgressRemapped_5());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_0, _rootProgressRemapped_5);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_05(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 25
        CompositionContainerShape ContainerShape_07()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 12 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_07());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_2, RootProgressRemapped_6());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_6);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_06(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 26
        CompositionContainerShape ContainerShape_08()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 11 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_08());
            StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0p9_to_1_3(), RootProgressRemapped_7());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_3, _rootProgressRemapped_7);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_07(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 27
        CompositionContainerShape ContainerShape_09()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 10 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_09());
            StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1_to_0p9_0(), RootProgressRemapped_8());
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1_to_0p9_0, _rootProgressRemapped_8);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_08(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Transforms for NULL CONTROL 2
        CompositionContainerShape ContainerShape_10()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.74000001F, 0.74000001F });
            // Offset:<-0.0017700195, -0.0017700195>, Scale:<0.16667, 0.16667>
            result.TransformMatrix({ 0.166669995F, 0.0F, 0.0F, 0.166669995F, -0.00177001953F, -0.00177001953F });
            const auto shapes = result.Shapes();
            // Transforms: Group 18
            shapes.Append(ContainerShape_11());
            // Transforms: Group 17
            shapes.Append(ContainerShape_12());
            // Transforms: Group 16
            shapes.Append(ContainerShape_13());
            // Transforms: Group 15
            shapes.Append(ContainerShape_14());
            // Transforms: Group 14
            shapes.Append(ContainerShape_15());
            // Transforms: Group 13
            shapes.Append(ContainerShape_16());
            // Transforms: Group 12
            shapes.Append(ContainerShape_17());
            // Transforms: Group 11
            shapes.Append(ContainerShape_18());
            // Transforms: Group 10
            shapes.Append(ContainerShape_19());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_180(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_19(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 18
        CompositionContainerShape ContainerShape_11()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 18 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_10());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_0);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_0);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_10(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 17
        CompositionContainerShape ContainerShape_12()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 17 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_11());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_1);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_1);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_11(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 16
        CompositionContainerShape ContainerShape_13()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 16 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_12());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_3, _rootProgressRemapped_2);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_3, _rootProgressRemapped_2);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_12(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 15
        CompositionContainerShape ContainerShape_14()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 15 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_13());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_3, _rootProgressRemapped_3);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_3, _rootProgressRemapped_3);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_13(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 14
        CompositionContainerShape ContainerShape_15()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 14 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_14());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_4);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_4);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_14(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 13
        CompositionContainerShape ContainerShape_16()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 13 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_15());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_0, _rootProgressRemapped_5);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_0, _rootProgressRemapped_5);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_15(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 12
        CompositionContainerShape ContainerShape_17()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 12 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_16());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_6);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_2, _rootProgressRemapped_6);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_16(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 11
        CompositionContainerShape ContainerShape_18()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 11 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_17());
            StartProgressBoundAnimation(result, L"Scale.X", _scalarAnimation_0p9_to_1_3, _rootProgressRemapped_7);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p9_to_1_3, _rootProgressRemapped_7);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_17(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms for Group 10
        CompositionContainerShape ContainerShape_19()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 960.0F, 540.0F });
            // ShapeGroup: Group 10 Offset:<960, 540>
            result.Shapes().Append(SpriteShape_18());
            StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1_to_0p9_1(), _rootProgressRemapped_8);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1_to_0p9_1, _rootProgressRemapped_8);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_18(), _rootProgress);
            return result;
        }

        CompositionPathGeometry PathGeometry_0()
        {
            return _pathGeometry_0 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_0())));
        }

        CompositionPathGeometry PathGeometry_1()
        {
            return _pathGeometry_1 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_1())));
        }

        CompositionPathGeometry PathGeometry_2()
        {
            return _pathGeometry_2 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_2())));
        }

        CompositionPathGeometry PathGeometry_3()
        {
            return _pathGeometry_3 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_3())));
        }

        CompositionPathGeometry PathGeometry_4()
        {
            return _pathGeometry_4 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_4())));
        }

        CompositionPathGeometry PathGeometry_5()
        {
            return _pathGeometry_5 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_5())));
        }

        CompositionPathGeometry PathGeometry_6()
        {
            return _pathGeometry_6 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_6())));
        }

        CompositionPathGeometry PathGeometry_7()
        {
            return _pathGeometry_7 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_7())));
        }

        CompositionPathGeometry PathGeometry_8()
        {
            return _pathGeometry_8 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_8())));
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // SolidLayerRectangle.RectangleGeometry
        CompositionRoundedRectangleGeometry RoundedRectangle_1080()
        {
            const auto result = _c.CreateRoundedRectangleGeometry();
            result.CornerRadius({ 9.99999997E-07F, 9.99999997E-07F });
            result.Size({ 1080.0F, 1080.0F });
            return result;
        }

        // Layer aggregator
        // SolidLayerRectangle
        CompositionSpriteShape SpriteShape_00()
        {
            // Offset:<-0.0017700195, -0.0017700195>, Scale:<0.16667, 0.16667>
            const auto result = CreateSpriteShape(RoundedRectangle_1080(), { 0.166669995F, 0.0F, 0.0F, 0.166669995F, -0.00177001953F, -0.00177001953F }, ColorBrush_AlmostDarkSlateGray_FF303030());
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 19
        // Path 1
        CompositionSpriteShape SpriteShape_01()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_0(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(ColorBrush_AlmostMediumSeaGreen_FF3DBC5B());
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 20
        // Path 1
        CompositionSpriteShape SpriteShape_02()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_1(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostMediumSeaGreen_FF3DBC5B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 21
        // Path 1
        CompositionSpriteShape SpriteShape_03()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_2(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostMediumSeaGreen_FF3DBC5B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 22
        // Path 1
        CompositionSpriteShape SpriteShape_04()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_3(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostMediumSeaGreen_FF3DBC5B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 23
        // Path 1
        CompositionSpriteShape SpriteShape_05()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_4(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostMediumSeaGreen_FF3DBC5B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 24
        // Path 1
        CompositionSpriteShape SpriteShape_06()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_5(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostMediumSeaGreen_FF3DBC5B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 25
        // Path 1
        CompositionSpriteShape SpriteShape_07()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_6(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostMediumSeaGreen_FF3DBC5B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 26
        // Path 1
        CompositionSpriteShape SpriteShape_08()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_7(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostMediumSeaGreen_FF3DBC5B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 27
        // Path 1
        CompositionSpriteShape SpriteShape_09()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(PathGeometry_8(), { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostMediumSeaGreen_FF3DBC5B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 18
        // Path 1
        CompositionSpriteShape SpriteShape_10()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_0, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(ColorBrush_AlmostCoral_FFF77C5E());
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 17
        // Path 1
        CompositionSpriteShape SpriteShape_11()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostCoral_FFF77C5E);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 16
        // Path 1
        CompositionSpriteShape SpriteShape_12()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostCoral_FFF77C5E);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 15
        // Path 1
        CompositionSpriteShape SpriteShape_13()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_3, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostCoral_FFF77C5E);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 14
        // Path 1
        CompositionSpriteShape SpriteShape_14()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_4, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostCoral_FFF77C5E);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 13
        // Path 1
        CompositionSpriteShape SpriteShape_15()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_5, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostCoral_FFF77C5E);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 12
        // Path 1
        CompositionSpriteShape SpriteShape_16()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_6, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostCoral_FFF77C5E);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 11
        // Path 1
        CompositionSpriteShape SpriteShape_17()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_7, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostCoral_FFF77C5E);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 10
        // Path 1
        CompositionSpriteShape SpriteShape_18()
        {
            // Offset:<960, 540>
            const auto result = CreateSpriteShape(_pathGeometry_8, { 1.0F, 0.0F, 0.0F, 1.0F, 960.0F, 540.0F });
            result.StrokeBrush(_colorBrush_AlmostCoral_FFF77C5E);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // The root of the composition.
        ContainerVisual Root()
        {
            const auto result = _root = _c.CreateContainerVisual();
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"Progress", 0.0F);
            // Layer aggregator
            result.Children().InsertAtTop(ShapeVisual_0());
            return result;
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_0()
        {
            return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.200000003F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_1()
        {
            return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction({ 0.100000001F, 0.0F }, { 0.200000003F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_2()
        {
            return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.0F }, { 0.0359999985F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_3()
        {
            return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.0359999985F, 0.0359999985F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_4()
        {
            return _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.0359999985F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_5()
        {
            return _cubicBezierEasingFunction_5 = _c.CreateCubicBezierEasingFunction({ 0.0130000003F, 0.0F }, { 0.0F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_6()
        {
            return _cubicBezierEasingFunction_6 = _c.CreateCubicBezierEasingFunction({ 0.100000001F, 0.100000001F }, { 0.200000003F, 0.200000003F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_7()
        {
            return _cubicBezierEasingFunction_7 = _c.CreateCubicBezierEasingFunction({ 0.0500000007F, 0.0F }, { 0.0F, 1.0F });
        }

        ExpressionAnimation RootProgress()
        {
            const auto result = _rootProgress = _c.CreateExpressionAnimation(L"_.Progress");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_0()
        {
            const auto result = _rootProgressRemapped_0 = _c.CreateExpressionAnimation(L"(_.Progress*0.9147657)+0.03638273");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_1()
        {
            const auto result = _rootProgressRemapped_1 = _c.CreateExpressionAnimation(L"(_.Progress*0.9147657)+0.03118519");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_2()
        {
            const auto result = _rootProgressRemapped_2 = _c.CreateExpressionAnimation(L"(_.Progress*0.9147609)+0.02598753");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_3()
        {
            const auto result = _rootProgressRemapped_3 = _c.CreateExpressionAnimation(L"(_.Progress*0.9147609)+0.02079002");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_4()
        {
            const auto result = _rootProgressRemapped_4 = _c.CreateExpressionAnimation(L"(_.Progress*0.9147657)+0.0155926");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_5()
        {
            const auto result = _rootProgressRemapped_5 = _c.CreateExpressionAnimation(L"(_.Progress*0.9147657)+0.01039506");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_6()
        {
            const auto result = _rootProgressRemapped_6 = _c.CreateExpressionAnimation(L"(_.Progress*0.9147657)+0.005197532");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_7()
        {
            const auto result = _rootProgressRemapped_7 = _c.CreateExpressionAnimation(L"_.Progress*0.9147609");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped_8()
        {
            const auto result = _rootProgressRemapped_8 = _c.CreateExpressionAnimation(L"(_.Progress*0.913811)+0.08618899");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_180()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.722727299F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.900001109F, 180.0F, _c.CreateCubicBezierEasingFunction({ 0.194000006F, 0.0F }, { 0.379999995F, 1.0F }));
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_180_to_0()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 180.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.722727299F, 180.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.900001109F, 0.0F, _c.CreateCubicBezierEasingFunction({ 0.188999996F, 0.0F }, { 0.379999995F, 1.0F }));
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScalarAnimation_0p9_to_1_0()
        {
            const auto result = _scalarAnimation_0p9_to_1_0 = CreateScalarKeyFrameAnimation(0.0F, 0.899999976F, HoldThenStepEasingFunction());
            result.InsertKeyFrame(0.0904318616F, 1.0F, CubicBezierEasingFunction_0());
            result.InsertKeyFrame(0.181913629F, 0.899999976F, CubicBezierEasingFunction_1());
            result.InsertKeyFrame(0.272345483F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.363827258F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.454259127F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.545740902F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.636172771F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.727654517F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.818086386F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.909568131F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(1.0F, 1.0F, _cubicBezierEasingFunction_1);
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScalarAnimation_0p9_to_1_1()
        {
            const auto result = _scalarAnimation_0p9_to_1_1 = CreateScalarKeyFrameAnimation(0.0F, 0.899999976F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.0904365927F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.181912675F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.272349268F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.363825351F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.454261959F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.545738041F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.636174619F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.727650702F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.818087339F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.909563422F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(1.0F, 1.0F, _cubicBezierEasingFunction_1);
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScalarAnimation_0p9_to_1_2()
        {
            const auto result = _scalarAnimation_0p9_to_1_2 = CreateScalarKeyFrameAnimation(0.0F, 0.899999976F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.0904318616F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.181913629F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.272345483F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.363827258F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.454259127F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.545740902F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.636172771F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.727654517F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.818086386F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.909568131F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(1.0F, 1.0F, _cubicBezierEasingFunction_1);
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScalarAnimation_0p9_to_1_3()
        {
            const auto result = _scalarAnimation_0p9_to_1_3 = CreateScalarKeyFrameAnimation(0.0F, 0.899999976F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.0904365927F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.181912675F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.272349268F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.363825351F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.454261959F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.545738041F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.636174619F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.727650702F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.818087339F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.909563422F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(1.0F, 1.0F, _cubicBezierEasingFunction_1);
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScalarAnimation_1_to_0p9_0()
        {
            const auto result = _scalarAnimation_1_to_0p9_0 = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.0913811028F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.181723773F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.273104876F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.363447547F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.45482865F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.54517132F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.636552453F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.726895094F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.818276227F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.908618927F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(1.0F, 0.899999976F, _cubicBezierEasingFunction_1);
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScalarAnimation_1_to_0p9_1()
        {
            const auto result = _scalarAnimation_1_to_0p9_1 = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.0913811028F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.181723773F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.273104876F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.363447547F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.45482865F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.54517132F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.636552453F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.726895094F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.818276227F, 0.899999976F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(0.908618927F, 1.0F, _cubicBezierEasingFunction_1);
            result.InsertKeyFrame(1.0F, 0.899999976F, _cubicBezierEasingFunction_1);
            return result;
        }

        // Layer aggregator
        ShapeVisual ShapeVisual_0()
        {
            const auto result = _c.CreateShapeVisual();
            result.Size({ 180.0F, 180.0F });
            const auto shapes = result.Shapes();
            // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
            shapes.Append(SpriteShape_00());
            // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
            shapes.Append(ContainerShape_00());
            // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
            shapes.Append(ContainerShape_10());
            return result;
        }

        StepEasingFunction HoldThenStepEasingFunction()
        {
            const auto result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
            result.IsFinalStepSingleFrame(true);
            return result;
        }

        StepEasingFunction StepThenHoldEasingFunction()
        {
            const auto result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
            result.IsInitialStepSingleFrame(true);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 19
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_00()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, StepThenHoldEasingFunction());
            result.InsertKeyFrame(0.075000003F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.340909094F, { -1064.99194F, -480.0F }, CubicBezierEasingFunction_2());
            result.InsertKeyFrame(0.722727299F, { -1064.99194F, -480.0F }, CubicBezierEasingFunction_3());
            result.InsertKeyFrame(0.893181801F, { -898.0F, -480.0F }, CubicBezierEasingFunction_4());
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 20
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_01()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0818181783F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.347727269F, { -1025.99402F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -1025.99402F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893180728F, { -898.0F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 21
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_02()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0886363611F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354545444F, { -982.495972F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -982.495972F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893179595F, { -898.0F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 22
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_03()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0954545438F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.361363649F, { -943.497986F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -943.497986F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893184066F, { -898.0F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 23
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_04()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.102272727F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.368181825F, { -904.5F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -904.5F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893182933F, { -898.0F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 24
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_05()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.109090909F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.375F, { -862.502014F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -862.502014F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893181801F, { -898.0F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 25
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_06()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.115909092F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.381818175F, { -820.504028F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -820.504028F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893180728F, { -898.0F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 26
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_07()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.008972F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.122727275F, { -735.008972F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.388636351F, { -778.505981F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -778.505981F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893179595F, { -898.0F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 27
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_08()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.12954545F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.722727299F, { -735.007996F, -480.0F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.609000027F, 0.609000027F }));
            result.InsertKeyFrame(0.893184066F, { -898.0F, -480.0F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.050999999F, 1.0F }));
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_09()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 602.099976F, 480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.13636364F, { 602.099976F, 480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.340909094F, { 676.099976F, 480.0F }, CubicBezierEasingFunction_5());
            result.InsertKeyFrame(0.722727299F, { 676.099976F, 480.0F }, CubicBezierEasingFunction_6());
            result.InsertKeyFrame(0.900001109F, { 478.514008F, 480.0F }, CubicBezierEasingFunction_7());
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 18
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_10()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.075000003F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.340909094F, { -1064.99194F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -1064.99194F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893181801F, { -901.900024F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 17
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_11()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0818181783F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.347727269F, { -1025.99402F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -1025.99402F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893180728F, { -901.900024F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 16
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_12()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0886363611F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354545444F, { -982.495972F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -982.495972F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893179595F, { -901.900024F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 15
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_13()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0954545438F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.361363649F, { -943.497986F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -943.497986F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893184066F, { -901.900024F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 14
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_14()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.102272727F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.368181825F, { -904.5F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -904.5F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893182933F, { -901.900024F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 13
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_15()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.109090909F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.375F, { -862.502014F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -862.502014F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893181801F, { -901.900024F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 12
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_16()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.007996F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.115909092F, { -735.007996F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.381818175F, { -820.504028F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -820.504028F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893180728F, { -901.900024F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 11
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_17()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -735.008972F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.122727275F, { -735.008972F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.388636351F, { -778.505981F, -480.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.722727299F, { -778.505981F, -480.0F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.893179595F, { -901.900024F, -480.0F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Transforms: Group 10
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_18()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -736.359985F, -480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0170454551F, { -736.359985F, -480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.12954545F, { -735.007996F, -480.0F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.833000004F, 1.0F }));
            result.InsertKeyFrame(0.722727299F, { -735.007996F, -480.0F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.611000001F, 0.611000001F }));
            result.InsertKeyFrame(0.893184066F, { -901.900024F, -480.0F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.0610000007F, 1.0F }));
            return result;
        }

        // - Layer aggregator
        // Solid layer: Dark Gray Solid 1 Scale:0.16667,0.16667, Offset:<-450, -450>
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_19()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 357.899994F, 480.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.13636364F, { 357.899994F, 480.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.340909094F, { 280.200012F, 480.0F }, _cubicBezierEasingFunction_5);
            result.InsertKeyFrame(0.722727299F, { 280.200012F, 480.0F }, _cubicBezierEasingFunction_6);
            result.InsertKeyFrame(0.900001109F, { 478.514008F, 480.0F }, _cubicBezierEasingFunction_7);
            return result;
        }

        static IGeometrySource2D CanvasGeometryToIGeometrySource2D(winrt::com_ptr<CanvasGeometry> geo)
        {
            return geo.as<IGeometrySource2D>();
        }

    public:
        _9squares_AlBoardman_AnimatedVisual_UAPv7(Compositor compositor)
            : _c{compositor}
            , _reusableExpressionAnimation(compositor.CreateExpressionAnimation())
        {
            winrt::check_hresult(D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, _d2dFactory.put()));
            const auto _ = Root();
        }

        void Close()
        {
            if (_root)
            {
                _root.Close();
            }
        }

        TimeSpan Duration() const
        {
            return TimeSpan{ c_durationTicks };
        }

        Visual RootVisual() const
        {
            return _root;
        }

        float2 Size() const
        {
            return { 180.0F, 180.0F };
        }

        static bool IsRuntimeCompatible()
        {
            return winrt::Windows::Foundation::Metadata::ApiInformation::IsApiContractPresent(L"Windows.Foundation.UniversalApiContract", 7);
        }
    };

    winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual _9squares_AlBoardman::TryCreateAnimatedVisual(
        Compositor const& compositor,
        IInspectable& diagnostics)
    {
        diagnostics = nullptr;

        if (_9squares_AlBoardman_AnimatedVisual_UAPv12::IsRuntimeCompatible())
        {
            return winrt::make<_9squares_AlBoardman_AnimatedVisual_UAPv12>(compositor);
        }

        if (_9squares_AlBoardman_AnimatedVisual_UAPv7::IsRuntimeCompatible())
        {
            return winrt::make<_9squares_AlBoardman_AnimatedVisual_UAPv7>(compositor);
        }

        return nullptr;
    }

    double _9squares_AlBoardman::FrameToProgress(double frameNumber)
    {
        return frameNumber / 176.0;
    }

    winrt::Windows::Foundation::Collections::IMapView<hstring, double> _9squares_AlBoardman::Markers()
    {
        return winrt::single_threaded_map<winrt::hstring, double>(
            std::map<winrt::hstring, double>
            {
            }
        ).GetView();
    }

    void _9squares_AlBoardman::SetColorProperty(hstring const&, Color)
    {
    }

    void _9squares_AlBoardman::SetScalarProperty(hstring const&, double)
    {
    }
} // end namespace

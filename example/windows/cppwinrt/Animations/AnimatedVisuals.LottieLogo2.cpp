//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.0.0-build.90+ga9eb6fa111
//       
//       Command:
//           LottieGen -InterfaceBaseName Microsoft.UI.Xaml.Controls.IAnimatedVisual -Language Cppwinrt -WinUIVersion 2.4 -InputFile LottieLogo2.json
//       
//       Input file:
//           LottieLogo2.json (88590 bytes created 20:50-08:00 Dec 28 2020)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   980 |
// |--------------------------+-------|
// | Expression animators     |   197 |
// | KeyFrame animators       |   129 |
// | Reference parameters     |   187 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     2 |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |    37 |
// | PathKeyFrameAnimations   |     - |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |    46 |
// | CompositionSpriteShapes  |    65 |
// |--------------------------+-------|
// | Brushes                  |     5 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
#include "pch.h"
#include "AnimatedVisuals.LottieLogo2.h"
#include "AnimatedVisuals.LottieLogo2.g.cpp"
#include <winrt/Windows.Foundation.Metadata.h>
#include <winrt/Windows.UI.Composition.h>
#include "d2d1.h"
#include <d2d1_1.h>
#include <d2d1helper.h>
#include <Windows.Graphics.Interop.h>
#ifdef BUILD_WINDOWS
namespace ABI
{
#include <Windows.Graphics.Effects.Interop.h>
}
#else
#include <Windows.Graphics.Effects.Interop.h>
#endif
#include <winrt/Windows.Graphics.Effects.h>

using namespace winrt::Windows::Foundation;
using namespace winrt::Windows::Foundation::Numerics;
using namespace winrt::Windows::Graphics;
using namespace winrt::Windows::UI;
using namespace winrt::Windows::UI::Composition;
using TimeSpan = winrt::Windows::Foundation::TimeSpan;

namespace winrt::AnimatedVisuals::implementation
{
    class CanvasGeometry : public winrt::implements<CanvasGeometry,
        IGeometrySource2D,
        ::ABI::Windows::Graphics::IGeometrySource2DInterop>
    {
        winrt::com_ptr<ID2D1Geometry> _geometry{ nullptr };

    public:
        CanvasGeometry(winrt::com_ptr<ID2D1Geometry> geometry)
            : _geometry{ geometry }
        { }

        // IGeometrySource2D.
        winrt::com_ptr<ID2D1Geometry> Geometry() { return _geometry; }

        // IGeometrySource2DInterop.
        IFACEMETHODIMP GetGeometry(ID2D1Geometry** value) override
        {
            _geometry.copy_to(value);
            return S_OK;
        }

        // IGeometrySource2DInterop.
        IFACEMETHODIMP TryGetGeometryUsingFactory(ID2D1Factory*, ID2D1Geometry**) override
        {
            return E_NOTIMPL;
        }
    };
    class LottieLogo2_AnimatedVisual : public winrt::implements<LottieLogo2_AnimatedVisual,
            winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual,
            IClosable>
    {
        winrt::com_ptr<ID2D1Factory> _d2dFactory{ nullptr };
        static constexpr int64_t c_durationTicks{ 126000000L };
        Compositor const _c{ nullptr };
        ExpressionAnimation const _reusableExpressionAnimation{ nullptr };
        CompositionColorBrush _animatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_0{ nullptr };
        CompositionColorBrush _animatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_1{ nullptr };
        CompositionColorBrush _colorBrush_AlmostDarkTurquoise_FF00D1C1{ nullptr };
        CompositionColorBrush _colorBrush_AlmostMediumTurquoise_FF33CEC1{ nullptr };
        CompositionColorBrush _colorBrush_AlmostTeal_FF007A87{ nullptr };
        CompositionEllipseGeometry _ellipse_22p3_2{ nullptr };
        CompositionEllipseGeometry _ellipse_28p117{ nullptr };
        CompositionPath _path_0{ nullptr };
        CompositionPath _path_1{ nullptr };
        CompositionPath _path_2{ nullptr };
        CompositionPath _path_3{ nullptr };
        CompositionPath _path_4{ nullptr };
        CompositionPath _path_5{ nullptr };
        CompositionPath _path_6{ nullptr };
        CompositionPath _path_7{ nullptr };
        CompositionPathGeometry _pathGeometry_11{ nullptr };
        CompositionPathGeometry _pathGeometry_21{ nullptr };
        CompositionPathGeometry _pathGeometry_22{ nullptr };
        CompositionPathGeometry _pathGeometry_23{ nullptr };
        CompositionPathGeometry _pathGeometry_24{ nullptr };
        ContainerVisual _root{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_00{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_01{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_02{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_03{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_04{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_05{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_06{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_07{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_08{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_09{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_10{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_11{ nullptr };
        ExpressionAnimation _rootProgress{ nullptr };
        ScalarKeyFrameAnimation _tEndScalarAnimation_0p349_to_0p448{ nullptr };
        ScalarKeyFrameAnimation _tStartScalarAnimation_0p943_to_0p035{ nullptr };
        StepEasingFunction _holdThenStepEasingFunction{ nullptr };
        StepEasingFunction _stepThenHoldEasingFunction{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_00{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_02{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_07{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_16{ nullptr };
        Vector2KeyFrameAnimation _shapeVisibilityAnimation_02{ nullptr };
        Vector2KeyFrameAnimation _shapeVisibilityAnimation_05{ nullptr };
        Vector2KeyFrameAnimation _shapeVisibilityAnimation_08{ nullptr };

        static void StartProgressBoundAnimation(
            CompositionObject target,
            winrt::hstring animatedPropertyName,
            CompositionAnimation animation,
            ExpressionAnimation controllerProgressExpression)
        {
            target.StartAnimation(animatedPropertyName, animation);
            const auto controller = target.TryGetAnimationController(animatedPropertyName);
            controller.Pause();
            controller.StartAnimation(L"Progress", controllerProgressExpression);
        }

        void BindProperty(
            CompositionObject target,
            winrt::hstring animatedPropertyName,
            winrt::hstring expression,
            winrt::hstring referenceParameterName,
            CompositionObject referencedObject)
        {
            _reusableExpressionAnimation.ClearAllParameters();
            _reusableExpressionAnimation.Expression(expression);
            _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
            target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
        }

        ColorKeyFrameAnimation CreateColorKeyFrameAnimation(float initialProgress, Color initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateColorKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InterpolationColorSpace(CompositionColorSpace::Rgb);
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateScalarKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, float2 initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateVector2KeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, float3x2 transformMatrix)
        {
            const auto result = _c.CreateSpriteShape(geometry);
            result.TransformMatrix(transformMatrix);
            return result;
        }

        CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, float3x2 transformMatrix, CompositionBrush fillBrush)
        {
            const auto result = _c.CreateSpriteShape(geometry);
            result.TransformMatrix(transformMatrix);
            result.FillBrush(fillBrush);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_00()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -8.83699989F, -58.2290001F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -8.83699989F, -58.2290001F }, { -10.1630001F, 29.4950008F }, { -35.8339996F, 33.6619987F } });
            sink->AddBezier({ { -44.0579987F, 34.9970016F }, { -50.2319984F, 30.0499992F }, { -51.6879997F, 23.1480007F } });
            sink->AddBezier({ { -53.144001F, 16.2450008F }, { -49.6549988F, 9.15600014F }, { -41.1739998F, 7.29300022F } });
            sink->AddBezier({ { -17.3570004F, 2.05999994F }, { 4.23500013F, 57.1879997F }, { 51.7970009F, 44.1780014F } });
            sink->AddBezier({ { 51.9570007F, 44.1339989F }, { 52.6870003F, 43.8740005F }, { 53.1879997F, 43.7410011F } });
            sink->AddBezier({ { 53.6889992F, 43.6080017F }, { 68.9710007F, 41.3569984F }, { 140.393997F, 43.6720009F } });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_01()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 15.5F, 138.847F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 20.5F, 90.2220001F }, { 23.4829998F, 41.9830017F }, { 25.0F, -6.875F } });
            sink->AddBezier({ { 28.4880009F, -119.195999F }, { 26.1630001F, -269.065002F }, { 25.0F, -344.0F } });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_02()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 6.28599977F, 136.061005F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 11.2860003F, 87.435997F }, { 13.4829998F, 41.9830017F }, { 15.0F, -6.875F } });
            sink->AddBezier({ { 18.4880009F, -119.195999F }, { 16.1630001F, -269.065002F }, { 15.0F, -344.0F } });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_03()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -30.7199993F, 63.7610016F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -30.6889992F, 63.1669998F }, { -30.7889996F, 50.8470001F }, { -30.7409992F, 45.1920013F } });
            sink->AddBezier({ { -30.6650009F, 36.2140007F }, { -37.3429985F, 27.0739994F }, { -37.3969994F, 27.0139999F } });
            sink->AddBezier({ { -38.5579987F, 25.7140007F }, { -39.7519989F, 24.1469994F }, { -40.6980019F, 22.6609993F } });
            sink->AddBezier({ { -46.637001F, 13.3339996F }, { -47.8400002F, 0.933000028F }, { -37.8730011F, -7.1170001F } });
            sink->AddBezier({ { -13.1960001F, -27.0459995F }, { 8.96000004F, 11.559F }, { 49.5060005F, 11.559F } });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Trail-LB
        // - - Transforms: Trail-LB
        winrt::com_ptr<CanvasGeometry> Geometry_04()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 197.001007F, 282.481995F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 205.707001F, 282.481995F }, { 212.764008F, 275.424988F }, { 212.764008F, 266.718994F } });
            sink->AddBezier({ { 212.764008F, 258.013F }, { 205.707001F, 250.955994F }, { 197.001007F, 250.955994F } });
            sink->AddBezier({ { 188.294998F, 250.955994F }, { 181.237F, 258.013F }, { 181.237F, 266.718994F } });
            sink->AddBezier({ { 181.237F, 275.424988F }, { 188.294998F, 282.481995F }, { 197.001007F, 282.481995F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_05()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -26.6700001F, -0.282999992F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 99.1709976F, 0.0659999996F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_06()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 1.68099999F, -29.9920006F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ -1.68099999F, 29.9920006F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_07()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 1.76800001F, -25.9659996F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ -1.76800001F, 25.9659996F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_08()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 393.066986F, 608.346985F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 217.567001F, 565.0F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_09()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 373.566986F, 514.346985F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 222.567001F, 558.5F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_10()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 357.566986F, 425.846985F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 217.067001F, 554.0F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_11()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -30.1669998F, 598.346985F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 156.567001F, 566.0F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_12()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -25.1669998F, 488.346985F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 158.567001F, 558.5F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_13()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 1.83299994F, 433.846985F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 163.067001F, 552.0F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_14()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 0.859000027F, -21.1429996F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ -4.35900021F, 70.3919983F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_15()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -13.6639996F, -0.144999996F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 75.663002F, 0.289999992F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_16()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -13.6639996F, -0.144999996F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 62.1629982F, 0.289999992F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_17()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 246.649994F, 213.813995F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 340.955994F, 213.628006F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_18()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 86.8330002F, 569.346985F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 173.966995F, 563.900024F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_19()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 97.8330002F, 523.346985F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 173.667007F, 562.900024F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_20()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 104.833F, 484.846985F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 175.667007F, 560.799988F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_21()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 82.8330002F, 569.346985F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 173.966995F, 563.900024F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_22()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 105.833F, 526.346985F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 173.667007F, 562.900024F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_23()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 97.8330002F, 486.846985F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 175.667007F, 560.799988F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // Color
        ColorKeyFrameAnimation ColorAnimation_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_0()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0xFF, 0x00, 0xD1, 0xC1 }, _stepThenHoldEasingFunction);
            // AlmostDarkTurquoise_FF00D1C1
            result.InsertKeyFrame(0.354497343F, { 0xFF, 0x00, 0xD1, 0xC1 }, _holdThenStepEasingFunction);
            // TransparentAlmostDarkTurquoise_0000D1C1
            result.InsertKeyFrame(0.375661373F, { 0x00, 0x00, 0xD1, 0xC1 }, _cubicBezierEasingFunction_00);
            return result;
        }

        // Color
        ColorKeyFrameAnimation ColorAnimation_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_1()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0xFF, 0x00, 0xD1, 0xC1 }, _stepThenHoldEasingFunction);
            // AlmostDarkTurquoise_FF00D1C1
            result.InsertKeyFrame(0.470899463F, { 0xFF, 0x00, 0xD1, 0xC1 }, _holdThenStepEasingFunction);
            // TransparentAlmostDarkTurquoise_0000D1C1
            result.InsertKeyFrame(0.489418F, { 0x00, 0x00, 0xD1, 0xC1 }, _cubicBezierEasingFunction_00);
            return result;
        }

        CompositionColorBrush AnimatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_0()
        {
            const auto result = _animatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_0 = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_0(), _rootProgress);
            return result;
        }

        CompositionColorBrush AnimatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_1()
        {
            const auto result = _animatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_1 = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_1(), _rootProgress);
            return result;
        }

        CompositionColorBrush ColorBrush_AlmostDarkTurquoise_FF00D1C1()
        {
            return _colorBrush_AlmostDarkTurquoise_FF00D1C1 = _c.CreateColorBrush({ 0xFF, 0x00, 0xD1, 0xC1 });
        }

        CompositionColorBrush ColorBrush_AlmostMediumTurquoise_FF33CEC1()
        {
            return _colorBrush_AlmostMediumTurquoise_FF33CEC1 = _c.CreateColorBrush({ 0xFF, 0x33, 0xCE, 0xC1 });
        }

        CompositionColorBrush ColorBrush_AlmostTeal_FF007A87()
        {
            return _colorBrush_AlmostTeal_FF007A87 = _c.CreateColorBrush({ 0xFF, 0x00, 0x7A, 0x87 });
        }

        // Layer aggregator
        // Layer: Circle-LB
        CompositionContainerShape ContainerShape_00()
        {
            const auto result = _c.CreateContainerShape();
            result.Shapes().Append(ContainerShape_01());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_00(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle-LB
        CompositionContainerShape ContainerShape_01()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 165.615005F, 264.614014F });
            result.Scale({ 4.95001984F, 4.95195007F });
            const auto shapes = result.Shapes();
            // Transforms: Circle-LB
            shapes.Append(ContainerShape_02());
            // ShapeGroup: Group 8 Offset:<166.029, 270.643>
            shapes.Append(SpriteShape_01());
            // Transforms: L-LB
            shapes.Append(SpriteShape_02());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_00(), _rootProgress);
            return result;
        }

        // Transforms for Circle-LB
        CompositionContainerShape ContainerShape_02()
        {
            const auto result = _c.CreateContainerShape();
            const auto propertySet = result.Properties();
            propertySet.InsertVector2(L"Anchor", { 40.0F, -210.0F });
            propertySet.InsertVector2(L"Position", { 151.039001F, 86.2699966F });
            result.Scale({ 0.151380002F, 0.151380002F });
            // ShapeGroup: Ellipse 1 Offset:<40, -210>
            result.Shapes().Append(SpriteShape_00());
            BindProperty(result, L"CenterPoint", L"my.Anchor", L"my", result);
            BindProperty(result, L"Offset", L"my.Position-my.Anchor", L"my", result);
            StartProgressBoundAnimation(propertySet, L"Anchor", AnchorVector2Animation(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"Position", PositionVector2Animation(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Trail -LB
        CompositionContainerShape ContainerShape_03()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_04());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_01(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Trail -LB
        CompositionContainerShape ContainerShape_04()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 165.615005F, 264.614014F });
            result.Scale({ 4.95001984F, 4.95195007F });
            const auto shapes = result.Shapes();
            // Transforms: Trail -LB Scale:0.20202,0.20194, Offset:<146.615, 210.395>
            shapes.Append(SpriteShape_03());
            // Transforms: Trail 2 -LB Scale:0.20202,0.20194, Offset:<146.615, 210.395>
            shapes.Append(SpriteShape_04());
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_00, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Circle2-LB
        CompositionContainerShape ContainerShape_05()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_06());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_02(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle2-LB
        CompositionContainerShape ContainerShape_06()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.87221998F, 0.872560024F });
            const auto shapes = result.Shapes();
            // Transforms: Circle2-LB
            shapes.Append(ContainerShape_07());
            // Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
            shapes.Append(SpriteShape_06());
            // Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
            shapes.Append(SpriteShape_07());
            // Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
            shapes.Append(SpriteShape_08());
            // Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
            shapes.Append(SpriteShape_09());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_02(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle2-LB
        // Transforms for Circle2-LB
        CompositionContainerShape ContainerShape_07()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 40.0F, -210.0F });
            result.Scale({ 0.86631F, 0.86631F });
            // ShapeGroup: Ellipse 1 Offset:<40, -210>
            result.Shapes().Append(SpriteShape_05());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_01(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Trail-LB
        CompositionContainerShape ContainerShape_08()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_09());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_03(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Trail-LB
        CompositionContainerShape ContainerShape_09()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.87221998F, 0.872560024F });
            const auto shapes = result.Shapes();
            // Transforms: Trail-LB
            shapes.Append(SpriteShape_10());
            // Transforms: Trail-LB
            shapes.Append(ContainerShape_10());
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_02, _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Trail-LB
        // Transforms for Trail-LB
        CompositionContainerShape ContainerShape_10()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 196.791F, 266.503998F });
            result.Offset({ -125.076004F, -206.192993F });
            result.Scale({ -5.9000001F, 5.9000001F });
            // ShapeGroup: Ellipse 1 Offset:<196, 267>
            result.Shapes().Append(SpriteShape_11());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_84p9_to_m117p5(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Trail-LB
        CompositionContainerShape ContainerShape_11()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_12());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_04(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Trail-LB
        CompositionContainerShape ContainerShape_12()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.87221998F, 0.872560024F });
            // Transforms: Trail-LB
            result.Shapes().Append(ContainerShape_13());
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_02, _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Trail-LB
        // Transforms for Trail-LB
        CompositionContainerShape ContainerShape_13()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 196.791F, 266.503998F });
            result.Offset({ -125.076004F, -206.192993F });
            result.Scale({ -5.9000001F, 5.9000001F });
            const auto shapes = result.Shapes();
            // ShapeGroup: Ellipse 1 Offset:<196, 267>
            shapes.Append(SpriteShape_12());
            // ShapeGroup: Ellipse 1 Offset:<196, 267>
            shapes.Append(SpriteShape_13());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_84p9_to_m181p4(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: L-DB
        CompositionContainerShape ContainerShape_14()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_15());
            StartProgressBoundAnimation(result, L"Scale", _shapeVisibilityAnimation_02, _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: L-DB
        CompositionContainerShape ContainerShape_15()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.87221998F, 0.872560024F });
            const auto shapes = result.Shapes();
            // Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
            shapes.Append(SpriteShape_14());
            // Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
            shapes.Append(SpriteShape_15());
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_02, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Circle-LB
        CompositionContainerShape ContainerShape_16()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_17());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_05(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle-LB
        CompositionContainerShape ContainerShape_17()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 8.12277031F, 8.12594032F });
            const auto shapes = result.Shapes();
            // Transforms: Bounce
            shapes.Append(ContainerShape_18());
            // Transforms: O-DB Scale:1.0059,1.0059, Offset:<-211.395, -188.406>
            shapes.Append(SpriteShape_17());
            // Transforms: O-LB Scale:1.0059,1.0059, RotationDegrees:-170,
            // Offset:<-211.395, -188.406>
            shapes.Append(SpriteShape_18());
            // Transforms: E-DB Scale:1.0059,1.0059, Offset:<-221.66699, -188.57501>
            shapes.Append(SpriteShape_19());
            // Transforms: E-LB Scale:1.0059,1.0059, Offset:<-221.66699, -188.57501>
            shapes.Append(SpriteShape_20());
            // Transforms: I-DB
            shapes.Append(ContainerShape_20());
            // Transforms: I-LB
            shapes.Append(ContainerShape_21());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_07(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle-LB
        // Transforms for Bounce
        CompositionContainerShape ContainerShape_18()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.092249997F, 0.092249997F });
            // Transforms: Circle-LB
            result.Shapes().Append(ContainerShape_19());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_04(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle-LB
        // Transforms: Bounce
        // Transforms for Circle-LB
        CompositionContainerShape ContainerShape_19()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 40.0F, -210.0F });
            result.Scale({ 1.54200006F, 1.54200006F });
            // ShapeGroup: Ellipse 1 Offset:<40, -210>
            result.Shapes().Append(SpriteShape_16());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_03(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle-LB
        // Transforms for I-DB
        CompositionContainerShape ContainerShape_20()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 277.697998F, 247.257996F });
            result.Scale({ 1.00590003F, 1.00590003F });
            // ShapeGroup: Group 7 Offset:<277.698, 247.258>
            result.Shapes().Append(SpriteShape_21());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_05(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle-LB
        // Transforms for I-LB
        CompositionContainerShape ContainerShape_21()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 277.697998F, 247.257996F });
            result.Scale({ 1.00590003F, 1.00590003F });
            // ShapeGroup: Group 7 Offset:<277.698, 247.258>
            result.Shapes().Append(SpriteShape_22());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_06(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: T-DB
        CompositionContainerShape ContainerShape_22()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_23());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_06(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: T-DB
        CompositionContainerShape ContainerShape_23()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 8.12277031F, 8.12594032F });
            // Transforms: T-DB Scale:1.0059,1.0059, Offset:<-211.081, -188.504>
            result.Shapes().Append(SpriteShape_23());
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_07, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: T-DB
        CompositionContainerShape ContainerShape_24()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_25());
            StartProgressBoundAnimation(result, L"Scale", _shapeVisibilityAnimation_05, _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: T-DB
        CompositionContainerShape ContainerShape_25()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 8.12277031F, 8.12594032F });
            const auto shapes = result.Shapes();
            // Transforms: T-DB Scale:1.0059,1.0059, Offset:<-211.081, -188.504>
            shapes.Append(SpriteShape_24());
            // Transforms: T-LB Scale:1.0059,1.0059, Offset:<-211.081, -188.504>
            shapes.Append(SpriteShape_25());
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_07, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Trail 5-LB
        CompositionContainerShape ContainerShape_26()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_27());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_07(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Trail 5-LB
        CompositionContainerShape ContainerShape_27()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 8.12277031F, 8.12594032F });
            const auto shapes = result.Shapes();
            // Transforms: Trail 5-LB Scale:0.12311,0.12306, Offset:<43.655, -11.938>
            shapes.Append(SpriteShape_26());
            // Transforms: Trail 7-LB Scale:0.12311,0.12306, Offset:<43.655, -11.938>
            shapes.Append(SpriteShape_27());
            // Transforms: Trail 6-LB Scale:0.12311,0.12306, Offset:<43.655, -11.938>
            shapes.Append(SpriteShape_28());
            // Transforms: Trail 8-LB Scale:0.12311,0.12306, Offset:<43.655, -11.938>
            shapes.Append(SpriteShape_29());
            // Transforms: Trail 9-LB Scale:0.12311,0.12306, Offset:<43.655, -11.938>
            shapes.Append(SpriteShape_30());
            // Transforms: Trail 10-LB Scale:0.12311,0.12306, Offset:<43.655, -11.938>
            shapes.Append(SpriteShape_31());
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_07, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: I-DB
        CompositionContainerShape ContainerShape_28()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_29());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_08(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: I-DB
        CompositionContainerShape ContainerShape_29()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 46.0F, 60.0F });
            result.Scale({ 4.53347015F, 4.53523016F });
            const auto shapes = result.Shapes();
            // Transforms: I-DB
            shapes.Append(ContainerShape_30());
            // Transforms: E-LB
            shapes.Append(ContainerShape_32());
            // Transforms: E-DB
            shapes.Append(ContainerShape_33());
            // Transforms: E-DB
            shapes.Append(ContainerShape_34());
            // Transforms: E-DB
            shapes.Append(ContainerShape_36());
            // Transforms: E-DB Scale:1.0059,1.0059, Offset:<-211.081, -188.504>
            shapes.Append(SpriteShape_40());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_16(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: I-DB
        // Transforms for I-DB
        CompositionContainerShape ContainerShape_30()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 303.802002F, 282.182007F });
            result.Scale({ 1.00590003F, 1.00590003F });
            const auto shapes = result.Shapes();
            // ShapeGroup: Group 6 Offset:<304.135, 282.409>
            shapes.Append(SpriteShape_32());
            // Transforms: I-LB
            shapes.Append(ContainerShape_31());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_09(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: I-DB
        // Transforms: I-DB
        // Transforms for I-LB
        CompositionContainerShape ContainerShape_31()
        {
            const auto result = _c.CreateContainerShape();
            // ShapeGroup: Group 6 Offset:<304.135, 282.409>
            result.Shapes().Append(SpriteShape_33());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_08(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: I-DB
        // Transforms for E-LB
        CompositionContainerShape ContainerShape_32()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 345.123993F, 261.800995F });
            result.Scale({ 1.00590003F, 1.00590003F });
            // ShapeGroup: Group 1 Offset:<344.674, 261.877>
            result.Shapes().Append(SpriteShape_34());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_10(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: I-DB
        // Transforms for E-DB
        CompositionContainerShape ContainerShape_33()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 345.123993F, 261.800995F });
            result.Scale({ 1.00590003F, 1.00590003F });
            // ShapeGroup: Group 1 Offset:<344.674, 261.877>
            result.Shapes().Append(SpriteShape_35());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_11(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: I-DB
        // Transforms for E-DB
        CompositionContainerShape ContainerShape_34()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 332.049988F, 237.932007F });
            result.Scale({ 1.00590003F, 1.00590003F });
            const auto shapes = result.Shapes();
            // ShapeGroup: Group 3 Offset:<331.664, 238.14>
            shapes.Append(SpriteShape_36());
            // Transforms: E-LB
            shapes.Append(ContainerShape_35());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_13(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: I-DB
        // Transforms: E-DB
        // Transforms for E-LB
        CompositionContainerShape ContainerShape_35()
        {
            const auto result = _c.CreateContainerShape();
            // ShapeGroup: Group 3 Offset:<331.664, 238.14>
            result.Shapes().Append(SpriteShape_37());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_12(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: I-DB
        // Transforms for E-DB
        CompositionContainerShape ContainerShape_36()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 344.671997F, 214.841995F });
            result.Scale({ 1.00590003F, 1.00590003F });
            const auto shapes = result.Shapes();
            // ShapeGroup: Group 2 Offset:<344.672, 214.842>
            shapes.Append(SpriteShape_38());
            // Transforms: E-LB
            shapes.Append(ContainerShape_37());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_15(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: I-DB
        // Transforms: E-DB
        // Transforms for E-LB
        CompositionContainerShape ContainerShape_37()
        {
            const auto result = _c.CreateContainerShape();
            // ShapeGroup: Group 2 Offset:<344.672, 214.842>
            result.Shapes().Append(SpriteShape_39());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_14(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Trail 14-LB
        CompositionContainerShape ContainerShape_38()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            const auto shapes = result.Shapes();
            // Offset:<34.114, 325.384>
            shapes.Append(SpriteShape_41());
            // Offset:<34.114, 325.384>
            shapes.Append(SpriteShape_42());
            // Offset:<34.114, 325.384>
            shapes.Append(SpriteShape_43());
            // Offset:<34.114, 325.384>
            shapes.Append(SpriteShape_44());
            // Offset:<34.114, 325.384>
            shapes.Append(SpriteShape_45());
            // Offset:<34.114, 325.384>
            shapes.Append(SpriteShape_46());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_09(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: T-DB
        CompositionContainerShape ContainerShape_39()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_40());
            StartProgressBoundAnimation(result, L"Scale", _shapeVisibilityAnimation_08, _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: T-DB
        CompositionContainerShape ContainerShape_40()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 46.0F, 60.0F });
            result.Scale({ 4.53347015F, 4.53523016F });
            const auto shapes = result.Shapes();
            // Transforms: T-DB Scale:1.0059,1.0059, Offset:<-211.081, -188.504>
            shapes.Append(SpriteShape_47());
            // Transforms: N5
            shapes.Append(ContainerShape_41());
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_16, _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: T-DB
        // Transforms for N5
        CompositionContainerShape ContainerShape_41()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.165289998F, 0.165289998F });
            // Transforms: Circle-LB
            result.Shapes().Append(ContainerShape_42());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_18(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: T-DB
        // Transforms: N5
        // Transforms for Circle-LB
        CompositionContainerShape ContainerShape_42()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 40.0F, -210.0F });
            result.Scale({ 1.02170002F, 1.02170002F });
            // ShapeGroup: Ellipse 1 Offset:<40, -210>
            result.Shapes().Append(SpriteShape_48());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_17(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: E3-LB
        CompositionContainerShape ContainerShape_43()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            const auto shapes = result.Shapes();
            // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
            shapes.Append(SpriteShape_49());
            // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
            shapes.Append(SpriteShape_50());
            // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
            shapes.Append(SpriteShape_51());
            // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
            shapes.Append(SpriteShape_52());
            // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
            shapes.Append(SpriteShape_53());
            // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
            shapes.Append(SpriteShape_54());
            // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
            shapes.Append(SpriteShape_55());
            // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
            shapes.Append(SpriteShape_56());
            // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
            shapes.Append(SpriteShape_57());
            // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
            shapes.Append(SpriteShape_58());
            // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
            shapes.Append(SpriteShape_59());
            // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
            shapes.Append(SpriteShape_60());
            // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
            shapes.Append(SpriteShape_61());
            // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
            shapes.Append(SpriteShape_62());
            // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
            shapes.Append(SpriteShape_63());
            // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
            shapes.Append(ContainerShape_44());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_10(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        // Transforms for N7
        CompositionContainerShape ContainerShape_44()
        {
            const auto result = _c.CreateContainerShape();
            // Offset:<115.3982, 198.1502>, Scale:<0.74933, 0.7496299>
            result.TransformMatrix({ 0.749329984F, 0.0F, 0.0F, 0.749629974F, 115.398201F, 198.150208F });
            // Transforms: Circle-LB
            result.Shapes().Append(ContainerShape_45());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_20(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: E3-LB
        // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // Transforms for Circle-LB
        CompositionContainerShape ContainerShape_45()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 40.0F, -210.0F });
            result.Scale({ 0.172700003F, 0.172700003F });
            // ShapeGroup: Ellipse 1 Offset:<40, -210>
            result.Shapes().Append(SpriteShape_64());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_19(), _rootProgress);
            return result;
        }

        // - Transforms: Circle-LB
        // ShapeGroup: Ellipse 1 Offset:<40, -210>
        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_0_0()
        {
            const auto result = _c.CreateEllipseGeometry();
            result.Radius({ 0.0F, 0.0F });
            StartProgressBoundAnimation(result, L"Radius", RadiusVector2Animation_0(), RootProgress());
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Circle-LB
        // - - Transforms: Bounce
        // - Transforms: Circle-LB
        // ShapeGroup: Ellipse 1 Offset:<40, -210>
        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_0_1()
        {
            const auto result = _c.CreateEllipseGeometry();
            result.Radius({ 0.0F, 0.0F });
            StartProgressBoundAnimation(result, L"Radius", RadiusVector2Animation_1(), _rootProgress);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: T-DB
        // - - Transforms: N5
        // - Transforms: Circle-LB
        // ShapeGroup: Ellipse 1 Offset:<40, -210>
        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_0_2()
        {
            const auto result = _c.CreateEllipseGeometry();
            result.Radius({ 0.0F, 0.0F });
            StartProgressBoundAnimation(result, L"Radius", RadiusVector2Animation_2(), _rootProgress);
            return result;
        }

        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_15p5()
        {
            const auto result = _c.CreateEllipseGeometry();
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 0.349000007F);
            propertySet.InsertScalar(L"TStart", 0.349000007F);
            result.Center({ 0.800000012F, -0.5F });
            result.Radius({ 15.5F, 15.5F });
            StartProgressBoundAnimation(result, L"TStart", TStartScalarAnimation_0p349_to_0p448_1(), _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", _tEndScalarAnimation_0p349_to_0p448, _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_16p7()
        {
            const auto result = _c.CreateEllipseGeometry();
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 0.349000007F);
            propertySet.InsertScalar(L"TStart", 0.349000007F);
            result.Center({ 0.800000012F, -0.5F });
            result.Radius({ 16.7000008F, 16.7000008F });
            StartProgressBoundAnimation(result, L"TStart", TStartScalarAnimation_0p349_to_0p448_0(), _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", TEndScalarAnimation_0p349_to_0p448(), _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_16p95()
        {
            const auto result = _c.CreateEllipseGeometry();
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 0.387329996F);
            propertySet.InsertScalar(L"TStart", 0.199000001F);
            result.Center({ 0.800000012F, -0.5F });
            result.Radius({ 16.9500008F, 16.9500008F });
            StartProgressBoundAnimation(result, L"TStart", TStartScalarAnimation_0p199_to_0p35(), _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", TEndScalarAnimation_0p387_to_0p35(), _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle2-LB
        // Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_22p3_0()
        {
            const auto result = _c.CreateEllipseGeometry();
            result.Center({ 0.800000012F, -0.5F });
            result.Radius({ 22.2999992F, 22.2999992F });
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p347_to_1(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle2-LB
        // Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_22p3_1()
        {
            const auto result = _c.CreateEllipseGeometry();
            result.Center({ 0.800000012F, -0.5F });
            result.Radius({ 22.2999992F, 22.2999992F });
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p135_to_1(), _rootProgress);
            return result;
        }

        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_22p3_2()
        {
            const auto result = _ellipse_22p3_2 = _c.CreateEllipseGeometry();
            result.Center({ 0.800000012F, -0.5F });
            result.Radius({ 22.2999992F, 22.2999992F });
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle-LB
        // Transforms: O-LB Scale:1.0059,1.0059, RotationDegrees:-170,
        // Offset:<-211.395, -188.406>
        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_22p3_3()
        {
            const auto result = _c.CreateEllipseGeometry();
            result.Center({ 0.800000012F, -0.5F });
            result.Radius({ 22.2999992F, 22.2999992F });
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p366_to_0p649(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: E3-LB
        // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_22p3_4()
        {
            const auto result = _c.CreateEllipseGeometry();
            result.Center({ 0.800000012F, -0.5F });
            result.Radius({ 22.2999992F, 22.2999992F });
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p235_to_0p405(), _rootProgress);
            return result;
        }

        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_28p117()
        {
            const auto result = _ellipse_28p117 = _c.CreateEllipseGeometry();
            result.Radius({ 28.1170006F, 28.1170006F });
            return result;
        }

        CompositionPath Path_0()
        {
            const auto result = _path_0 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_00()));
            return result;
        }

        CompositionPath Path_1()
        {
            const auto result = _path_1 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_03()));
            return result;
        }

        CompositionPath Path_2()
        {
            const auto result = _path_2 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_05()));
            return result;
        }

        CompositionPath Path_3()
        {
            const auto result = _path_3 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_07()));
            return result;
        }

        CompositionPath Path_4()
        {
            const auto result = _path_4 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_14()));
            return result;
        }

        CompositionPath Path_5()
        {
            const auto result = _path_5 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_15()));
            return result;
        }

        CompositionPath Path_6()
        {
            const auto result = _path_6 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_16()));
            return result;
        }

        CompositionPath Path_7()
        {
            const auto result = _path_7 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_17()));
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle-LB
        // ShapeGroup: Group 8 Offset:<166.029, 270.643>
        CompositionPathGeometry PathGeometry_00()
        {
            const auto result = _c.CreatePathGeometry(Path_0());
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0_to_0p6_0(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle-LB
        // Transforms: L-LB
        CompositionPathGeometry PathGeometry_01()
        {
            const auto result = _c.CreatePathGeometry(_path_0);
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0_to_0p6_1(), _rootProgress);
            return result;
        }

        CompositionPathGeometry PathGeometry_02()
        {
            const auto result = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_01())));
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 1.0F);
            propertySet.InsertScalar(L"TStart", 0.943000019F);
            StartProgressBoundAnimation(result, L"TStart", TStartScalarAnimation_0p943_to_0p035(), _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", TEndScalarAnimation_1_to_0p035_0(), _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        CompositionPathGeometry PathGeometry_03()
        {
            const auto result = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_02())));
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 1.0F);
            propertySet.InsertScalar(L"TStart", 0.943000019F);
            StartProgressBoundAnimation(result, L"TStart", _tStartScalarAnimation_0p943_to_0p035, _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", TEndScalarAnimation_1_to_0p035_1(), _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle2-LB
        // Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
        CompositionPathGeometry PathGeometry_04()
        {
            const auto result = _c.CreatePathGeometry(Path_1());
            result.TrimStart(0.32100001F);
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p39_to_0p624_0(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle2-LB
        // Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
        CompositionPathGeometry PathGeometry_05()
        {
            const auto result = _c.CreatePathGeometry(_path_1);
            result.TrimStart(0.32100001F);
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p39_to_0p624_1(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Trail-LB
        // Transforms: Trail-LB
        CompositionPathGeometry PathGeometry_06()
        {
            const auto result = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_04())));
            result.TrimEnd(0.387329996F);
            StartProgressBoundAnimation(result, L"TrimStart", TrimStartScalarAnimation_0p199_to_0p387(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: L-DB
        // Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
        CompositionPathGeometry PathGeometry_07()
        {
            const auto result = _c.CreatePathGeometry(_path_0);
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p817_to_1_0(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: L-DB
        // Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
        CompositionPathGeometry PathGeometry_08()
        {
            const auto result = _c.CreatePathGeometry(_path_0);
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p817_to_1_1(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle-LB
        // Transforms: E-DB Scale:1.0059,1.0059, Offset:<-221.66699, -188.57501>
        CompositionPathGeometry PathGeometry_09()
        {
            const auto result = _c.CreatePathGeometry(Path_2());
            result.TrimEnd(0.430000007F);
            StartProgressBoundAnimation(result, L"TrimStart", TrimStartScalarAnimation_0p122_to_0_0(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle-LB
        // Transforms: E-LB Scale:1.0059,1.0059, Offset:<-221.66699, -188.57501>
        CompositionPathGeometry PathGeometry_10()
        {
            const auto result = _c.CreatePathGeometry(_path_2);
            result.TrimEnd(0.430000007F);
            StartProgressBoundAnimation(result, L"TrimStart", TrimStartScalarAnimation_0p122_to_0_1(), _rootProgress);
            return result;
        }

        CompositionPathGeometry PathGeometry_11()
        {
            return _pathGeometry_11 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_06())));
        }

        // - - - Layer aggregator
        // - - Layer: T-DB
        // Transforms: T-DB Scale:1.0059,1.0059, Offset:<-211.081, -188.504>
        CompositionPathGeometry PathGeometry_12()
        {
            const auto result = _c.CreatePathGeometry(Path_3());
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0_to_1(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: T-DB
        // Transforms: T-DB Scale:1.0059,1.0059, Offset:<-211.081, -188.504>
        CompositionPathGeometry PathGeometry_13()
        {
            const auto result = _c.CreatePathGeometry(_path_1);
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p443_to_0p933(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: T-DB
        // Transforms: T-LB Scale:1.0059,1.0059, Offset:<-211.081, -188.504>
        CompositionPathGeometry PathGeometry_14()
        {
            const auto result = _c.CreatePathGeometry(_path_1);
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p311_to_0p933(), _rootProgress);
            return result;
        }

        CompositionPathGeometry PathGeometry_15()
        {
            const auto result = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_08())));
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 0.880999982F);
            propertySet.InsertScalar(L"TStart", 0.759000003F);
            StartProgressBoundAnimation(result, L"TStart", TStartScalarAnimation_0p759_to_0p2_0(), _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", TEndScalarAnimation_0p881_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        CompositionPathGeometry PathGeometry_16()
        {
            const auto result = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_09())));
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 0.938000023F);
            propertySet.InsertScalar(L"TStart", 0.809000015F);
            StartProgressBoundAnimation(result, L"TStart", TStartScalarAnimation_0p809_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", TEndScalarAnimation_0p938_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        CompositionPathGeometry PathGeometry_17()
        {
            const auto result = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_10())));
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 0.92900002F);
            propertySet.InsertScalar(L"TStart", 0.82099998F);
            StartProgressBoundAnimation(result, L"TStart", TStartScalarAnimation_0p821_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", TEndScalarAnimation_0p929_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        CompositionPathGeometry PathGeometry_18()
        {
            const auto result = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_11())));
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 0.925999999F);
            propertySet.InsertScalar(L"TStart", 0.851000011F);
            StartProgressBoundAnimation(result, L"TStart", TStartScalarAnimation_0p851_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", TEndScalarAnimation_0p926_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        CompositionPathGeometry PathGeometry_19()
        {
            const auto result = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_12())));
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 0.910000026F);
            propertySet.InsertScalar(L"TStart", 0.79400003F);
            StartProgressBoundAnimation(result, L"TStart", TStartScalarAnimation_0p794_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", TEndScalarAnimation_0p91_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        CompositionPathGeometry PathGeometry_20()
        {
            const auto result = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_13())));
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 0.93599999F);
            propertySet.InsertScalar(L"TStart", 0.828000009F);
            StartProgressBoundAnimation(result, L"TStart", TStartScalarAnimation_0p828_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", TEndScalarAnimation_0p936_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        CompositionPathGeometry PathGeometry_21()
        {
            const auto result = _pathGeometry_21 = _c.CreatePathGeometry(Path_4());
            result.TrimEnd(0.456999987F);
            return result;
        }

        CompositionPathGeometry PathGeometry_22()
        {
            const auto result = _pathGeometry_22 = _c.CreatePathGeometry(Path_5());
            result.TrimEnd(0.316000015F);
            return result;
        }

        CompositionPathGeometry PathGeometry_23()
        {
            const auto result = _pathGeometry_23 = _c.CreatePathGeometry(_path_2);
            result.TrimEnd(0.430000007F);
            return result;
        }

        CompositionPathGeometry PathGeometry_24()
        {
            const auto result = _pathGeometry_24 = _c.CreatePathGeometry(Path_6());
            result.TrimEnd(0.375F);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: I-DB
        // Transforms: E-DB Scale:1.0059,1.0059, Offset:<-211.081, -188.504>
        CompositionPathGeometry PathGeometry_25()
        {
            const auto result = _c.CreatePathGeometry(Path_7());
            StartProgressBoundAnimation(result, L"TrimStart", TrimStartScalarAnimation_0p262_to_0(), _rootProgress);
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p475_to_0p665(), _rootProgress);
            return result;
        }

        CompositionPathGeometry PathGeometry_26()
        {
            const auto result = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_18())));
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 0.922999978F);
            propertySet.InsertScalar(L"TStart", 0.81400001F);
            StartProgressBoundAnimation(result, L"TStart", TStartScalarAnimation_0p814_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", TEndScalarAnimation_0p923_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        CompositionPathGeometry PathGeometry_27()
        {
            const auto result = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_19())));
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 0.915000021F);
            propertySet.InsertScalar(L"TStart", 0.759000003F);
            StartProgressBoundAnimation(result, L"TStart", TStartScalarAnimation_0p759_to_0p2_1(), _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", TEndScalarAnimation_0p915_to_0p2_0(), _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        CompositionPathGeometry PathGeometry_28()
        {
            const auto result = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_20())));
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 0.927999973F);
            propertySet.InsertScalar(L"TStart", 0.814999998F);
            StartProgressBoundAnimation(result, L"TStart", TStartScalarAnimation_0p815_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", TEndScalarAnimation_0p928_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        CompositionPathGeometry PathGeometry_29()
        {
            const auto result = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_21())));
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 0.899999976F);
            propertySet.InsertScalar(L"TStart", 0.786000013F);
            StartProgressBoundAnimation(result, L"TStart", TStartScalarAnimation_0p786_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", TEndScalarAnimation_0p9_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        CompositionPathGeometry PathGeometry_30()
        {
            const auto result = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_22())));
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 0.897000015F);
            propertySet.InsertScalar(L"TStart", 0.765999973F);
            StartProgressBoundAnimation(result, L"TStart", TStartScalarAnimation_0p766_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", TEndScalarAnimation_0p897_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        CompositionPathGeometry PathGeometry_31()
        {
            const auto result = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_23())));
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"TEnd", 0.915000021F);
            propertySet.InsertScalar(L"TStart", 0.825999975F);
            StartProgressBoundAnimation(result, L"TStart", TStartScalarAnimation_0p826_to_0p2(), _rootProgress);
            BindProperty(result, L"TrimStart", L"Min(my.TStart,my.TEnd)", L"my", result);
            StartProgressBoundAnimation(result, L"TEnd", TEndScalarAnimation_0p915_to_0p2_1(), _rootProgress);
            BindProperty(result, L"TrimEnd", L"Max(my.TStart,my.TEnd)", L"my", result);
            return result;
        }

        // - - Layer aggregator
        // - Layer: E3-LB
        // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        CompositionPathGeometry PathGeometry_32()
        {
            const auto result = _c.CreatePathGeometry(_path_4);
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p428_to_0p457(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: E3-LB
        // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        CompositionPathGeometry PathGeometry_33()
        {
            const auto result = _c.CreatePathGeometry(_path_5);
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p284_to_0p316(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: E3-LB
        // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        CompositionPathGeometry PathGeometry_34()
        {
            const auto result = _c.CreatePathGeometry(_path_2);
            result.TrimEnd(0.430000007F);
            StartProgressBoundAnimation(result, L"TrimStart", TrimStartScalarAnimation_0p093_to_0(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: E3-LB
        // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        CompositionPathGeometry PathGeometry_35()
        {
            const auto result = _c.CreatePathGeometry(_path_2);
            result.TrimEnd(0.430000007F);
            StartProgressBoundAnimation(result, L"TrimStart", TrimStartScalarAnimation_0p341_to_0p313(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: E3-LB
        // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        CompositionPathGeometry PathGeometry_36()
        {
            const auto result = _c.CreatePathGeometry(_path_6);
            result.TrimEnd(0.375F);
            StartProgressBoundAnimation(result, L"TrimStart", TrimStartScalarAnimation_0p221_to_0p168(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: E3-LB
        // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        CompositionPathGeometry PathGeometry_37()
        {
            const auto result = _c.CreatePathGeometry(_path_7);
            StartProgressBoundAnimation(result, L"TrimStart", TrimStartScalarAnimation_0p126_to_0(), _rootProgress);
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p618_to_0p665(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: E3-LB
        // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        CompositionPathGeometry PathGeometry_38()
        {
            const auto result = _c.CreatePathGeometry(_path_1);
            result.TrimStart(0.151999995F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: E3-LB
        // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        CompositionPathGeometry PathGeometry_39()
        {
            const auto result = _c.CreatePathGeometry(_path_3);
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p79_to_1(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: E3-LB
        // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        CompositionPathGeometry PathGeometry_40()
        {
            const auto result = _c.CreatePathGeometry(_path_1);
            result.TrimStart(0.151999995F);
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p822_to_0p904(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: E3-LB
        // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        CompositionPathGeometry PathGeometry_41()
        {
            const auto result = _c.CreatePathGeometry(_path_0);
            result.TrimEnd(0.287999988F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: E3-LB
        // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        CompositionPathGeometry PathGeometry_42()
        {
            const auto result = _c.CreatePathGeometry(_path_0);
            StartProgressBoundAnimation(result, L"TrimStart", TrimStartScalarAnimation_0p26_to_0p287(), _rootProgress);
            StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0p65_to_0p734(), _rootProgress);
            return result;
        }

        // Transforms: Circle-LB
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_00()
        {
            // Offset:<40, -210>
            const auto result = CreateSpriteShape(Ellipse_0_0(), { 1.0F, 0.0F, 0.0F, 1.0F, 40.0F, -210.0F }, ColorBrush_AlmostDarkTurquoise_FF00D1C1());
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle-LB
        // Path 1
        CompositionSpriteShape SpriteShape_01()
        {
            // Offset:<166.029, 270.643>
            const auto result = CreateSpriteShape(PathGeometry_00(), { 1.0F, 0.0F, 0.0F, 1.0F, 166.029007F, 270.643005F });
            result.StrokeBrush(ColorBrush_AlmostTeal_FF007A87());
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle-LB
        // Path 1
        CompositionSpriteShape SpriteShape_02()
        {
            // Offset:<166.029, 270.643>
            const auto result = CreateSpriteShape(PathGeometry_01(), { 1.0F, 0.0F, 0.0F, 1.0F, 166.029007F, 270.643005F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Trail -LB
        // Path 1
        CompositionSpriteShape SpriteShape_03()
        {
            // Offset:<146.615, 210.395>, Rotation:-0.005772526017510612 degrees,
            // Scale:<0.20202, 0.20194>
            const auto result = CreateSpriteShape(PathGeometry_02(), { 0.202020004F, 0.0F, 0.0F, 0.20194F, 146.615005F, 210.395004F });
            result.StrokeBrush(ColorBrush_AlmostMediumTurquoise_FF33CEC1());
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(3.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Trail -LB
        // Path 1
        CompositionSpriteShape SpriteShape_04()
        {
            // Offset:<146.615, 210.395>, Rotation:-0.005772526017510612 degrees,
            // Scale:<0.20202, 0.20194>
            const auto result = CreateSpriteShape(PathGeometry_03(), { 0.202020004F, 0.0F, 0.0F, 0.20194F, 146.615005F, 210.395004F });
            result.StrokeBrush(_colorBrush_AlmostMediumTurquoise_FF33CEC1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(3.0F);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle2-LB
        // Transforms: Circle2-LB
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_05()
        {
            // Offset:<40, -210>
            const auto result = CreateSpriteShape(Ellipse_28p117(), { 1.0F, 0.0F, 0.0F, 1.0F, 40.0F, -210.0F }, _colorBrush_AlmostDarkTurquoise_FF00D1C1);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle2-LB
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_06()
        {
            // Offset:<76.410645, 63.255737>, Rotation:-179.98717383432694 degrees,
            // Scale:<5.93481, -5.93481>
            const auto result = CreateSpriteShape(Ellipse_22p3_0(), { -5.93481016F, 0.0F, 0.0F, 5.93481016F, 76.4106445F, 63.2557373F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeThickness(9.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle2-LB
        // Path 1
        CompositionSpriteShape SpriteShape_07()
        {
            // Offset:<255.01929, -130.37085>, Rotation:-0.012826165673089217 degrees,
            // Scale:<5.93481, 5.93481>
            const auto result = CreateSpriteShape(PathGeometry_04(), { 5.93481016F, 0.0F, 0.0F, 5.93481016F, 255.019287F, -130.37085F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle2-LB
        // Path 1
        CompositionSpriteShape SpriteShape_08()
        {
            // Offset:<255.01929, -130.37085>, Rotation:-0.012826165673089217 degrees,
            // Scale:<5.93481, 5.93481>
            const auto result = CreateSpriteShape(PathGeometry_05(), { 5.93481016F, 0.0F, 0.0F, 5.93481016F, 255.019287F, -130.37085F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle2-LB
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_09()
        {
            // Offset:<76.410645, 63.255737>, Rotation:-179.98717383432694 degrees,
            // Scale:<5.93481, -5.93481>
            const auto result = CreateSpriteShape(Ellipse_22p3_1(), { -5.93481016F, 0.0F, 0.0F, 5.93481016F, 76.4106445F, 63.2557373F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Trail-LB
        // Path 1
        CompositionSpriteShape SpriteShape_10()
        {
            const auto result = _c.CreateSpriteShape(PathGeometry_06());
            result.CenterPoint({ 196.791F, 266.503998F });
            result.Offset({ -125.076004F, -206.192993F });
            result.Scale({ -5.9000001F, 5.9000001F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(0.5F);
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_59p2_to_m192p8(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Trail-LB
        // Transforms: Trail-LB
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_11()
        {
            // Offset:<196, 267>
            const auto result = CreateSpriteShape(Ellipse_16p95(), { 1.0F, 0.0F, 0.0F, 1.0F, 196.0F, 267.0F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeThickness(0.5F);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Trail-LB
        // Transforms: Trail-LB
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_12()
        {
            // Offset:<196, 267>
            const auto result = CreateSpriteShape(Ellipse_16p7(), { 1.0F, 0.0F, 0.0F, 1.0F, 196.0F, 267.0F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeThickness(0.5F);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Trail-LB
        // Transforms: Trail-LB
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_13()
        {
            // Offset:<196, 267>
            const auto result = CreateSpriteShape(Ellipse_15p5(), { 1.0F, 0.0F, 0.0F, 1.0F, 196.0F, 267.0F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeThickness(0.5F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: L-DB
        // Path 1
        CompositionSpriteShape SpriteShape_14()
        {
            // Offset:<-110.84979, 84.8728>, Rotation:-0.012826165673089217 degrees,
            // Scale:<5.93481, 5.93481>
            const auto result = CreateSpriteShape(PathGeometry_07(), { 5.93481016F, 0.0F, 0.0F, 5.93481016F, -110.849792F, 84.8728027F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(8.39999962F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: L-DB
        // Path 1
        CompositionSpriteShape SpriteShape_15()
        {
            // Offset:<-110.84979, 84.8728>, Rotation:-0.012826165673089217 degrees,
            // Scale:<5.93481, 5.93481>
            const auto result = CreateSpriteShape(PathGeometry_08(), { 5.93481016F, 0.0F, 0.0F, 5.93481016F, -110.849792F, 84.8728027F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Circle-LB
        // - Transforms: Bounce
        // Transforms: Circle-LB
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_16()
        {
            // Offset:<40, -210>
            const auto result = CreateSpriteShape(Ellipse_0_1(), { 1.0F, 0.0F, 0.0F, 1.0F, 40.0F, -210.0F }, _colorBrush_AlmostDarkTurquoise_FF00D1C1);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle-LB
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_17()
        {
            // Offset:<-15.399673, 78.596924>, Scale:<1.0059, 1.0059>
            const auto result = CreateSpriteShape(Ellipse_22p3_2(), { 1.00590003F, 0.0F, 0.0F, 1.00590003F, -15.3996735F, 78.5969238F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeThickness(9.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle-LB
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_18()
        {
            // Offset:<-13.73378, 77.74481>, Rotation:-169.9999890267214 degrees,
            // Scale:<1.0059, 1.0059>
            const auto result = CreateSpriteShape(Ellipse_22p3_3(), { -0.99061811F, -0.174672827F, 0.174672827F, -0.99061811F, -13.7337799F, 77.744812F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle-LB
        // Path 1
        CompositionSpriteShape SpriteShape_19()
        {
            // Offset:<109.99472, 49.566208>, Scale:<1.0059, 1.0059>
            const auto result = CreateSpriteShape(PathGeometry_09(), { 1.00590003F, 0.0F, 0.0F, 1.00590003F, 109.99472F, 49.5662079F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.39999962F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle-LB
        // Path 1
        CompositionSpriteShape SpriteShape_20()
        {
            // Offset:<109.99472, 49.566208>, Scale:<1.0059, 1.0059>
            const auto result = CreateSpriteShape(PathGeometry_10(), { 1.00590003F, 0.0F, 0.0F, 1.00590003F, 109.99472F, 49.5662079F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.56200027F);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle-LB
        // Transforms: I-DB
        // Path 1
        CompositionSpriteShape SpriteShape_21()
        {
            // Offset:<277.698, 247.258>
            const auto result = CreateSpriteShape(PathGeometry_11(), { 1.0F, 0.0F, 0.0F, 1.0F, 277.697998F, 247.257996F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.0F);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle-LB
        // Transforms: I-LB
        // Path 1
        CompositionSpriteShape SpriteShape_22()
        {
            // Offset:<277.698, 247.258>
            const auto result = CreateSpriteShape(_pathGeometry_11, { 1.0F, 0.0F, 0.0F, 1.0F, 277.697998F, 247.257996F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: T-DB
        // Path 1
        CompositionSpriteShape SpriteShape_23()
        {
            // Offset:<31.632263, 77.168915>, Scale:<1.0059, 1.0059>
            const auto result = CreateSpriteShape(PathGeometry_12(), { 1.00590003F, 0.0F, 0.0F, 1.00590003F, 31.6322632F, 77.1689148F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: T-DB
        // Path 1
        CompositionSpriteShape SpriteShape_24()
        {
            // Offset:<16.46431, 45.77881>, Scale:<1.0059, 1.0059>
            const auto result = CreateSpriteShape(PathGeometry_13(), { 1.00590003F, 0.0F, 0.0F, 1.00590003F, 16.4643097F, 45.7788086F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(8.89999962F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: T-DB
        // Path 1
        CompositionSpriteShape SpriteShape_25()
        {
            // Offset:<16.46431, 45.77881>, Scale:<1.0059, 1.0059>
            const auto result = CreateSpriteShape(PathGeometry_14(), { 1.00590003F, 0.0F, 0.0F, 1.00590003F, 16.4643097F, 45.7788086F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Trail 5-LB
        // Path 1
        CompositionSpriteShape SpriteShape_26()
        {
            // Offset:<43.655, -11.938>, Rotation:-0.00975662311356264 degrees,
            // Scale:<0.12311, 0.12306>
            const auto result = CreateSpriteShape(PathGeometry_15(), { 0.123109996F, 0.0F, 0.0F, 0.123060003F, 43.6549988F, -11.9379997F });
            result.StrokeBrush(AnimatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_0());
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(2.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Trail 5-LB
        // Path 1
        CompositionSpriteShape SpriteShape_27()
        {
            // Offset:<43.655, -11.938>, Rotation:-0.00975662311356264 degrees,
            // Scale:<0.12311, 0.12306>
            const auto result = CreateSpriteShape(PathGeometry_16(), { 0.123109996F, 0.0F, 0.0F, 0.123060003F, 43.6549988F, -11.9379997F });
            result.StrokeBrush(_animatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_0);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(2.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Trail 5-LB
        // Path 1
        CompositionSpriteShape SpriteShape_28()
        {
            // Offset:<43.655, -11.938>, Rotation:-0.00975662311356264 degrees,
            // Scale:<0.12311, 0.12306>
            const auto result = CreateSpriteShape(PathGeometry_17(), { 0.123109996F, 0.0F, 0.0F, 0.123060003F, 43.6549988F, -11.9379997F });
            result.StrokeBrush(_animatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_0);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(2.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Trail 5-LB
        // Path 1
        CompositionSpriteShape SpriteShape_29()
        {
            // Offset:<43.655, -11.938>, Rotation:-0.00975662311356264 degrees,
            // Scale:<0.12311, 0.12306>
            const auto result = CreateSpriteShape(PathGeometry_18(), { 0.123109996F, 0.0F, 0.0F, 0.123060003F, 43.6549988F, -11.9379997F });
            result.StrokeBrush(_animatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_0);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(2.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Trail 5-LB
        // Path 1
        CompositionSpriteShape SpriteShape_30()
        {
            // Offset:<43.655, -11.938>, Rotation:-0.00975662311356264 degrees,
            // Scale:<0.12311, 0.12306>
            const auto result = CreateSpriteShape(PathGeometry_19(), { 0.123109996F, 0.0F, 0.0F, 0.123060003F, 43.6549988F, -11.9379997F });
            result.StrokeBrush(_animatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_0);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(2.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Trail 5-LB
        // Path 1
        CompositionSpriteShape SpriteShape_31()
        {
            // Offset:<43.655, -11.938>, Rotation:-0.00975662311356264 degrees,
            // Scale:<0.12311, 0.12306>
            const auto result = CreateSpriteShape(PathGeometry_20(), { 0.123109996F, 0.0F, 0.0F, 0.123060003F, 43.6549988F, -11.9379997F });
            result.StrokeBrush(_animatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_0);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(2.0F);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: I-DB
        // Transforms: I-DB
        // Path 1
        CompositionSpriteShape SpriteShape_32()
        {
            // Offset:<304.135, 282.409>
            const auto result = CreateSpriteShape(PathGeometry_21(), { 1.0F, 0.0F, 0.0F, 1.0F, 304.13501F, 282.408997F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Square);
            result.StrokeStartCap(CompositionStrokeCap::Square);
            result.StrokeEndCap(CompositionStrokeCap::Square);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.0F);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: I-DB
        // - Transforms: I-DB
        // Transforms: I-LB
        // Path 1
        CompositionSpriteShape SpriteShape_33()
        {
            // Offset:<304.135, 282.409>
            const auto result = CreateSpriteShape(_pathGeometry_21, { 1.0F, 0.0F, 0.0F, 1.0F, 304.13501F, 282.408997F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Square);
            result.StrokeStartCap(CompositionStrokeCap::Square);
            result.StrokeEndCap(CompositionStrokeCap::Square);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: I-DB
        // Transforms: E-LB
        // Path 1
        CompositionSpriteShape SpriteShape_34()
        {
            // Offset:<344.674, 261.877>
            const auto result = CreateSpriteShape(PathGeometry_22(), { 1.0F, 0.0F, 0.0F, 1.0F, 344.674011F, 261.877014F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.60000038F);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: I-DB
        // Transforms: E-DB
        // Path 1
        CompositionSpriteShape SpriteShape_35()
        {
            // Offset:<344.674, 261.877>
            const auto result = CreateSpriteShape(_pathGeometry_22, { 1.0F, 0.0F, 0.0F, 1.0F, 344.674011F, 261.877014F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.56200027F);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: I-DB
        // Transforms: E-DB
        // Path 1
        CompositionSpriteShape SpriteShape_36()
        {
            // Offset:<331.664, 238.14>
            const auto result = CreateSpriteShape(PathGeometry_23(), { 1.0F, 0.0F, 0.0F, 1.0F, 331.664001F, 238.139999F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.30000019F);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: I-DB
        // - Transforms: E-DB
        // Transforms: E-LB
        // Path 1
        CompositionSpriteShape SpriteShape_37()
        {
            // Offset:<331.664, 238.14>
            const auto result = CreateSpriteShape(_pathGeometry_23, { 1.0F, 0.0F, 0.0F, 1.0F, 331.664001F, 238.139999F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.56200027F);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: I-DB
        // Transforms: E-DB
        // Path 1
        CompositionSpriteShape SpriteShape_38()
        {
            // Offset:<344.672, 214.842>
            const auto result = CreateSpriteShape(PathGeometry_24(), { 1.0F, 0.0F, 0.0F, 1.0F, 344.671997F, 214.841995F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.30000019F);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: I-DB
        // - Transforms: E-DB
        // Transforms: E-LB
        // Path 1
        CompositionSpriteShape SpriteShape_39()
        {
            // Offset:<344.672, 214.842>
            const auto result = CreateSpriteShape(_pathGeometry_24, { 1.0F, 0.0F, 0.0F, 1.0F, 344.671997F, 214.841995F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.56200027F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: I-DB
        // Path 1
        CompositionSpriteShape SpriteShape_40()
        {
            // Offset:<-212.556, -189.979>, Scale:<1.0059, 1.0059>
            const auto result = CreateSpriteShape(PathGeometry_25(), { 1.00590003F, 0.0F, 0.0F, 1.00590003F, -212.556F, -189.979004F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - Layer aggregator
        // Layer: Trail 14-LB
        // Path 1
        CompositionSpriteShape SpriteShape_41()
        {
            // Offset:<-97.285995, -162.01999>
            const auto result = CreateSpriteShape(PathGeometry_26(), { 1.0F, 0.0F, 0.0F, 1.0F, -97.2859955F, -162.019989F });
            result.StrokeBrush(AnimatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_1());
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(2.0F);
            return result;
        }

        // - Layer aggregator
        // Layer: Trail 14-LB
        // Path 1
        CompositionSpriteShape SpriteShape_42()
        {
            // Offset:<-97.285995, -162.01999>
            const auto result = CreateSpriteShape(PathGeometry_27(), { 1.0F, 0.0F, 0.0F, 1.0F, -97.2859955F, -162.019989F });
            result.StrokeBrush(_animatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(2.0F);
            return result;
        }

        // - Layer aggregator
        // Layer: Trail 14-LB
        // Path 1
        CompositionSpriteShape SpriteShape_43()
        {
            // Offset:<-97.285995, -162.02002>
            const auto result = CreateSpriteShape(PathGeometry_28(), { 1.0F, 0.0F, 0.0F, 1.0F, -97.2859955F, -162.02002F });
            result.StrokeBrush(_animatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(2.0F);
            return result;
        }

        // - Layer aggregator
        // Layer: Trail 14-LB
        // Path 1
        CompositionSpriteShape SpriteShape_44()
        {
            // Offset:<287.181, -160.01999>, Rotation:-180 degrees, Scale:<1, -1>
            const auto result = CreateSpriteShape(PathGeometry_29(), { -1.0F, 0.0F, 0.0F, 1.0F, 287.181F, -160.019989F });
            result.StrokeBrush(_animatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(2.0F);
            return result;
        }

        // - Layer aggregator
        // Layer: Trail 14-LB
        // Path 1
        CompositionSpriteShape SpriteShape_45()
        {
            // Offset:<288.771, -160.51999>, Rotation:-180 degrees, Scale:<1, -1>
            const auto result = CreateSpriteShape(PathGeometry_30(), { -1.0F, 0.0F, 0.0F, 1.0F, 288.770996F, -160.519989F });
            result.StrokeBrush(_animatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(2.0F);
            return result;
        }

        // - Layer aggregator
        // Layer: Trail 14-LB
        // Path 1
        CompositionSpriteShape SpriteShape_46()
        {
            // Offset:<289.94598, -161.01999>, Rotation:-180 degrees, Scale:<1, -1>
            const auto result = CreateSpriteShape(PathGeometry_31(), { -1.0F, 0.0F, 0.0F, 1.0F, 289.945984F, -161.019989F });
            result.StrokeBrush(_animatedColorBrush_AlmostDarkTurquoise_FF00D1C1_to_TransparentAlmostDarkTurquoise_0000D1C1_1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(2.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: T-DB
        // Path 1
        CompositionSpriteShape SpriteShape_47()
        {
            // Offset:<66.780426, 58.737823>, Scale:<1.0059, 1.0059>
            const auto result = CreateSpriteShape(_pathGeometry_11, { 1.00590003F, 0.0F, 0.0F, 1.00590003F, 66.780426F, 58.7378235F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Square);
            result.StrokeStartCap(CompositionStrokeCap::Square);
            result.StrokeEndCap(CompositionStrokeCap::Square);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: T-DB
        // - Transforms: N5
        // Transforms: Circle-LB
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_48()
        {
            // Offset:<40, -210>
            const auto result = CreateSpriteShape(Ellipse_0_2(), { 1.0F, 0.0F, 0.0F, 1.0F, 40.0F, -210.0F }, _colorBrush_AlmostDarkTurquoise_FF00D1C1);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        // Path 1
        CompositionSpriteShape SpriteShape_49()
        {
            // Offset:<185.36536, 268.6884>, Scale:<0.75375104, 0.7540528>
            const auto result = CreateSpriteShape(PathGeometry_32(), { 0.75375104F, 0.0F, 0.0F, 0.754052818F, 185.365356F, 268.688385F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Square);
            result.StrokeStartCap(CompositionStrokeCap::Square);
            result.StrokeEndCap(CompositionStrokeCap::Square);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        // Path 1
        CompositionSpriteShape SpriteShape_50()
        {
            // Offset:<215.92184, 253.20564>, Scale:<0.75375104, 0.7540528>
            const auto result = CreateSpriteShape(PathGeometry_33(), { 0.75375104F, 0.0F, 0.0F, 0.754052818F, 215.921844F, 253.205643F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.56200027F);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        // Path 1
        CompositionSpriteShape SpriteShape_51()
        {
            // Offset:<206.11563, 235.30653>, Scale:<0.75375104, 0.7540528>
            const auto result = CreateSpriteShape(PathGeometry_34(), { 0.75375104F, 0.0F, 0.0F, 0.754052818F, 206.115631F, 235.306534F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.56200027F);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        // Path 1
        CompositionSpriteShape SpriteShape_52()
        {
            // Offset:<206.11563, 235.30653>, Scale:<0.75375104, 0.7540528>
            const auto result = CreateSpriteShape(PathGeometry_35(), { 0.75375104F, 0.0F, 0.0F, 0.754052818F, 206.115631F, 235.306534F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.56200027F);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        // Path 1
        CompositionSpriteShape SpriteShape_53()
        {
            // Offset:<215.9208, 217.73878>, Scale:<0.75375104, 0.7540528>
            const auto result = CreateSpriteShape(_pathGeometry_24, { 0.75375104F, 0.0F, 0.0F, 0.754052818F, 215.920807F, 217.738785F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.56200027F);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        // Path 1
        CompositionSpriteShape SpriteShape_54()
        {
            // Offset:<215.9208, 217.73878>, Scale:<0.75375104, 0.7540528>
            const auto result = CreateSpriteShape(PathGeometry_36(), { 0.75375104F, 0.0F, 0.0F, 0.754052818F, 215.920807F, 217.738785F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.56200027F);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        // Path 1
        CompositionSpriteShape SpriteShape_55()
        {
            // Offset:<-43.87638, 55.73625>, Scale:<0.75375104, 0.7540528>
            const auto result = CreateSpriteShape(PathGeometry_37(), { 0.75375104F, 0.0F, 0.0F, 0.754052818F, -43.8763809F, 55.7362518F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        // Path 1
        CompositionSpriteShape SpriteShape_56()
        {
            // Offset:<165.43878, 242.18184>, Scale:<0.75375104, 0.7540528>
            const auto result = CreateSpriteShape(_pathGeometry_11, { 0.75375104F, 0.0F, 0.0F, 0.754052818F, 165.438782F, 242.181839F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Square);
            result.StrokeStartCap(CompositionStrokeCap::Square);
            result.StrokeEndCap(CompositionStrokeCap::Square);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        // Path 1
        CompositionSpriteShape SpriteShape_57()
        {
            // Offset:<127.73539, 232.46738>, Scale:<0.75375104, 0.7540528>
            const auto result = CreateSpriteShape(PathGeometry_38(), { 0.75375104F, 0.0F, 0.0F, 0.754052818F, 127.73539F, 232.467377F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(8.60000038F);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        // Path 1
        CompositionSpriteShape SpriteShape_58()
        {
            // Offset:<139.1012, 255.99835>, Scale:<0.75375104, 0.7540528>
            const auto result = CreateSpriteShape(PathGeometry_39(), { 0.75375104F, 0.0F, 0.0F, 0.754052818F, 139.101196F, 255.998352F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_59()
        {
            // Offset:<103.85876, 257.06882>, Scale:<0.75375104, 0.7540528>
            const auto result = CreateSpriteShape(_ellipse_22p3_2, { 0.75375104F, 0.0F, 0.0F, 0.754052818F, 103.858757F, 257.068817F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_60()
        {
            // Offset:<104.19241, 257.34796>, Rotation:-36.01090643770121 degrees,
            // Scale:<0.75385535, 0.75394845>, Skew:<-0.00038072438, 0>
            const auto result = CreateSpriteShape(Ellipse_22p3_4(), { 0.609797418F, -0.443221152F, 0.443043768F, 0.610041499F, 104.192413F, 257.347961F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        // Path 1
        CompositionSpriteShape SpriteShape_61()
        {
            // Offset:<127.73539, 232.46738>, Scale:<0.75375104, 0.7540528>
            const auto result = CreateSpriteShape(PathGeometry_40(), { 0.75375104F, 0.0F, 0.0F, 0.754052818F, 127.73539F, 232.467377F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        // Path 1
        CompositionSpriteShape SpriteShape_62()
        {
            // Offset:<81.26816, 259.81537>, Scale:<0.75375104, 0.7540528>
            const auto result = CreateSpriteShape(PathGeometry_41(), { 0.75375104F, 0.0F, 0.0F, 0.754052818F, 81.268158F, 259.815369F });
            result.StrokeBrush(_colorBrush_AlmostDarkTurquoise_FF00D1C1);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        // Path 1
        CompositionSpriteShape SpriteShape_63()
        {
            // Offset:<81.26816, 259.81537>, Scale:<0.75375104, 0.7540528>
            const auto result = CreateSpriteShape(PathGeometry_42(), { 0.75375104F, 0.0F, 0.0F, 0.754052818F, 81.268158F, 259.815369F });
            result.StrokeBrush(_colorBrush_AlmostTeal_FF007A87);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(5.0F);
            result.StrokeThickness(9.19400024F);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: E3-LB
        // -  Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // Transforms: Circle-LB
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_64()
        {
            // Offset:<40, -210>
            const auto result = CreateSpriteShape(_ellipse_28p117, { 1.0F, 0.0F, 0.0F, 1.0F, 40.0F, -210.0F }, _colorBrush_AlmostDarkTurquoise_FF00D1C1);
            return result;
        }

        // The root of the composition.
        ContainerVisual Root()
        {
            const auto result = _root = _c.CreateContainerVisual();
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"Progress", 0.0F);
            propertySet.InsertScalar(L"t0", 0.0F);
            propertySet.InsertScalar(L"t1", 0.0F);
            propertySet.InsertScalar(L"t10", 0.0F);
            propertySet.InsertScalar(L"t11", 0.0F);
            propertySet.InsertScalar(L"t12", 0.0F);
            propertySet.InsertScalar(L"t2", 0.0F);
            propertySet.InsertScalar(L"t3", 0.0F);
            propertySet.InsertScalar(L"t4", 0.0F);
            propertySet.InsertScalar(L"t5", 0.0F);
            propertySet.InsertScalar(L"t6", 0.0F);
            propertySet.InsertScalar(L"t7", 0.0F);
            propertySet.InsertScalar(L"t8", 0.0F);
            propertySet.InsertScalar(L"t9", 0.0F);
            // Layer aggregator
            result.Children().InsertAtTop(ShapeVisual_0());
            StartProgressBoundAnimation(propertySet, L"t0", t0ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t1", t1ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t2", t2ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t3", t3ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t4", t4ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t5", t5ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t6", t6ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t7", t7ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t8", t8ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t9", t9ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t10", t10ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t11", t11ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t12", t12ScalarAnimation_0_to_1(), _rootProgress);
            return result;
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_00()
        {
            return _cubicBezierEasingFunction_00 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.833000004F, 0.833000004F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_01()
        {
            return _cubicBezierEasingFunction_01 = _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.0F }, { 0.666999996F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_02()
        {
            return _cubicBezierEasingFunction_02 = _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.0F }, { 0.833000004F, 0.833000004F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_03()
        {
            return _cubicBezierEasingFunction_03 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.370000005F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_04()
        {
            return _cubicBezierEasingFunction_04 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.513000011F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_05()
        {
            return _cubicBezierEasingFunction_05 = _c.CreateCubicBezierEasingFunction({ 0.56400001F, 0.0F }, { 0.226999998F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_06()
        {
            return _cubicBezierEasingFunction_06 = _c.CreateCubicBezierEasingFunction({ 0.529999971F, 0.0F }, { 0.331999987F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_07()
        {
            return _cubicBezierEasingFunction_07 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.836000025F, 0.949000001F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_08()
        {
            return _cubicBezierEasingFunction_08 = _c.CreateCubicBezierEasingFunction({ 0.381999999F, 0.966000021F }, { 0.82099998F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_09()
        {
            return _cubicBezierEasingFunction_09 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.666999996F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_10()
        {
            return _cubicBezierEasingFunction_10 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.289999992F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_11()
        {
            return _cubicBezierEasingFunction_11 = _c.CreateCubicBezierEasingFunction({ 0.629999995F, 0.0F }, { 0.833000004F, 0.833000004F });
        }

        ExpressionAnimation RootProgress()
        {
            const auto result = _rootProgress = _c.CreateExpressionAnimation(L"_.Progress");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Trail-LB
        // Transforms: Trail-LB
        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_59p2_to_m192p8()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 59.2000008F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.134920642F, 59.2000008F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.148148149F, -74.5439987F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.158730164F, -192.800003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Trail-LB
        // Transforms: Trail-LB
        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_84p9_to_m117p5()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 84.9000015F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.134920642F, 84.9000015F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.148148149F, -27.5440006F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.158730164F, -117.5F, _cubicBezierEasingFunction_00);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Trail-LB
        // Transforms: Trail-LB
        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_84p9_to_m181p4()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 84.9000015F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.187830687F, 84.9000015F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.208994716F, -27.5440006F, _cubicBezierEasingFunction_02);
            result.InsertKeyFrame(0.227513224F, -181.399994F, _cubicBezierEasingFunction_00);
            return result;
        }

        ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0476190522F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.0622724816F, 1.0F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.0622724853F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0855132192F, 1.0F, _cubicBezierEasingFunction_00);
            return result;
        }

        ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0855132267F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.101039678F, 1.0F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.101039685F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.117788352F, 1.0F, _cubicBezierEasingFunction_00);
            return result;
        }

        ScalarKeyFrameAnimation t2ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.11778836F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.140772477F, 1.0F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.140772492F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.164021149F, 1.0F, _cubicBezierEasingFunction_00);
            return result;
        }

        ScalarKeyFrameAnimation t3ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.037037041F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.086084649F, 1.0F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.0860846564F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.107222214F, 1.0F, _cubicBezierEasingFunction_00);
            return result;
        }

        ScalarKeyFrameAnimation t4ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.107222222F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.155436486F, 1.0F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.155436501F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.164021149F, 1.0F, _cubicBezierEasingFunction_00);
            return result;
        }

        ScalarKeyFrameAnimation t5ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.134920657F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.147375643F, 1.0F, _c.CreateCubicBezierEasingFunction({ 0.191F, 0.0F }, { 0.833000004F, 0.82099998F }));
            result.InsertKeyFrame(0.147375658F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.157394171F, 1.0F, _cubicBezierEasingFunction_00);
            return result;
        }

        ScalarKeyFrameAnimation t6ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.157394186F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.169312149F, 1.0F, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.188999996F }, { 0.649999976F, 0.806999981F }));
            result.InsertKeyFrame(0.169312164F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.190476179F, 1.0F, _c.CreateCubicBezierEasingFunction({ 0.458000004F, 0.449000001F }, { 0.800999999F, 0.805000007F }));
            return result;
        }

        ScalarKeyFrameAnimation t7ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.190476194F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.205849186F, 1.0F, _c.CreateCubicBezierEasingFunction({ 0.456F, 0.293000013F }, { 0.833000004F, 0.809000015F }));
            result.InsertKeyFrame(0.2058492F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.216854483F, 1.0F, _cubicBezierEasingFunction_00);
            return result;
        }

        ScalarKeyFrameAnimation t8ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.216854498F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.230158716F, 1.0F, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.182999998F }, { 0.519999981F, 0.639999986F }));
            result.InsertKeyFrame(0.230158731F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.246031731F, 1.0F, _c.CreateCubicBezierEasingFunction({ 0.456999987F, 0.425000012F }, { 0.833000004F, 0.845000029F }));
            return result;
        }

        ScalarKeyFrameAnimation t9ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.248677269F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.279854476F, 1.0F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.279854506F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.346560806F, 1.0F, _cubicBezierEasingFunction_00);
            return result;
        }

        ScalarKeyFrameAnimation t10ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.346560836F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.349206328F, 1.0F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.37301591F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.445216894F, 1.0F, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.833000004F, 0.915000021F }));
            return result;
        }

        ScalarKeyFrameAnimation t11ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.445216924F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.526454985F, 1.0F, _c.CreateCubicBezierEasingFunction({ 0.156000003F, 0.0890000015F }, { 0.776000023F, 1.0F }));
            result.InsertKeyFrame(0.526455104F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.568782985F, 1.0F, _cubicBezierEasingFunction_00);
            return result;
        }

        ScalarKeyFrameAnimation t12ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.494709015F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.534391463F, 1.0F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.534391522F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.568782985F, 1.0F, _c.CreateCubicBezierEasingFunction({ 0.727999985F, 0.379000008F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // TEnd
        ScalarKeyFrameAnimation TEndScalarAnimation_0p9_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.899999976F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.465608478F, 0.899999976F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.470899463F, 0.510500014F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.489418F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TEnd
        ScalarKeyFrameAnimation TEndScalarAnimation_0p91_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.910000026F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.349206358F, 0.910000026F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354497343F, 0.53549999F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.375661373F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TEnd
        ScalarKeyFrameAnimation TEndScalarAnimation_0p349_to_0p448()
        {
            const auto result = _tEndScalarAnimation_0p349_to_0p448 = CreateScalarKeyFrameAnimation(0.0F, 0.349000007F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.187830687F, 0.349000007F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.208994716F, 0.387329996F, _cubicBezierEasingFunction_02);
            result.InsertKeyFrame(0.227513224F, 0.448329985F, _cubicBezierEasingFunction_00);
            return result;
        }

        // Ellipse Path 1.EllipseGeometry
        // TEnd
        ScalarKeyFrameAnimation TEndScalarAnimation_0p387_to_0p35()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.387329996F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.134920642F, 0.387329996F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.148148149F, 0.343589991F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.158730164F, 0.349999994F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TEnd
        ScalarKeyFrameAnimation TEndScalarAnimation_0p881_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.880999982F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.349206358F, 0.880999982F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354497343F, 0.5625F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.375661373F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TEnd
        ScalarKeyFrameAnimation TEndScalarAnimation_0p897_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.897000015F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.465608478F, 0.897000015F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.470899463F, 0.492500007F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.489418F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TEnd
        ScalarKeyFrameAnimation TEndScalarAnimation_0p915_to_0p2_0()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.915000021F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.465608478F, 0.915000021F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.470899463F, 0.492500007F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.489418F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TEnd
        ScalarKeyFrameAnimation TEndScalarAnimation_0p915_to_0p2_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.915000021F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.465608478F, 0.915000021F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.470899463F, 0.594500005F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.489418F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TEnd
        ScalarKeyFrameAnimation TEndScalarAnimation_0p923_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.922999978F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.465608478F, 0.922999978F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.470899463F, 0.510500014F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.489418F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TEnd
        ScalarKeyFrameAnimation TEndScalarAnimation_0p926_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.925999999F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.349206358F, 0.925999999F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354497343F, 0.631500006F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.375661373F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TEnd
        ScalarKeyFrameAnimation TEndScalarAnimation_0p928_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.927999973F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.465608478F, 0.927999973F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.470899463F, 0.594500005F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.489418F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TEnd
        ScalarKeyFrameAnimation TEndScalarAnimation_0p929_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.92900002F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.349206358F, 0.92900002F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354497343F, 0.425500005F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.375661373F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TEnd
        ScalarKeyFrameAnimation TEndScalarAnimation_0p936_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.93599999F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.349206358F, 0.93599999F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354497343F, 0.538500011F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.375661373F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TEnd
        ScalarKeyFrameAnimation TEndScalarAnimation_0p938_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.938000023F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.349206358F, 0.938000023F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354497343F, 0.457500011F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.375661373F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TEnd
        ScalarKeyFrameAnimation TEndScalarAnimation_1_to_0p035_0()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0317460336F, 1.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.0476190485F, 0.449000001F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.0608465597F, 0.0350000001F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TEnd
        ScalarKeyFrameAnimation TEndScalarAnimation_1_to_0p035_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0317460336F, 1.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.0476190485F, 0.372999996F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.0608465597F, 0.0350000001F, _cubicBezierEasingFunction_00);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Circle-LB
        // - ShapeGroup: Group 8 Offset:<166.029, 270.643>
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_0p6_0()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0132275131F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.134920642F, 0.600000024F, CubicBezierEasingFunction_02());
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Circle-LB
        // - Transforms: L-LB
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_0p6_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0449735448F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.156084657F, 0.600000024F, _cubicBezierEasingFunction_02);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: T-DB
        // - Transforms: T-DB Scale:1.0059,1.0059, Offset:<-211.081, -188.504>
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.306878299F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.375661373F, 1.0F, _cubicBezierEasingFunction_00);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Circle2-LB
        // - Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p39_to_0p624_0()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.389999986F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.105820104F, 0.389999986F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.264550269F, 0.624000013F, _cubicBezierEasingFunction_00);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Circle2-LB
        // - Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p39_to_0p624_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.389999986F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.134920642F, 0.389999986F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.338624328F, 0.624000013F, _cubicBezierEasingFunction_00);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: E3-LB
        // -  Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p65_to_0p734()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.649999976F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.46825397F, 0.649999976F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.634920657F, 0.734000027F, _cubicBezierEasingFunction_09);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: E3-LB
        // -  Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p79_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.790000021F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.46825397F, 0.790000021F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.624338627F, 1.0F, _cubicBezierEasingFunction_09);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Circle2-LB
        // - Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
        // Ellipse Path 1.EllipseGeometry
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p135_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.135000005F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.134920642F, 0.135000005F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.166666672F, 0.347000003F, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.666999996F, 0.879000008F }));
            result.InsertKeyFrame(0.41534391F, 1.0F, _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.335999995F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: E3-LB
        // -  Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // Ellipse Path 1.EllipseGeometry
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p235_to_0p405()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.234999999F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.46825397F, 0.234999999F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.626984119F, 0.405000001F, _cubicBezierEasingFunction_09);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: E3-LB
        // -  Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p284_to_0p316()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.284000009F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.46825397F, 0.284000009F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.611111104F, 0.316000015F, _cubicBezierEasingFunction_09);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: T-DB
        // - Transforms: T-LB Scale:1.0059,1.0059, Offset:<-211.081, -188.504>
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p311_to_0p933()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.31099999F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.248677254F, 0.31099999F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.269841284F, 0.442999989F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.351851851F, 0.906000018F, _cubicBezierEasingFunction_07);
            result.InsertKeyFrame(0.391534388F, 0.933000028F, _cubicBezierEasingFunction_08);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Circle2-LB
        // - Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
        // Ellipse Path 1.EllipseGeometry
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p347_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.347000003F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.134920642F, 0.347000003F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.169312164F, 1.0F, _cubicBezierEasingFunction_00);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Circle-LB
        // - Transforms: O-LB Scale:1.0059,1.0059, RotationDegrees:-170,
        // Offset:<-211.395, -188.406>
        // Ellipse Path 1.EllipseGeometry
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p366_to_0p649()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.365999997F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.248677254F, 0.365999997F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.253968269F, 0.398000002F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.306878299F, 0.648999989F, _cubicBezierEasingFunction_00);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: E3-LB
        // -  Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p428_to_0p457()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.428000003F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.46825397F, 0.428000003F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.629629612F, 0.456999987F, _cubicBezierEasingFunction_09);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: T-DB
        // - Transforms: T-DB Scale:1.0059,1.0059, Offset:<-211.081, -188.504>
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p443_to_0p933()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.442999989F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.248677254F, 0.442999989F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.330687821F, 0.906000018F, CubicBezierEasingFunction_07());
            result.InsertKeyFrame(0.370370358F, 0.933000028F, CubicBezierEasingFunction_08());
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: I-DB
        // - Transforms: E-DB Scale:1.0059,1.0059, Offset:<-211.081, -188.504>
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p475_to_0p665()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.474999994F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.373015881F, 0.474999994F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.558201075F, 0.665000021F, _cubicBezierEasingFunction_03);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: E3-LB
        // -  Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p618_to_0p665()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.617999971F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.46825397F, 0.617999971F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.624338627F, 0.665000021F, _cubicBezierEasingFunction_09);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: L-DB
        // - Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p817_to_1_0()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.816999972F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.103174604F, 0.816999972F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.248677254F, 1.0F, _cubicBezierEasingFunction_00);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: L-DB
        // - Transforms: N3 Scale:5.9,5.9, Offset:<451.88, -106.466>
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p817_to_1_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.816999972F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.134920642F, 0.816999972F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.280423284F, 1.0F, _cubicBezierEasingFunction_00);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: E3-LB
        // -  Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // TrimEnd
        ScalarKeyFrameAnimation TrimEndScalarAnimation_0p822_to_0p904()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.822000027F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.46825397F, 0.822000027F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.626984119F, 0.903999984F, _cubicBezierEasingFunction_09);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: E3-LB
        // -  Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // TrimStart
        ScalarKeyFrameAnimation TrimStartScalarAnimation_0p26_to_0p287()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.25999999F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.46825397F, 0.25999999F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.634920657F, 0.287F, _cubicBezierEasingFunction_09);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: E3-LB
        // -  Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // TrimStart
        ScalarKeyFrameAnimation TrimStartScalarAnimation_0p093_to_0()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0930000022F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.46825397F, 0.0930000022F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.648148119F, 0.0F, _cubicBezierEasingFunction_09);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Circle-LB
        // - Transforms: E-DB Scale:1.0059,1.0059, Offset:<-221.66699, -188.57501>
        // TrimStart
        ScalarKeyFrameAnimation TrimStartScalarAnimation_0p122_to_0_0()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.122000001F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.298941791F, 0.122000001F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.40476191F, 0.0F, CubicBezierEasingFunction_03());
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Circle-LB
        // - Transforms: E-LB Scale:1.0059,1.0059, Offset:<-221.66699, -188.57501>
        // TrimStart
        ScalarKeyFrameAnimation TrimStartScalarAnimation_0p122_to_0_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.122000001F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.335978836F, 0.122000001F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.441798955F, 0.0F, _cubicBezierEasingFunction_03);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: E3-LB
        // -  Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // TrimStart
        ScalarKeyFrameAnimation TrimStartScalarAnimation_0p126_to_0()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.126000002F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.46825397F, 0.126000002F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.624338627F, 0.0F, _cubicBezierEasingFunction_09);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Trail-LB
        // - Transforms: Trail-LB
        // TrimStart
        ScalarKeyFrameAnimation TrimStartScalarAnimation_0p199_to_0p387()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.199000001F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.134920642F, 0.199000001F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.158730164F, 0.387329996F, _cubicBezierEasingFunction_00);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: E3-LB
        // -  Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // TrimStart
        ScalarKeyFrameAnimation TrimStartScalarAnimation_0p221_to_0p168()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.221000001F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.46825397F, 0.221000001F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.624338627F, 0.167999998F, _cubicBezierEasingFunction_09);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: I-DB
        // - Transforms: E-DB Scale:1.0059,1.0059, Offset:<-211.081, -188.504>
        // TrimStart
        ScalarKeyFrameAnimation TrimStartScalarAnimation_0p262_to_0()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.261999995F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.373015881F, 0.261999995F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.558201075F, 0.0F, _cubicBezierEasingFunction_03);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: E3-LB
        // -  Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // TrimStart
        ScalarKeyFrameAnimation TrimStartScalarAnimation_0p341_to_0p313()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.340999991F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.46825397F, 0.340999991F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.597883582F, 0.312999994F, _cubicBezierEasingFunction_09);
            return result;
        }

        // Ellipse Path 1.EllipseGeometry
        // TStart
        ScalarKeyFrameAnimation TStartScalarAnimation_0p199_to_0p35()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.199000001F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.134920642F, 0.199000001F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.148148149F, 0.282629997F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.158730164F, 0.349999994F, _cubicBezierEasingFunction_00);
            return result;
        }

        // Ellipse Path 1.EllipseGeometry
        // TStart
        ScalarKeyFrameAnimation TStartScalarAnimation_0p349_to_0p448_0()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.349000007F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.187830687F, 0.349000007F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.208994716F, 0.199000001F, _cubicBezierEasingFunction_02);
            result.InsertKeyFrame(0.227513224F, 0.448329985F, _cubicBezierEasingFunction_00);
            return result;
        }

        // Ellipse Path 1.EllipseGeometry
        // TStart
        ScalarKeyFrameAnimation TStartScalarAnimation_0p349_to_0p448_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.349000007F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.187830687F, 0.349000007F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.208994716F, 0.252999991F, _cubicBezierEasingFunction_02);
            result.InsertKeyFrame(0.227513224F, 0.448329985F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TStart
        ScalarKeyFrameAnimation TStartScalarAnimation_0p759_to_0p2_0()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.759000003F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.349206358F, 0.759000003F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354497343F, 0.328999996F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.375661373F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TStart
        ScalarKeyFrameAnimation TStartScalarAnimation_0p759_to_0p2_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.759000003F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.465608478F, 0.759000003F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.470899463F, 0.469999999F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.489418F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TStart
        ScalarKeyFrameAnimation TStartScalarAnimation_0p766_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.765999973F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.465608478F, 0.765999973F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.470899463F, 0.50999999F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.489418F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TStart
        ScalarKeyFrameAnimation TStartScalarAnimation_0p786_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.786000013F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.465608478F, 0.786000013F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.470899463F, 0.519999981F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.489418F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TStart
        ScalarKeyFrameAnimation TStartScalarAnimation_0p794_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.79400003F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.349206358F, 0.79400003F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354497343F, 0.349999994F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.375661373F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TStart
        ScalarKeyFrameAnimation TStartScalarAnimation_0p809_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.809000015F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.349206358F, 0.809000015F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354497343F, 0.361999989F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.375661373F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TStart
        ScalarKeyFrameAnimation TStartScalarAnimation_0p814_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.81400001F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.465608478F, 0.81400001F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.470899463F, 0.49000001F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.489418F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TStart
        ScalarKeyFrameAnimation TStartScalarAnimation_0p815_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.814999998F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.465608478F, 0.814999998F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.470899463F, 0.569999993F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.489418F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TStart
        ScalarKeyFrameAnimation TStartScalarAnimation_0p821_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.82099998F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.349206358F, 0.82099998F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354497343F, 0.344999999F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.375661373F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TStart
        ScalarKeyFrameAnimation TStartScalarAnimation_0p826_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.825999975F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.465608478F, 0.825999975F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.470899463F, 0.550000012F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.489418F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TStart
        ScalarKeyFrameAnimation TStartScalarAnimation_0p828_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.828000009F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.349206358F, 0.828000009F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354497343F, 0.395000011F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.375661373F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TStart
        ScalarKeyFrameAnimation TStartScalarAnimation_0p851_to_0p2()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.851000011F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.349206358F, 0.851000011F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354497343F, 0.467000008F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.375661373F, 0.200000003F, _cubicBezierEasingFunction_00);
            return result;
        }

        // TStart
        ScalarKeyFrameAnimation TStartScalarAnimation_0p943_to_0p035()
        {
            const auto result = _tStartScalarAnimation_0p943_to_0p035 = CreateScalarKeyFrameAnimation(0.0F, 0.943000019F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0317460336F, 0.943000019F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.0476190485F, 0.289999992F, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.0608465597F, 0.0350000001F, _cubicBezierEasingFunction_00);
            return result;
        }

        // Layer aggregator
        ShapeVisual ShapeVisual_0()
        {
            const auto result = _c.CreateShapeVisual();
            result.Size({ 281.0F, 500.0F });
            const auto shapes = result.Shapes();
            // Layer: Circle-LB
            shapes.Append(ContainerShape_00());
            // Layer: Trail -LB
            shapes.Append(ContainerShape_03());
            // Layer: Circle2-LB
            shapes.Append(ContainerShape_05());
            // Layer: Trail-LB
            shapes.Append(ContainerShape_08());
            // Layer: Trail-LB
            shapes.Append(ContainerShape_11());
            // Layer: L-DB
            shapes.Append(ContainerShape_14());
            // Layer: Circle-LB
            shapes.Append(ContainerShape_16());
            // Layer: T-DB
            shapes.Append(ContainerShape_22());
            // Layer: T-DB
            shapes.Append(ContainerShape_24());
            // Layer: Trail 5-LB
            shapes.Append(ContainerShape_26());
            // Layer: I-DB
            shapes.Append(ContainerShape_28());
            // Layer: Trail 14-LB
            shapes.Append(ContainerShape_38());
            // Layer: T-DB
            shapes.Append(ContainerShape_39());
            // Layer: E3-LB
            shapes.Append(ContainerShape_43());
            return result;
        }

        StepEasingFunction HoldThenStepEasingFunction()
        {
            const auto result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
            result.IsFinalStepSingleFrame(true);
            return result;
        }

        StepEasingFunction StepThenHoldEasingFunction()
        {
            const auto result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
            result.IsInitialStepSingleFrame(true);
            return result;
        }

        // - Transforms: Circle-LB
        // Anchor
        Vector2KeyFrameAnimation AnchorVector2Animation()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 40.0F, -210.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0449735448F, { 40.0F, -210.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.0582010597F, { 49.5999985F, -210.0F }, CubicBezierEasingFunction_01());
            result.InsertKeyFrame(0.0846560821F, { 40.0F, -210.0F }, _cubicBezierEasingFunction_01);
            result.InsertKeyFrame(0.113756612F, { 40.0F, -210.0F }, _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.333000004F }, { 0.666999996F, 0.666999996F }));
            result.InsertKeyFrame(0.126984134F, { 52.2000008F, -164.300003F }, _cubicBezierEasingFunction_01);
            result.InsertKeyFrame(0.140211642F, { 52.2000008F, -210.0F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.666999996F, 1.0F }));
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_00()
        {
            const auto result = _offsetVector2Animation_00 = CreateVector2KeyFrameAnimation(0.0F, { 48.2179985F, 541.382996F }, _holdThenStepEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.0370370373F, { 65.2470016F, 294.950012F }, _cubicBezierEasingFunction_00);
            result.InsertExpressionKeyFrame(0.086084649F, L"(Pow(1-_.t3,3)*Vector2(65.247,294.95))+(3*Square(1-_.t3)*_.t3*Vector2(65.247,294.95))+(3*(1-_.t3)*Square(_.t3)*Vector2(90.38854,9.902489))+(Pow(_.t3,3)*Vector2(103.668,-85.304))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.107222214F, L"(Pow(1-_.t3,3)*Vector2(103.668,-85.304))+(3*Square(1-_.t3)*_.t3*Vector2(115.6573,-171.261))+(3*(1-_.t3)*Square(_.t3)*Vector2(223.8819,-130.6782))+(Pow(_.t3,3)*Vector2(210.074,-85.304))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.155436486F, L"(Pow(1-_.t4,3)*Vector2(210.074,-85.304))+(3*Square(1-_.t4)*_.t4*Vector2(167.2659,55.3681))+(3*(1-_.t4)*Square(_.t4)*Vector2(24.37267,-153.1905))+(Pow(_.t4,3)*Vector2(-112.14,-154.269))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.164021149F, L"(Pow(1-_.t4,3)*Vector2(-112.14,-154.269))+(3*Square(1-_.t4)*_.t4*Vector2(-201.3093,-154.9735))+(3*(1-_.t4)*Square(_.t4)*Vector2(-157.633,-154.521))+(Pow(_.t4,3)*Vector2(-157.633,-154.521))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.164021164F, { -157.632996F, -154.520996F }, _stepThenHoldEasingFunction);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle2-LB
        // Transforms: Circle2-LB
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_01()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -67.064003F, 254.384003F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.134920642F, { -67.064003F, 254.384003F }, _holdThenStepEasingFunction);
            result.InsertExpressionKeyFrame(0.147375643F, L"(Pow(1-_.t5,3)*Vector2(-67.064,254.384))+(3*Square(1-_.t5)*_.t5*Vector2(-67.71792,288.9633))+(3*(1-_.t5)*Square(_.t5)*Vector2(-57.42106,364.1979))+(Pow(_.t5,3)*Vector2(23.032,373.934))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.157394171F, L"(Pow(1-_.t5,3)*Vector2(23.032,373.934))+(3*Square(1-_.t5)*_.t5*Vector2(103.4851,383.6701))+(3*(1-_.t5)*Square(_.t5)*Vector2(136.6321,298.3589))+(Pow(_.t5,3)*Vector2(134.786,265.646))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.169312149F, L"(Pow(1-_.t6,3)*Vector2(134.786,265.646))+(3*Square(1-_.t6)*_.t6*Vector2(132.9399,232.933))+(3*(1-_.t6)*Square(_.t6)*Vector2(98.51456,174.4771))+(Pow(_.t6,3)*Vector2(36.027,166.887))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.190476179F, L"(Pow(1-_.t6,3)*Vector2(36.027,166.887))+(3*Square(1-_.t6)*_.t6*Vector2(-26.46056,159.2969))+(3*(1-_.t6)*Square(_.t6)*Vector2(-65.41009,217.8047))+(Pow(_.t6,3)*Vector2(-67.064,254.384))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.205849186F, L"(Pow(1-_.t7,3)*Vector2(-67.064,254.384))+(3*Square(1-_.t7)*_.t7*Vector2(-68.71792,290.9633))+(3*(1-_.t7)*Square(_.t7)*Vector2(-57.42106,364.1979))+(Pow(_.t7,3)*Vector2(23.032,373.934))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.216854483F, L"(Pow(1-_.t7,3)*Vector2(23.032,373.934))+(3*Square(1-_.t7)*_.t7*Vector2(103.4851,383.6701))+(3*(1-_.t7)*Square(_.t7)*Vector2(136.6321,298.3589))+(Pow(_.t7,3)*Vector2(134.786,265.646))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.230158716F, L"(Pow(1-_.t8,3)*Vector2(134.786,265.646))+(3*Square(1-_.t8)*_.t8*Vector2(132.9399,232.933))+(3*(1-_.t8)*Square(_.t8)*Vector2(98.51456,174.4771))+(Pow(_.t8,3)*Vector2(36.027,166.887))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.246031731F, L"(Pow(1-_.t8,3)*Vector2(36.027,166.887))+(3*Square(1-_.t8)*_.t8*Vector2(-26.46056,159.2969))+(3*(1-_.t8)*Square(_.t8)*Vector2(-66.08423,221.2576))+(Pow(_.t8,3)*Vector2(-67.064,254.384))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.246031746F, { -67.064003F, 254.384003F }, _stepThenHoldEasingFunction);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_02()
        {
            const auto result = _offsetVector2Animation_02 = CreateVector2KeyFrameAnimation(0.0F, { 71.4690018F, 177.981995F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.134920642F, { 71.4690018F, 177.981995F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.246031746F, { 71.4690018F, 207.966995F }, _cubicBezierEasingFunction_00);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Circle-LB
        // - Transforms: Bounce
        // Transforms: Circle-LB
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_03()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -1050.0F, 173.0F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.248677254F, { -1050.0F, 173.0F }, _holdThenStepEasingFunction);
            result.InsertExpressionKeyFrame(0.279854476F, L"(Pow(1-_.t9,3)*Vector2(-1050,173))+(3*Square(1-_.t9)*_.t9*Vector2(-1050,173))+(3*(1-_.t9)*Square(_.t9)*Vector2(-950.6052,6.957533))+(Pow(_.t9,3)*Vector2(-739.345,4.692))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.346560806F, L"(Pow(1-_.t9,3)*Vector2(-739.345,4.692))+(3*Square(1-_.t9)*_.t9*Vector2(-528.0848,2.426466))+(3*(1-_.t9)*Square(_.t9)*Vector2(-563.3317,207.7539))+(Pow(_.t9,3)*Vector2(-10.948,266.461))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.349206328F, L"(Pow(1-_.t10,3)*Vector2(-10.948,266.461))+(3*Square(1-_.t10)*_.t10*Vector2(-0.4770336,267.5739))+(3*(1-_.t10)*Square(_.t10)*Vector2(9.484283,260.8661))+(Pow(_.t10,3)*Vector2(20,261.996))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.349206358F, { 20.0F, 261.996002F }, _stepThenHoldEasingFunction);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle-LB
        // Transforms: Bounce
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_04()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 6.95900011F, -7.08199978F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.248677254F, { 6.95900011F, -7.08199978F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.280423284F, { 6.95900011F, -12.0039997F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.0F, 1.0F }));
            result.InsertKeyFrame(0.304232806F, { 6.95900011F, -7.08199978F }, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.833000004F, 0.833000004F }));
            result.InsertKeyFrame(0.309523821F, { 6.95900011F, -8.4659996F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.320105821F, { 6.95900011F, -7.08199978F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.328042328F, { 6.95900011F, -8.18900013F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.333333343F, { 6.95900011F, -7.08199978F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.349206358F, { 6.95900011F, -7.08199978F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.367724866F, { 9.72599983F, -56.8969994F }, _cubicBezierEasingFunction_00);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle-LB
        // Transforms: I-DB
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_05()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -213.132004F, -138.914001F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.343915343F, { -213.132004F, -138.914001F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.349206358F, { -212.578003F, -157.029999F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.380952388F, { -210.733002F, -191.011002F }, CubicBezierEasingFunction_04());
            result.InsertKeyFrame(0.40476191F, { -211.041F, -185.115005F }, CubicBezierEasingFunction_05());
            result.InsertKeyFrame(0.439153433F, { -210.807007F, -190.014008F }, CubicBezierEasingFunction_06());
            result.InsertKeyFrame(0.489418F, { -210.917999F, -188.520004F }, _cubicBezierEasingFunction_01);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle-LB
        // Transforms: I-LB
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_06()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -213.132004F, -148.113998F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.343915343F, { -213.132004F, -148.113998F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.349206358F, { -212.578003F, -157.029999F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.380952388F, { -210.733002F, -191.011002F }, _cubicBezierEasingFunction_04);
            result.InsertKeyFrame(0.40476191F, { -211.041F, -185.115005F }, _cubicBezierEasingFunction_05);
            result.InsertKeyFrame(0.439153433F, { -210.807007F, -190.014008F }, _cubicBezierEasingFunction_06);
            result.InsertKeyFrame(0.489418F, { -210.917999F, -188.520004F }, _cubicBezierEasingFunction_01);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_07()
        {
            const auto result = _offsetVector2Animation_07 = CreateVector2KeyFrameAnimation(0.0F, { 775.752014F, 477.963013F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.248677254F, { 775.752014F, 477.963013F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.354497343F, { -33.5279999F, 353.04599F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.370370358F, { -45.5169983F, 353.04599F }, _c.CreateCubicBezierEasingFunction({ 0.148000002F, 1.0F }, { 0.493999988F, 1.0F }));
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: I-DB
        // - Transforms: I-DB
        // Transforms: I-LB
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_08()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -0.584999979F, 9.55799961F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.46825397F, { -0.584999979F, 9.55799961F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.484126985F, { 0.0F, 0.0F }, CubicBezierEasingFunction_09());
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: I-DB
        // Transforms: I-DB
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_09()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -213.078003F, -153.272003F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.455026448F, { -213.078003F, -153.272003F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.465608478F, { -211.572006F, -175.697006F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.484126985F, { -210.764008F, -191.619003F }, _cubicBezierEasingFunction_09);
            result.InsertKeyFrame(0.497354507F, { -210.764008F, -188.313004F }, _cubicBezierEasingFunction_01);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: I-DB
        // Transforms: E-LB
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_10()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -170.850006F, -188.434006F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.373015881F, { -170.850006F, -188.434006F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.441798955F, { -210.520004F, -188.434006F }, CubicBezierEasingFunction_10());
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: I-DB
        // Transforms: E-DB
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_11()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -170.850006F, -188.434006F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.373015881F, { -170.850006F, -188.434006F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.526455045F, { -210.520004F, -188.434006F }, _cubicBezierEasingFunction_10);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: I-DB
        // - Transforms: E-DB
        // Transforms: E-LB
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_12()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 60.7980003F, 0.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.373015881F, { 60.7980003F, 0.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.608465612F, { 0.0F, 0.0F }, _cubicBezierEasingFunction_10);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: I-DB
        // Transforms: E-DB
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_13()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -149.440002F, -188.574997F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.373015881F, { -149.440002F, -188.574997F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.428571433F, { -210.597F, -188.574997F }, _cubicBezierEasingFunction_10);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: I-DB
        // - Transforms: E-DB
        // Transforms: E-LB
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_14()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 25.6399994F, 0.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.373015881F, { 25.6399994F, 0.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.693121672F, { -0.651000023F, 0.0F }, _cubicBezierEasingFunction_10);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: I-DB
        // Transforms: E-DB
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_15()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -184.076004F, -188.710999F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.373015881F, { -184.076004F, -188.710999F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.412698418F, { -210.522003F, -188.710999F }, _cubicBezierEasingFunction_10);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_16()
        {
            const auto result = _offsetVector2Animation_16 = CreateVector2KeyFrameAnimation(0.0F, { -152.908997F, 304.079987F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.373015881F, { -152.908997F, 304.079987F }, _holdThenStepEasingFunction);
            result.InsertExpressionKeyFrame(0.445216894F, L"(Pow(1-_.t10,3)*Vector2(-152.909,304.08))+(3*Square(1-_.t10)*_.t10*Vector2(-152.909,304.08))+(3*(1-_.t10)*Square(_.t10)*Vector2(-152.1597,263.8406))+(Pow(_.t10,3)*Vector2(-156.281,251.097))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.526454985F, L"(Pow(1-_.t11,3)*Vector2(-156.281,251.097))+(3*Square(1-_.t11)*_.t11*Vector2(-159.884,239.956))+(3*(1-_.t11)*Square(_.t11)*Vector2(-206.861,239.103))+(Pow(_.t11,3)*Vector2(-206.861,239.103))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.526455045F, { -206.860992F, 239.102997F }, _stepThenHoldEasingFunction);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: T-DB
        // - Transforms: N5
        // Transforms: Circle-LB
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_17()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -224.132996F, -159.832001F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.373015881F, { -224.132996F, -159.832001F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.399470896F, { -66.8830032F, 59.6679993F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.412698418F, { -163.132996F, 143.167999F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.424338639F, { -224.716995F, 150.501999F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.439153433F, { -286.299988F, 199.835007F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.465608478F, { -181.292007F, 371.334991F }, _c.CreateCubicBezierEasingFunction({ 0.419999987F, 0.333000004F }, { 0.829999983F, 0.824000001F }));
            result.InsertKeyFrame(0.494708985F, { -12.1330004F, 290.167999F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.526455045F, { 147.139999F, 289.248993F }, _cubicBezierEasingFunction_00);
            result.InsertExpressionKeyFrame(0.568782985F, L"(Pow(1-_.t11,3)*Vector2(147.14,289.249))+(3*Square(1-_.t11)*_.t11*Vector2(147.14,289.249))+(3*(1-_.t11)*Square(_.t11)*Vector2(229.3565,314.9595))+(Pow(_.t11,3)*Vector2(261.367,344.918))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.568783045F, { 261.367004F, 344.917999F }, _stepThenHoldEasingFunction);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: T-DB
        // Transforms: N5
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_18()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 67.2779999F, 0.649999976F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.412698418F, { 67.2779999F, 0.649999976F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.42592594F, { 67.2779999F, -3.97900009F }, _cubicBezierEasingFunction_03);
            result.InsertKeyFrame(0.439153433F, { 67.2779999F, 0.649999976F }, CubicBezierEasingFunction_11());
            result.InsertKeyFrame(0.465608478F, { 67.2779999F, 0.649999976F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.481481493F, { 67.2779999F, -8.27600002F }, _cubicBezierEasingFunction_03);
            result.InsertKeyFrame(0.494708985F, { 67.2779999F, 0.649999976F }, _cubicBezierEasingFunction_11);
            result.InsertKeyFrame(0.505290985F, { 67.2779999F, -1.66499996F }, _cubicBezierEasingFunction_03);
            result.InsertKeyFrame(0.515873015F, { 67.2779999F, 0.649999976F }, _cubicBezierEasingFunction_11);
            result.InsertKeyFrame(0.526455045F, { 67.2779999F, 0.649999976F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.544973552F, { 67.2779999F, -2.6559999F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.200000003F, 1.0F }));
            result.InsertKeyFrame(0.568783045F, { 67.2779999F, 0.649999976F }, _c.CreateCubicBezierEasingFunction({ 0.800000012F, 0.0F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: E3-LB
        // -  Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // Transforms: Circle-LB
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_19()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -6.6869998F, 259.949005F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.494708985F, { -6.6869998F, 259.949005F }, _holdThenStepEasingFunction);
            result.InsertExpressionKeyFrame(0.534391463F, L"(Pow(1-_.t12,3)*Vector2(-6.687,259.949))+(3*Square(1-_.t12)*_.t12*Vector2(-6.687,259.949))+(3*(1-_.t12)*Square(_.t12)*Vector2(-2.792036,259.9982))+(Pow(_.t12,3)*Vector2(5.658,259.949))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.568782985F, L"(Pow(1-_.t12,3)*Vector2(5.658,259.949))+(3*Square(1-_.t12)*_.t12*Vector2(14.10804,259.8998))+(3*(1-_.t12)*Square(_.t12)*Vector2(16.795,270))+(Pow(_.t12,3)*Vector2(16.795,270))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.568783045F, { 16.7950001F, 270.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.634920657F, { 22.0410004F, 270.050995F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.681999981F, 1.0F }));
            return result;
        }

        // - - Layer aggregator
        // - Layer: E3-LB
        // Scale:0.74933,0.74963, Offset:<100.358, 183.128>
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_20()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 104.769997F, 13.5979996F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.568783045F, { 104.769997F, 13.5979996F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.58465606F, { 104.769997F, 12.7229996F }, _cubicBezierEasingFunction_09);
            result.InsertKeyFrame(0.600529075F, { 104.769997F, 13.5979996F }, _cubicBezierEasingFunction_02);
            return result;
        }

        // - Transforms: Circle-LB
        // Position
        Vector2KeyFrameAnimation PositionVector2Animation()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 151.039001F, 86.2699966F }, _holdThenStepEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.0476190485F, { 151.182999F, 215.664993F }, _c.CreateCubicBezierEasingFunction({ 0.507000029F, 0.0710000023F }, { 0.833000004F, 0.833000004F }));
            result.InsertExpressionKeyFrame(0.0622724816F, L"(Pow(1-_.t0,3)*Vector2(151.183,215.665))+(3*Square(1-_.t0)*_.t0*Vector2(151.183,215.665))+(3*(1-_.t0)*Square(_.t0)*Vector2(152.3022,218.2585))+(Pow(_.t0,3)*Vector2(149.526,243.382))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.0855132192F, L"(Pow(1-_.t0,3)*Vector2(149.526,243.382))+(3*Square(1-_.t0)*_.t0*Vector2(146.7498,268.5056))+(3*(1-_.t0)*Square(_.t0)*Vector2(141.351,286.676))+(Pow(_.t0,3)*Vector2(141.351,286.676))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.101039678F, L"(Pow(1-_.t1,3)*Vector2(141.351,286.676))+(3*Square(1-_.t1)*_.t1*Vector2(141.351,286.676))+(3*(1-_.t1)*Square(_.t1)*Vector2(129.0357,310.2725))+(Pow(_.t1,3)*Vector2(120.158,294.548))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.117788352F, L"(Pow(1-_.t1,3)*Vector2(120.158,294.548))+(3*Square(1-_.t1)*_.t1*Vector2(111.2803,278.8235))+(3*(1-_.t1)*Square(_.t1)*Vector2(123.8171,271.5963))+(Pow(_.t1,3)*Vector2(131.663,272.749))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.140772477F, L"(Pow(1-_.t2,3)*Vector2(131.663,272.749))+(3*Square(1-_.t2)*_.t2*Vector2(142.31,274.3133))+(3*(1-_.t2)*Square(_.t2)*Vector2(153.6631,286.6255))+(Pow(_.t2,3)*Vector2(167.691,296.667))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.164021149F, L"(Pow(1-_.t2,3)*Vector2(167.691,296.667))+(3*Square(1-_.t2)*_.t2*Vector2(181.7189,306.7085))+(3*(1-_.t2)*Square(_.t2)*Vector2(193.2231,310.7192))+(Pow(_.t2,3)*Vector2(208.564,311.2))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.164021164F, { 208.563995F, 311.200012F }, _stepThenHoldEasingFunction);
            return result;
        }

        // - - Transforms: Circle-LB
        // - ShapeGroup: Ellipse 1 Offset:<40, -210>
        // Ellipse Path 1.EllipseGeometry
        // Radius
        Vector2KeyFrameAnimation RadiusVector2Animation_0()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 28.1170006F, 42.0169983F }, StepThenHoldEasingFunction());
            result.InsertKeyFrame(0.0449735448F, { 28.1170006F, 42.0169983F }, HoldThenStepEasingFunction());
            result.InsertKeyFrame(0.0502645485F, { 28.1170006F, 28.1170006F }, CubicBezierEasingFunction_00());
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - - Layer: Circle-LB
        // - - - Transforms: Bounce
        // - - Transforms: Circle-LB
        // - ShapeGroup: Ellipse 1 Offset:<40, -210>
        // Ellipse Path 1.EllipseGeometry
        // Radius
        Vector2KeyFrameAnimation RadiusVector2Animation_1()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 28.1170006F, 28.1170006F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.346560836F, { 28.1170006F, 28.1170006F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.349206358F, { 28.1170006F, 22.8169994F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.351851851F, { 28.1170006F, 28.1170006F }, _cubicBezierEasingFunction_00);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - - Layer: T-DB
        // - - - Transforms: N5
        // - - Transforms: Circle-LB
        // - ShapeGroup: Ellipse 1 Offset:<40, -210>
        // Ellipse Path 1.EllipseGeometry
        // Radius
        Vector2KeyFrameAnimation RadiusVector2Animation_2()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 28.1170006F, 28.1170006F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.462962955F, { 28.1170006F, 28.1170006F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.465608478F, { 28.1170006F, 21.0170002F }, _cubicBezierEasingFunction_00);
            result.InsertKeyFrame(0.46825397F, { 28.1170006F, 28.1170006F }, _cubicBezierEasingFunction_00);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle-LB
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_00()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.134920642F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Trail -LB
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_01()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0317460336F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.0634920672F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation ShapeVisibilityAnimation_02()
        {
            const auto result = _shapeVisibilityAnimation_02 = CreateVector2KeyFrameAnimation(0.134920642F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.248677254F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Trail-LB
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_03()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.134920642F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.161375657F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Trail-LB
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_04()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.187830687F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.232804239F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation ShapeVisibilityAnimation_05()
        {
            const auto result = _shapeVisibilityAnimation_05 = CreateVector2KeyFrameAnimation(0.248677254F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.373015881F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: T-DB
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_06()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.306878299F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.373015881F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Trail 5-LB
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_07()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.349206358F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.373015881F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation ShapeVisibilityAnimation_08()
        {
            const auto result = _shapeVisibilityAnimation_08 = CreateVector2KeyFrameAnimation(0.373015881F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.526455045F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Trail 14-LB
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_09()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.465608478F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.497354507F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: E3-LB
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_10()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.526455045F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        static IGeometrySource2D CanvasGeometryToIGeometrySource2D(winrt::com_ptr<CanvasGeometry> geo)
        {
            return geo.as<IGeometrySource2D>();
        }

    public:
        LottieLogo2_AnimatedVisual(Compositor compositor)
            : _c{compositor}
            , _reusableExpressionAnimation(compositor.CreateExpressionAnimation())
        {
            winrt::check_hresult(D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, _d2dFactory.put()));
            const auto _ = Root();
        }

        void Close()
        {
            if (_root)
            {
                _root.Close();
            }
        }

        TimeSpan Duration() const
        {
            return TimeSpan{ c_durationTicks };
        }

        Visual RootVisual() const
        {
            return _root;
        }

        float2 Size() const
        {
            return { 281.0F, 500.0F };
        }

        static bool IsRuntimeCompatible()
        {
            return winrt::Windows::Foundation::Metadata::ApiInformation::IsApiContractPresent(L"Windows.Foundation.UniversalApiContract", 7);
        }
    };

    winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual LottieLogo2::TryCreateAnimatedVisual(
        Compositor const& compositor,
        IInspectable& diagnostics)
    {
        diagnostics = nullptr;

        if (LottieLogo2_AnimatedVisual::IsRuntimeCompatible())
        {
            return winrt::make<LottieLogo2_AnimatedVisual>(compositor);
        }

        return nullptr;
    }

    double LottieLogo2::FrameToProgress(double frameNumber)
    {
        return frameNumber / 378.0;
    }

    winrt::Windows::Foundation::Collections::IMapView<hstring, double> LottieLogo2::Markers()
    {
        return winrt::single_threaded_map<winrt::hstring, double>(
            std::map<winrt::hstring, double>
            {
            }
        ).GetView();
    }

    void LottieLogo2::SetColorProperty(hstring const&, Color)
    {
    }

    void LottieLogo2::SetScalarProperty(hstring const&, double)
    {
    }
} // end namespace

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.0.0-build.90+ga9eb6fa111
//       
//       Command:
//           LottieGen -InterfaceBaseName Microsoft.UI.Xaml.Controls.IAnimatedVisual -Language Cppwinrt -WinUIVersion 2.4 -InputFile Watermelon.json
//       
//       Input file:
//           Watermelon.json (27246 bytes created 20:50-08:00 Dec 28 2020)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ___________________________________________________________
// |       Object stats       | UAP v11 count | UAP v7 count |
// |__________________________|_______________|______________|
// | All CompositionObjects   |           342 |          334 |
// |--------------------------+---------------+--------------|
// | Expression animators     |            77 |           75 |
// | KeyFrame animators       |            63 |           61 |
// | Reference parameters     |            71 |           69 |
// | Expression operations    |             0 |            0 |
// |--------------------------+---------------+--------------|
// | Animated brushes         |             5 |            5 |
// | Animated gradient stops  |             - |            - |
// | ExpressionAnimations     |             2 |            2 |
// | PathKeyFrameAnimations   |             2 |            - |
// |--------------------------+---------------+--------------|
// | ContainerVisuals         |             1 |            1 |
// | ShapeVisuals             |             1 |            1 |
// |--------------------------+---------------+--------------|
// | ContainerShapes          |            27 |           27 |
// | CompositionSpriteShapes  |            19 |           19 |
// |--------------------------+---------------+--------------|
// | Brushes                  |             9 |            9 |
// | Gradient stops           |             - |            - |
// | CompositionVisualSurface |             - |            - |
// -----------------------------------------------------------
#include "pch.h"
#include "AnimatedVisuals.Watermelon.h"
#include "AnimatedVisuals.Watermelon.g.cpp"
#include <winrt/Windows.Foundation.Metadata.h>
#include <winrt/Windows.UI.Composition.h>
#include "d2d1.h"
#include <d2d1_1.h>
#include <d2d1helper.h>
#include <Windows.Graphics.Interop.h>
#ifdef BUILD_WINDOWS
namespace ABI
{
#include <Windows.Graphics.Effects.Interop.h>
}
#else
#include <Windows.Graphics.Effects.Interop.h>
#endif
#include <winrt/Windows.Graphics.Effects.h>

using namespace winrt::Windows::Foundation;
using namespace winrt::Windows::Foundation::Numerics;
using namespace winrt::Windows::Graphics;
using namespace winrt::Windows::UI;
using namespace winrt::Windows::UI::Composition;
using TimeSpan = winrt::Windows::Foundation::TimeSpan;

namespace winrt::AnimatedVisuals::implementation
{
    class CanvasGeometry : public winrt::implements<CanvasGeometry,
        IGeometrySource2D,
        ::ABI::Windows::Graphics::IGeometrySource2DInterop>
    {
        winrt::com_ptr<ID2D1Geometry> _geometry{ nullptr };

    public:
        CanvasGeometry(winrt::com_ptr<ID2D1Geometry> geometry)
            : _geometry{ geometry }
        { }

        // IGeometrySource2D.
        winrt::com_ptr<ID2D1Geometry> Geometry() { return _geometry; }

        // IGeometrySource2DInterop.
        IFACEMETHODIMP GetGeometry(ID2D1Geometry** value) override
        {
            _geometry.copy_to(value);
            return S_OK;
        }

        // IGeometrySource2DInterop.
        IFACEMETHODIMP TryGetGeometryUsingFactory(ID2D1Factory*, ID2D1Geometry**) override
        {
            return E_NOTIMPL;
        }
    };
    class Watermelon_AnimatedVisual_UAPv11 : public winrt::implements<Watermelon_AnimatedVisual_UAPv11,
            winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual,
            IClosable>
    {
        winrt::com_ptr<ID2D1Factory> _d2dFactory{ nullptr };
        static constexpr int64_t c_durationTicks{ 93833333L };
        Compositor const _c{ nullptr };
        ExpressionAnimation const _reusableExpressionAnimation{ nullptr };
        winrt::com_ptr<CanvasGeometry> _geometry_16{ nullptr };
        CompositionColorBrush _animatedColorBrush_TransparentAlmostDimGray_0056595B_to_AlmostDimGray_FF56595B{ nullptr };
        CompositionColorBrush _animatedColorBrush_TransparentAlmostDimGray_0056595B_to_TransparentAlmostDimGray_0056595B{ nullptr };
        CompositionColorBrush _animatedColorBrush_TransparentAlmostOldLace_00FFF4E8_to_AlmostOldLace_FFFFF4E8{ nullptr };
        CompositionColorBrush _colorBrush_AlmostDimGray_FF56595B{ nullptr };
        CompositionPath _path_0{ nullptr };
        CompositionPath _path_1{ nullptr };
        CompositionPathGeometry _pathGeometry_11{ nullptr };
        CompositionPathGeometry _pathGeometry_12{ nullptr };
        ContainerVisual _root{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_0{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_1{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_2{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_3{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_4{ nullptr };
        ExpressionAnimation _rootProgress{ nullptr };
        ExpressionAnimation _rootProgressRemapped{ nullptr };
        ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_0{ nullptr };
        ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_m90_to_0{ nullptr };
        ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_m111p167_to_0{ nullptr };
        ScalarKeyFrameAnimation _scaleYScalarAnimation_1_to_1{ nullptr };
        StepEasingFunction _holdThenStepEasingFunction{ nullptr };
        StepEasingFunction _stepThenHoldEasingFunction{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_0{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_1{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_2{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_3{ nullptr };

        static void StartProgressBoundAnimation(
            CompositionObject target,
            winrt::hstring animatedPropertyName,
            CompositionAnimation animation,
            ExpressionAnimation controllerProgressExpression)
        {
            target.StartAnimation(animatedPropertyName, animation);
            const auto controller = target.TryGetAnimationController(animatedPropertyName);
            controller.Pause();
            controller.StartAnimation(L"Progress", controllerProgressExpression);
        }

        ColorKeyFrameAnimation CreateColorKeyFrameAnimation(float initialProgress, Color initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateColorKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InterpolationColorSpace(CompositionColorSpace::Rgb);
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreatePathKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateScalarKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, float2 initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateVector2KeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, float3x2 transformMatrix)
        {
            const auto result = _c.CreateSpriteShape(geometry);
            result.TransformMatrix(transformMatrix);
            return result;
        }

        CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, float3x2 transformMatrix, CompositionBrush fillBrush)
        {
            const auto result = _c.CreateSpriteShape(geometry);
            result.TransformMatrix(transformMatrix);
            result.FillBrush(fillBrush);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - ShapeGroup: Group 14 Offset:<70.893, 35.572>
        winrt::com_ptr<CanvasGeometry> Geometry_00()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -70.6429977F, -35.3219986F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -70.6429977F, -16.4519997F }, { -63.2949982F, 1.28900003F }, { -49.9519997F, 14.6309996F } });
            sink->AddBezier({ { -36.6090012F, 27.9740009F }, { -18.8689995F, 35.3219986F }, { 0.0F, 35.3219986F } });
            sink->AddBezier({ { 18.8689995F, 35.3219986F }, { 36.6090012F, 27.9740009F }, { 49.9519997F, 14.6309996F } });
            sink->AddBezier({ { 63.2949982F, 1.28900003F }, { 70.6429977F, -16.4519997F }, { 70.6429977F, -35.3219986F } });
            sink->AddLine({ -70.6429977F, -35.3219986F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - ShapeGroup: Group 13 Offset:<70.893, 31.283>
        winrt::com_ptr<CanvasGeometry> Geometry_01()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 62.0649986F, -31.0330009F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 62.0649986F, 3.24499989F }, { 34.2779999F, 31.0330009F }, { 0.0F, 31.0330009F } });
            sink->AddBezier({ { -34.2770004F, 31.0330009F }, { -62.0649986F, 3.24499989F }, { -62.0649986F, -31.0330009F } });
            sink->AddLine({ 62.0649986F, -31.0330009F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_02()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 9.61100006F, 0.158999994F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 1.14199996F, 3.59299994F }, { -5.94000006F, 1.41199994F }, { -9.45300007F, 0.0930000022F } });
            sink->AddBezier({ { -11.2419996F, -0.574999988F }, { -12.5450001F, -0.451000005F }, { -12.1190004F, -0.172999993F } });
            sink->AddBezier({ { -11.493F, 0.237000003F }, { -10.1070004F, 0.790000021F }, { -8.22700024F, 1.40100002F } });
            sink->AddBezier({ { -8.71800041F, 1.24199998F }, { -9.17500019F, 1.08599997F }, { -9.59399986F, 0.93599999F } });
            sink->AddBezier({ { -6.92600012F, 1.33099997F }, { -3.7420001F, 2.1559999F }, { -0.00200000009F, 2.1559999F } });
            sink->AddBezier({ { 3.73600006F, 2.1559999F }, { 7.06400013F, 1.35699999F }, { 9.73700047F, 1.00399995F } });
            sink->AddBezier({ { 9.61800003F, 1.04499996F }, { 9.49499989F, 1.08599997F }, { 9.36999989F, 1.12699997F } });
            sink->AddBezier({ { 9.80500031F, 0.98299998F }, { 10.2069998F, 0.842000008F }, { 10.566F, 0.708000004F } });
            sink->AddBezier({ { 10.5579996F, 0.709999979F }, { 10.5500002F, 0.712000012F }, { 10.5419998F, 0.713999987F } });
            sink->AddBezier({ { 10.5530005F, 0.711000025F }, { 10.5640001F, 0.708999991F }, { 10.5749998F, 0.70599997F } });
            sink->AddBezier({ { 11.3450003F, 0.418000013F }, { 11.9300003F, 0.156000003F }, { 12.2810001F, -0.0659999996F } });
            sink->AddBezier({ { 12.71F, -0.337000012F }, { 11.2690001F, -0.782000005F }, { 9.61100006F, 0.158999994F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - - - Layer aggregator
        // - - - - - - - Layer: Mth
        // - - - - - Transforms: NULL CONTROL
        // - - - - Transforms: Bdy
        // - - - Transforms: Mth
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_03()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 9.91499996F, -4.96400023F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 9.91499996F, -4.96400023F }, { -9.91300011F, -4.96400023F }, { -9.91300011F, -4.96400023F } });
            sink->AddBezier({ { -11.7150002F, -4.96400023F }, { -13.0480003F, -3.25F }, { -12.5699997F, -1.51199996F } });
            sink->AddBezier({ { -11.8669996F, 1.04900002F }, { -10.3920002F, 3.28999996F }, { -8.42199993F, 4.96400023F } });
            sink->AddBezier({ { -8.93599987F, 4.52600002F }, { -9.41699982F, 4.05000019F }, { -9.85900021F, 3.53800011F } });
            sink->AddBezier({ { -7.171F, 1.33299994F }, { -3.73799992F, 0.00499999989F }, { 0.00200000009F, 0.00499999989F } });
            sink->AddBezier({ { 3.74000001F, 0.00499999989F }, { 7.171F, 1.33099997F }, { 9.8579998F, 3.53600001F } });
            sink->AddBezier({ { 9.7329998F, 3.68000007F }, { 9.60499954F, 3.8210001F }, { 9.47399998F, 3.96000004F } });
            sink->AddBezier({ { 9.93000031F, 3.47600007F }, { 10.3529997F, 2.96000004F }, { 10.7320004F, 2.41100001F } });
            sink->AddBezier({ { 10.724F, 2.41400003F }, { 10.7150002F, 2.41700006F }, { 10.7069998F, 2.42000008F } });
            sink->AddBezier({ { 10.7180004F, 2.41499996F }, { 10.7299995F, 2.41199994F }, { 10.7410002F, 2.40799999F } });
            sink->AddBezier({ { 11.5550003F, 1.22599995F }, { 12.1820002F, -0.0939999968F }, { 12.5719995F, -1.51199996F } });
            sink->AddBezier({ { 13.0489998F, -3.25F }, { 11.717F, -4.96400023F }, { 9.91499996F, -4.96400023F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_04()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -0.00200000009F, -1.88199997F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -3.7420001F, -1.88199997F }, { -6.92600012F, -2.70700002F }, { -9.59300041F, -3.102F } });
            sink->AddBezier({ { -9.17500019F, -2.9519999F }, { -8.71800041F, -2.79500008F }, { -8.22700024F, -2.63599992F } });
            sink->AddBezier({ { -8.20800018F, -2.63000011F }, { -8.18999958F, -2.62400007F }, { -8.17099953F, -2.61800003F } });
            sink->AddBezier({ { -7.70599985F, -2.46700001F }, { -7.21099997F, -2.31399989F }, { -6.68900013F, -2.15799999F } });
            sink->AddBezier({ { -6.61000013F, -2.13400006F }, { -6.53100014F, -2.11100006F }, { -6.44999981F, -2.08699989F } });
            sink->AddBezier({ { -6.23199987F, -2.02200007F }, { -6.0079999F, -1.95700002F }, { -5.78000021F, -1.89100003F } });
            sink->AddBezier({ { -5.64300013F, -1.852F }, { -5.50699997F, -1.81299996F }, { -5.36600018F, -1.773F } });
            sink->AddBezier({ { -5.23899984F, -1.73699999F }, { -5.11000013F, -1.70099998F }, { -4.98000002F, -1.66499996F } });
            sink->AddBezier({ { -4.81400013F, -1.61899996F }, { -4.64599991F, -1.57299995F }, { -4.4749999F, -1.52600002F } });
            sink->AddBezier({ { -4.36800003F, -1.49699998F }, { -4.26000023F, -1.46700001F }, { -4.15100002F, -1.43799996F } });
            sink->AddBezier({ { -3.90199995F, -1.37100005F }, { -3.648F, -1.30299997F }, { -3.39199996F, -1.23599994F } });
            sink->AddBezier({ { -3.29500008F, -1.21099997F }, { -3.19700003F, -1.18499994F }, { -3.09899998F, -1.15999997F } });
            sink->AddBezier({ { -2.8440001F, -1.09399998F }, { -2.56900001F, -1.09800005F }, { -2.30100012F, -1.09300005F } });
            sink->AddBezier({ { -2.25999999F, -1.09200001F }, { -2.2190001F, -1.09200001F }, { -2.17799997F, -1.09099996F } });
            sink->AddBezier({ { -1.86800003F, -1.08599997F }, { -1.55299997F, -1.08200002F }, { -1.23599994F, -1.079F } });
            sink->AddBezier({ { -1.15400004F, -1.07799995F }, { -1.07099998F, -1.07799995F }, { -0.989000022F, -1.07700002F } });
            sink->AddBezier({ { -0.662999988F, -1.074F }, { -0.335000008F, -1.07299995F }, { -0.00300000003F, -1.07299995F } });
            sink->AddBezier({ { 0.25999999F, -1.07299995F }, { 0.521000028F, -1.07299995F }, { 0.779999971F, -1.07500005F } });
            sink->AddBezier({ { 0.867999971F, -1.07599998F }, { 0.954999983F, -1.07599998F }, { 1.04299998F, -1.07700002F } });
            sink->AddBezier({ { 1.21300006F, -1.07799995F }, { 1.38300002F, -1.08000004F }, { 1.551F, -1.08200002F } });
            sink->AddBezier({ { 1.65499997F, -1.08299994F }, { 1.75699997F, -1.08500004F }, { 1.86000001F, -1.08599997F } });
            sink->AddBezier({ { 2.00999999F, -1.08800006F }, { 2.16000009F, -1.09099996F }, { 2.30800009F, -1.09399998F } });
            sink->AddBezier({ { 2.41700006F, -1.09599996F }, { 2.66599989F, -1.06099999F }, { 2.77099991F, -1.08599997F } });
            sink->AddBezier({ { 2.9059999F, -1.11800003F }, { 3.03999996F, -1.15100002F }, { 3.1730001F, -1.18299997F } });
            sink->AddBezier({ { 3.28200006F, -1.20899999F }, { 3.3900001F, -1.23599994F }, { 3.49799991F, -1.26199996F } });
            sink->AddBezier({ { 3.625F, -1.29299998F }, { 3.75200009F, -1.32500005F }, { 3.87700009F, -1.35599995F } });
            sink->AddBezier({ { 3.98699999F, -1.38300002F }, { 4.09600019F, -1.41100001F }, { 4.204F, -1.43799996F } });
            sink->AddBezier({ { 4.32200003F, -1.46800005F }, { 4.43900013F, -1.49699998F }, { 4.55600023F, -1.52699995F } });
            sink->AddBezier({ { 4.66699982F, -1.55599999F }, { 4.78000021F, -1.58500004F }, { 4.88899994F, -1.61300004F } });
            sink->AddBezier({ { 4.99599981F, -1.64100003F }, { 5.0999999F, -1.66799998F }, { 5.20499992F, -1.69500005F } });
            sink->AddBezier({ { 5.3210001F, -1.72599995F }, { 5.4380002F, -1.75699997F }, { 5.55200005F, -1.78699994F } });
            sink->AddBezier({ { 5.60699987F, -1.80200005F }, { 5.65999985F, -1.81599998F }, { 5.71400023F, -1.83099997F } });
            sink->AddBezier({ { 6.01100016F, -1.91100001F }, { 6.30000019F, -1.99000001F }, { 6.58300018F, -2.06900001F } });
            sink->AddBezier({ { 6.63800001F, -2.08400011F }, { 6.69500017F, -2.0999999F }, { 6.74900007F, -2.11500001F } });
            sink->AddBezier({ { 6.8829999F, -2.15300012F }, { 7.01399994F, -2.19000006F }, { 7.14499998F, -2.22799993F } });
            sink->AddBezier({ { 7.20800018F, -2.24600005F }, { 7.27099991F, -2.26399994F }, { 7.33300018F, -2.28200006F } });
            sink->AddBezier({ { 7.46000004F, -2.31900001F }, { 7.58500004F, -2.35500002F }, { 7.70900011F, -2.39199996F } });
            sink->AddBezier({ { 7.76999998F, -2.41000009F }, { 7.83099985F, -2.42799997F }, { 7.89099979F, -2.4460001F } });
            sink->AddBezier({ { 8.01500034F, -2.48300004F }, { 8.13700008F, -2.51999998F }, { 8.25699997F, -2.55699992F } });
            sink->AddBezier({ { 8.31099987F, -2.57299995F }, { 8.36499977F, -2.59100008F }, { 8.41800022F, -2.60700011F } });
            sink->AddBezier({ { 8.53999996F, -2.64499998F }, { 8.65999985F, -2.68199992F }, { 8.77700043F, -2.7190001F } });
            sink->AddBezier({ { 8.82400036F, -2.73399997F }, { 8.86900043F, -2.74799991F }, { 8.91499996F, -2.76300001F } });
            sink->AddBezier({ { 9.03600025F, -2.80200005F }, { 9.15499973F, -2.83999991F }, { 9.27200031F, -2.87800002F } });
            sink->AddBezier({ { 9.30500031F, -2.88899994F }, { 9.3380003F, -2.9000001F }, { 9.36999989F, -2.91100001F } });
            sink->AddBezier({ { 9.49499989F, -2.9519999F }, { 9.61900043F, -2.99399996F }, { 9.73700047F, -3.03399992F } });
            sink->AddBezier({ { 7.06400013F, -2.68099999F }, { 3.73699999F, -1.88199997F }, { -0.00200000009F, -1.88199997F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - - - Layer aggregator
        // - - - - - - - Layer: Mth
        // - - - - - Transforms: NULL CONTROL
        // - - - - Transforms: Bdy
        // - - - Transforms: Mth
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_05()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 0.00200000009F, -4.03399992F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -3.73799992F, -4.03399992F }, { -7.171F, -2.70499992F }, { -9.8579998F, -0.499000013F } });
            sink->AddBezier({ { -9.41699982F, 0.0120000001F }, { -8.93700027F, 0.488999993F }, { -8.42300034F, 0.926999986F } });
            sink->AddBezier({ { -8.40299988F, 0.943000019F }, { -8.38300037F, 0.959999979F }, { -8.36299992F, 0.976000011F } });
            sink->AddBezier({ { -7.87599993F, 1.38600004F }, { -7.35900021F, 1.75899994F }, { -6.81500006F, 2.09500003F } });
            sink->AddBezier({ { -6.7329998F, 2.14599991F }, { -6.65100002F, 2.19499993F }, { -6.56699991F, 2.24300003F } });
            sink->AddBezier({ { -6.34000015F, 2.37700009F }, { -6.10699987F, 2.50399995F }, { -5.86999989F, 2.62400007F } });
            sink->AddBezier({ { -5.72800016F, 2.69700003F }, { -5.58599997F, 2.76900005F }, { -5.44000006F, 2.83599997F } });
            sink->AddBezier({ { -5.30800009F, 2.898F }, { -5.17399979F, 2.95499992F }, { -5.03900003F, 3.01200008F } });
            sink->AddBezier({ { -4.8670001F, 3.08500004F }, { -4.69299984F, 3.15300012F }, { -4.51599979F, 3.2190001F } });
            sink->AddBezier({ { -4.40500021F, 3.25999999F }, { -4.29300022F, 3.3039999F }, { -4.17999983F, 3.34200001F } });
            sink->AddBezier({ { -3.92199993F, 3.43000007F }, { -3.66000009F, 3.5079999F }, { -3.39499998F, 3.57999992F } });
            sink->AddBezier({ { -3.29500008F, 3.60700011F }, { -3.19400001F, 3.63199997F }, { -3.09299994F, 3.65700006F } });
            sink->AddBezier({ { -2.82999992F, 3.72099996F }, { -2.56599998F, 3.77900004F }, { -2.2980001F, 3.8269999F } });
            sink->AddBezier({ { -2.25699997F, 3.83500004F }, { -2.21499991F, 3.84500003F }, { -2.17400002F, 3.852F } });
            sink->AddBezier({ { -1.86399996F, 3.90400004F }, { -1.54900002F, 3.94199991F }, { -1.23199999F, 3.97199988F } });
            sink->AddBezier({ { -1.14999998F, 3.97900009F }, { -1.06799996F, 3.98600006F }, { -0.986000001F, 3.9920001F } });
            sink->AddBezier({ { -0.660000026F, 4.0170002F }, { -0.331F, 4.03399992F }, { 0.00100000005F, 4.03399992F } });
            sink->AddBezier({ { 0.263999999F, 4.03399992F }, { 0.524999976F, 4.0250001F }, { 0.783999979F, 4.00899982F } });
            sink->AddBezier({ { 0.871999979F, 4.00400019F }, { 0.958999991F, 3.99399996F }, { 1.04700005F, 3.98699999F } });
            sink->AddBezier({ { 1.21700001F, 3.97399998F }, { 1.38699996F, 3.95900011F }, { 1.55499995F, 3.93899989F } });
            sink->AddBezier({ { 1.65900004F, 3.92700005F }, { 1.76100004F, 3.91100001F }, { 1.86399996F, 3.89599991F } });
            sink->AddBezier({ { 2.01399994F, 3.87400007F }, { 2.16400003F, 3.852F }, { 2.31200004F, 3.82500005F } });
            sink->AddBezier({ { 2.421F, 3.80500007F }, { 2.52900004F, 3.78299999F }, { 2.63700008F, 3.76099992F } });
            sink->AddBezier({ { 2.77600002F, 3.73200011F }, { 2.91400003F, 3.70099998F }, { 3.05100012F, 3.66799998F } });
            sink->AddBezier({ { 3.16300011F, 3.64100003F }, { 3.27399993F, 3.61299992F }, { 3.38499999F, 3.58299994F } });
            sink->AddBezier({ { 3.51600003F, 3.5480001F }, { 3.64599991F, 3.50900006F }, { 3.7750001F, 3.47000003F } });
            sink->AddBezier({ { 3.88800001F, 3.43600011F }, { 4.00199986F, 3.40100002F }, { 4.11299992F, 3.36400008F } });
            sink->AddBezier({ { 4.23500013F, 3.32299995F }, { 4.35500002F, 3.27900004F }, { 4.47599983F, 3.2349999F } });
            sink->AddBezier({ { 4.59100008F, 3.19199991F }, { 4.70699978F, 3.15100002F }, { 4.82000017F, 3.10500002F } });
            sink->AddBezier({ { 4.92999983F, 3.06100011F }, { 5.03800011F, 3.01300001F }, { 5.14599991F, 2.96600008F } });
            sink->AddBezier({ { 5.26599979F, 2.91400003F }, { 5.38700008F, 2.86400008F }, { 5.50500011F, 2.80900002F } });
            sink->AddBezier({ { 5.5619998F, 2.78200006F }, { 5.61600018F, 2.75200009F }, { 5.67199993F, 2.7249999F } });
            sink->AddBezier({ { 5.97900009F, 2.57500005F }, { 6.27899981F, 2.41400003F }, { 6.57200003F, 2.2420001F } });
            sink->AddBezier({ { 6.62900019F, 2.20799994F }, { 6.6869998F, 2.17700005F }, { 6.74300003F, 2.14199996F } });
            sink->AddBezier({ { 6.88199997F, 2.05699992F }, { 7.01900005F, 1.96700001F }, { 7.15500021F, 1.87699997F } });
            sink->AddBezier({ { 7.21999979F, 1.83399999F }, { 7.28499985F, 1.79299998F }, { 7.34899998F, 1.74800003F } });
            sink->AddBezier({ { 7.48099995F, 1.65699995F }, { 7.61199999F, 1.56200004F }, { 7.74100018F, 1.46599996F } });
            sink->AddBezier({ { 7.8039999F, 1.41900003F }, { 7.86800003F, 1.37300003F }, { 7.92999983F, 1.32500005F } });
            sink->AddBezier({ { 8.05900002F, 1.22500002F }, { 8.18500042F, 1.12300003F }, { 8.31000042F, 1.01800001F } });
            sink->AddBezier({ { 8.36600018F, 0.971000016F }, { 8.42300034F, 0.922999978F }, { 8.47799969F, 0.875F } });
            sink->AddBezier({ { 8.60499954F, 0.765999973F }, { 8.73099995F, 0.654999971F }, { 8.85299969F, 0.540000021F } });
            sink->AddBezier({ { 8.90200043F, 0.495000005F }, { 8.94900036F, 0.449000001F }, { 8.99699974F, 0.402999997F } });
            sink->AddBezier({ { 9.12300014F, 0.282000005F }, { 9.24800014F, 0.159999996F }, { 9.36999989F, 0.0340000018F } });
            sink->AddBezier({ { 9.40499973F, -0.00300000003F }, { 9.43999958F, -0.0410000011F }, { 9.47399998F, -0.0769999996F } });
            sink->AddBezier({ { 9.60499954F, -0.216000006F }, { 9.73400021F, -0.356000006F }, { 9.8579998F, -0.500999987F } });
            sink->AddBezier({ { 7.171F, -2.70499992F }, { 3.74099994F, -4.03399992F }, { 0.00200000009F, -4.03399992F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - - Layer aggregator
        // - - - - - - Layer: MthCl
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: MthCl Scale:0.73529,0.73557, Offset:<70.893, 91.987>
        winrt::com_ptr<CanvasGeometry> Geometry_06()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -16.625F, -88.125F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -13.75F, -86.875F }, { -7.75F, -84.375F }, { 0.125F, -84.375F } });
            sink->AddBezier({ { 8.0F, -84.375F }, { 13.6669998F, -86.875F }, { 16.625F, -88.125F } });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: S
        winrt::com_ptr<CanvasGeometry> Geometry_07()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 2.30900002F, 0.656000018F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 1.96800005F, -0.823000014F }, { 1.17900002F, -2.15899992F }, { 0.0590000004F, -3.17400002F } });
            sink->AddBezier({ { -0.589999974F, -3.76200008F }, { -1.64100003F, -3.51999998F }, { -1.96700001F, -2.70700002F } });
            sink->AddBezier({ { -2.52900004F, -1.30400002F }, { -2.65199995F, 0.241999999F }, { -2.31100011F, 1.722F } });
            sink->AddLine({ -2.29900002F, 1.77600002F });
            sink->AddBezier({ { -1.94599998F, 3.25399995F }, { -0.606999993F, 3.76200008F }, { 0.532000005F, 3.49900007F } });
            sink->AddBezier({ { 1.67200005F, 3.23600006F }, { 2.65100002F, 2.19400001F }, { 2.3210001F, 0.713F } });
            sink->AddLine({ 2.30900002F, 0.656000018F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: S
        winrt::com_ptr<CanvasGeometry> Geometry_08()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 2.23000002F, -1.16799998F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 1.14300001F, -2.22799993F }, { -0.243000001F, -2.92499995F }, { -1.73399997F, -3.17400002F } });
            sink->AddBezier({ { -2.59899998F, -3.31800008F }, { -3.34899998F, -2.54699993F }, { -3.18400002F, -1.68599999F } });
            sink->AddBezier({ { -2.898F, -0.202000007F }, { -2.16799998F, 1.16700006F }, { -1.08099997F, 2.227F } });
            sink->AddLine({ -1.04100001F, 2.2650001F });
            sink->AddBezier({ { 0.0549999997F, 3.31800008F }, { 1.45500004F, 3.02200007F }, { 2.27099991F, 2.18499994F } });
            sink->AddBezier({ { 3.08800006F, 1.34800005F }, { 3.34899998F, -0.0599999987F }, { 2.26999998F, -1.12699997F } });
            sink->AddLine({ 2.23000002F, -1.16799998F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: S
        winrt::com_ptr<CanvasGeometry> Geometry_09()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 2.11899996F, -1.99300003F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 2.06699991F, -2.01799989F });
            sink->AddBezier({ { 0.703999996F, -2.68700004F }, { -0.828999996F, -2.921F }, { -2.32299995F, -2.69300008F } });
            sink->AddBezier({ { -3.19000006F, -2.56200004F }, { -3.66499996F, -1.59500003F }, { -3.24000001F, -0.828999996F } });
            sink->AddBezier({ { -2.50699997F, 0.493000001F }, { -1.38699996F, 1.56599998F }, { -0.0240000002F, 2.23600006F } });
            sink->AddLine({ 0.0260000005F, 2.25999999F });
            sink->AddBezier({ { 1.39499998F, 2.92000008F }, { 2.6329999F, 2.204F }, { 3.14899993F, 1.15400004F } });
            sink->AddBezier({ { 3.66499996F, 0.104999997F }, { 3.47600007F, -1.31299996F }, { 2.11899996F, -1.99300003F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: S
        winrt::com_ptr<CanvasGeometry> Geometry_10()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -0.0590000004F, -3.1730001F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -1.17900002F, -2.15799999F }, { -1.96700001F, -0.823000014F }, { -2.30900002F, 0.657000005F } });
            sink->AddLine({ -2.32200003F, 0.713F });
            sink->AddBezier({ { -2.65199995F, 2.19400001F }, { -1.671F, 3.23699999F }, { -0.532000005F, 3.5F } });
            sink->AddBezier({ { 0.606999993F, 3.76200008F }, { 1.94500005F, 3.25500011F }, { 2.2980001F, 1.77600002F } });
            sink->AddLine({ 2.30999994F, 1.722F });
            sink->AddBezier({ { 2.65199995F, 0.243000001F }, { 2.52800012F, -1.30299997F }, { 1.96599996F, -2.70600009F } });
            sink->AddBezier({ { 1.63999999F, -3.51999998F }, { 0.591000021F, -3.76200008F }, { -0.0590000004F, -3.1730001F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: S
        winrt::com_ptr<CanvasGeometry> Geometry_11()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 1.73300004F, -3.17400002F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 0.241999999F, -2.92499995F }, { -1.14300001F, -2.227F }, { -2.23000002F, -1.16700006F } });
            sink->AddLine({ -2.27099991F, -1.12800002F });
            sink->AddBezier({ { -3.3499999F, -0.0599999987F }, { -3.08899999F, 1.347F }, { -2.27200007F, 2.18400002F } });
            sink->AddBezier({ { -1.45599997F, 3.02099991F }, { -0.0560000017F, 3.31699991F }, { 1.03999996F, 2.26399994F } });
            sink->AddLine({ 1.08000004F, 2.2249999F });
            sink->AddBezier({ { 2.16700006F, 1.16499996F }, { 2.898F, -0.202000007F }, { 3.18400002F, -1.68599999F } });
            sink->AddBezier({ { 3.3499999F, -2.54699993F }, { 2.59800005F, -3.31800008F }, { 1.73300004F, -3.17400002F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: S
        winrt::com_ptr<CanvasGeometry> Geometry_12()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 2.32299995F, -2.69400001F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 0.828999996F, -2.921F }, { -0.704999983F, -2.68799996F }, { -2.06699991F, -2.01799989F } });
            sink->AddLine({ -2.11899996F, -1.99300003F });
            sink->AddBezier({ { -3.47600007F, -1.31299996F }, { -3.66499996F, 0.104999997F }, { -3.14899993F, 1.15499997F } });
            sink->AddBezier({ { -2.6329999F, 2.204F }, { -1.39499998F, 2.92000008F }, { -0.0260000005F, 2.25900006F } });
            sink->AddLine({ 0.0240000002F, 2.23600006F });
            sink->AddBezier({ { 1.38699996F, 1.56599998F }, { 2.50699997F, 0.493999988F }, { 3.24000001F, -0.828000009F } });
            sink->AddBezier({ { 3.66499996F, -1.59500003F }, { 3.19000006F, -2.56200004F }, { 2.32299995F, -2.69400001F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_13()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -4.10699987F, 4.46099997F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 4.10699987F, 4.46099997F });
            sink->AddBezier({ { 6.546F, 4.46099997F }, { 8.52400017F, 2.48300004F }, { 8.52400017F, 0.0439999998F } });
            sink->AddLine({ 8.52400017F, -0.0439999998F });
            sink->AddBezier({ { 8.52400017F, -2.48399997F }, { 6.546F, -4.46099997F }, { 4.10699987F, -4.46099997F } });
            sink->AddLine({ -4.10699987F, -4.46099997F });
            sink->AddBezier({ { -6.546F, -4.46099997F }, { -8.52400017F, -2.48399997F }, { -8.52400017F, -0.0439999998F } });
            sink->AddLine({ -8.52400017F, 0.0439999998F });
            sink->AddBezier({ { -8.52400017F, 2.48300004F }, { -6.546F, 4.46099997F }, { -4.10699987F, 4.46099997F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_14()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -4.46199989F, 0.0439999998F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ -4.46199989F, -0.0450000018F });
            sink->AddBezier({ { -4.46199989F, -2.4849999F }, { -2.48399997F, -4.46199989F }, { -0.0450000018F, -4.46199989F } });
            sink->AddLine({ 0.0450000018F, -4.46199989F });
            sink->AddBezier({ { 2.48399997F, -4.46199989F }, { 4.46199989F, -2.4849999F }, { 4.46199989F, -0.0450000018F } });
            sink->AddLine({ 4.46199989F, 0.0439999998F });
            sink->AddBezier({ { 4.46199989F, 2.48300004F }, { 2.48399997F, 4.46199989F }, { 0.0450000018F, 4.46199989F } });
            sink->AddLine({ -0.0450000018F, 4.46199989F });
            sink->AddBezier({ { -2.48399997F, 4.46199989F }, { -4.46199989F, 2.48300004F }, { -4.46199989F, 0.0439999998F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: B Scale:0.73529,0.73529, Offset:<70.893, 91.979>
        // - Path 2+Path 1.PathGeometry
        winrt::com_ptr<CanvasGeometry> Geometry_15()
        {
            winrt::com_ptr<ID2D1Geometry> geometries[2]
            {
                Geometry_16().get()->Geometry(),
                Geometry_17().get()->Geometry(),
            };
            winrt::com_ptr<ID2D1GeometryGroup> group{ nullptr };
            winrt::check_hresult(_d2dFactory->CreateGeometryGroup(
                D2D1_FILL_MODE_ALTERNATE,
                (ID2D1Geometry**)(&geometries),
                2,
                group.put()));
            auto result = winrt::make_self<CanvasGeometry>(group);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_16()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 22.8330002F, -107.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 43.8330002F, -107.0F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = _geometry_16 = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - - Layer aggregator
        // - - - - - Transforms: NULL CONTROL
        // - - - - Transforms: Bdy
        // - - - Transforms: B Scale:0.73529,0.73529, Offset:<70.893, 91.979>
        // - - Path 2+Path 1.PathGeometry
        winrt::com_ptr<CanvasGeometry> Geometry_17()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -44.0F, -107.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ -23.0F, -107.0F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - Transforms: NULL CONTROL
        // - - Transforms: Bdy
        // - Transforms: B Scale:0.73529,0.73529, Offset:<70.893, 91.979>
        // Color
        ColorKeyFrameAnimation ColorAnimation_AlmostDimGray_FF56595B_to_TransparentAlmostDimGray_0056595B()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.142806396F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.228063941F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.248667851F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.269982249F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.289873898F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.419182956F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.439074606F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.752401412F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.772293091F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.82202667F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.84191829F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            return result;
        }

        // Color
        ColorKeyFrameAnimation ColorAnimation_TransparentAlmostDimGray_0056595B_to_AlmostDimGray_FF56595B()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.142806396F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.228063941F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.248667851F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.269982249F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.289873898F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.419182956F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.439074606F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.554174066F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.625222027F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.752401412F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.772293091F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.82202667F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.84191829F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            return result;
        }

        // Color
        ColorKeyFrameAnimation ColorAnimation_TransparentAlmostDimGray_0056595B_to_TransparentAlmostDimGray_0056595B()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.554174066F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.625222027F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            return result;
        }

        // Color
        ColorKeyFrameAnimation ColorAnimation_TransparentAlmostOldLace_00FFF4E8_to_AlmostOldLace_FFFFF4E8()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // AlmostOldLace_FFFFF4E8
            result.InsertKeyFrame(0.142806396F, { 0xFF, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // TransparentAlmostOldLace_00FFF4E8
            result.InsertKeyFrame(0.228063941F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // AlmostOldLace_FFFFF4E8
            result.InsertKeyFrame(0.248667851F, { 0xFF, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // TransparentAlmostOldLace_00FFF4E8
            result.InsertKeyFrame(0.269982249F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // AlmostOldLace_FFFFF4E8
            result.InsertKeyFrame(0.289873898F, { 0xFF, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // TransparentAlmostOldLace_00FFF4E8
            result.InsertKeyFrame(0.419182956F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // AlmostOldLace_FFFFF4E8
            result.InsertKeyFrame(0.439074606F, { 0xFF, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // TransparentAlmostOldLace_00FFF4E8
            result.InsertKeyFrame(0.554174066F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // AlmostOldLace_FFFFF4E8
            result.InsertKeyFrame(0.625222027F, { 0xFF, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // TransparentAlmostOldLace_00FFF4E8
            result.InsertKeyFrame(0.752401412F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // AlmostOldLace_FFFFF4E8
            result.InsertKeyFrame(0.772293091F, { 0xFF, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // TransparentAlmostOldLace_00FFF4E8
            result.InsertKeyFrame(0.82202667F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // AlmostOldLace_FFFFF4E8
            result.InsertKeyFrame(0.84191829F, { 0xFF, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - - Layer: W3
        // - - - Transforms: NULL CONTROL
        // - - Transforms: Bdy
        // - Transforms: W3
        // Color
        ColorKeyFrameAnimation ColorAnimation_TransparentAlmostOldLace_00FFF4E8_to_TransparentAlmostOldLace_00FFF4E8()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // AlmostOldLace_FFFFF4E8
            result.InsertKeyFrame(0.554174066F, { 0xFF, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // TransparentAlmostOldLace_00FFF4E8
            result.InsertKeyFrame(0.625222027F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            return result;
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: B Scale:0.73529,0.73529, Offset:<70.893, 91.979>
        CompositionColorBrush AnimatedColorBrush_AlmostDimGray_FF56595B_to_TransparentAlmostDimGray_0056595B()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_AlmostDimGray_FF56595B_to_TransparentAlmostDimGray_0056595B(), _rootProgress);
            return result;
        }

        CompositionColorBrush AnimatedColorBrush_TransparentAlmostDimGray_0056595B_to_AlmostDimGray_FF56595B()
        {
            const auto result = _animatedColorBrush_TransparentAlmostDimGray_0056595B_to_AlmostDimGray_FF56595B = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_TransparentAlmostDimGray_0056595B_to_AlmostDimGray_FF56595B(), _rootProgress);
            return result;
        }

        CompositionColorBrush AnimatedColorBrush_TransparentAlmostDimGray_0056595B_to_TransparentAlmostDimGray_0056595B()
        {
            const auto result = _animatedColorBrush_TransparentAlmostDimGray_0056595B_to_TransparentAlmostDimGray_0056595B = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_TransparentAlmostDimGray_0056595B_to_TransparentAlmostDimGray_0056595B(), _rootProgress);
            return result;
        }

        CompositionColorBrush AnimatedColorBrush_TransparentAlmostOldLace_00FFF4E8_to_AlmostOldLace_FFFFF4E8()
        {
            const auto result = _animatedColorBrush_TransparentAlmostOldLace_00FFF4E8_to_AlmostOldLace_FFFFF4E8 = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_TransparentAlmostOldLace_00FFF4E8_to_AlmostOldLace_FFFFF4E8(), _rootProgress);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: W3
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: W3
        CompositionColorBrush AnimatedColorBrush_TransparentAlmostOldLace_00FFF4E8_to_TransparentAlmostOldLace_00FFF4E8()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_TransparentAlmostOldLace_00FFF4E8_to_TransparentAlmostOldLace_00FFF4E8(), _rootProgress);
            return result;
        }

        CompositionColorBrush ColorBrush_AlmostDimGray_FF56595B()
        {
            return _colorBrush_AlmostDimGray_FF56595B = _c.CreateColorBrush({ 0xFF, 0x56, 0x59, 0x5B });
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // ShapeGroup: Group 14 Offset:<70.893, 35.572>
        CompositionColorBrush ColorBrush_AlmostLightGreen_FF8CE070()
        {
            return _c.CreateColorBrush({ 0xFF, 0x8C, 0xE0, 0x70 });
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Mth
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: Mth
        CompositionColorBrush ColorBrush_AlmostLightSalmon_FFFFAA91()
        {
            return _c.CreateColorBrush({ 0xFF, 0xFF, 0xAA, 0x91 });
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // ShapeGroup: Group 13 Offset:<70.893, 31.283>
        CompositionColorBrush ColorBrush_AlmostTomato_FFFF595E()
        {
            return _c.CreateColorBrush({ 0xFF, 0xFF, 0x59, 0x5E });
        }

        // Layer aggregator
        CompositionContainerShape ContainerShape_00()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.362670004F, 0.362670004F });
            // Transforms: NULL CONTROL
            result.Shapes().Append(ContainerShape_01());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m111p167_to_0(), RootProgressRemapped());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_2(), _rootProgressRemapped);
            return result;
        }

        // - Layer aggregator
        // Transforms for NULL CONTROL
        CompositionContainerShape ContainerShape_01()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            // Transforms: Bdy
            result.Shapes().Append(ContainerShape_02());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m90_to_0(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_1(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // Transforms: NULL CONTROL
        // Transforms for Bdy
        CompositionContainerShape ContainerShape_02()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 70.8929977F, 70.8929977F });
            const auto shapes = result.Shapes();
            // ShapeGroup: Group 14 Offset:<70.893, 35.572>
            shapes.Append(SpriteShape_00());
            // ShapeGroup: Group 13 Offset:<70.893, 31.283>
            shapes.Append(SpriteShape_01());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0(), RootProgress());
            StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_0(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Mth
        CompositionContainerShape ContainerShape_03()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_04());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_0(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Mth
        CompositionContainerShape ContainerShape_04()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.362670004F, 0.362670004F });
            // Transforms: NULL CONTROL
            result.Shapes().Append(ContainerShape_05());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m111p167_to_0, _rootProgressRemapped);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_2, _rootProgressRemapped);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Mth
        // Transforms for NULL CONTROL
        CompositionContainerShape ContainerShape_05()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            // Transforms: Bdy
            result.Shapes().Append(ContainerShape_06());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m90_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_1, _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Mth
        // Transforms: NULL CONTROL
        // Transforms for Bdy
        CompositionContainerShape ContainerShape_06()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 70.8929977F, 70.8929977F });
            const auto shapes = result.Shapes();
            // Transforms: Mth
            shapes.Append(SpriteShape_02());
            // Transforms: Mth
            shapes.Append(SpriteShape_03());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", _scaleYScalarAnimation_1_to_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_0, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: MthCl
        CompositionContainerShape ContainerShape_07()
        {
            const auto result = _c.CreateContainerShape();
            result.Shapes().Append(ContainerShape_08());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_1(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: MthCl
        CompositionContainerShape ContainerShape_08()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.362670004F, 0.362670004F });
            // Transforms: NULL CONTROL
            result.Shapes().Append(ContainerShape_09());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m111p167_to_0, _rootProgressRemapped);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_2, _rootProgressRemapped);
            return result;
        }

        // - - Layer aggregator
        // - Layer: MthCl
        // Transforms for NULL CONTROL
        CompositionContainerShape ContainerShape_09()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            // Transforms: Bdy
            result.Shapes().Append(ContainerShape_10());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m90_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_1, _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: MthCl
        // Transforms: NULL CONTROL
        // Transforms for Bdy
        CompositionContainerShape ContainerShape_10()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 70.8929977F, 70.8929977F });
            // Transforms: MthCl Scale:0.73529,0.73557, Offset:<70.893, 91.987>
            result.Shapes().Append(SpriteShape_04());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", _scaleYScalarAnimation_1_to_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_0, _rootProgress);
            return result;
        }

        // Layer aggregator
        CompositionContainerShape ContainerShape_11()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.362670004F, 0.362670004F });
            // Transforms: NULL CONTROL
            result.Shapes().Append(ContainerShape_12());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m111p167_to_0, _rootProgressRemapped);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_2, _rootProgressRemapped);
            return result;
        }

        // - Layer aggregator
        // Transforms for NULL CONTROL
        CompositionContainerShape ContainerShape_12()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            // Transforms: Bdy
            result.Shapes().Append(ContainerShape_13());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m90_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_1, _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // Transforms: NULL CONTROL
        // Transforms for Bdy
        CompositionContainerShape ContainerShape_13()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 70.8929977F, 70.8929977F });
            const auto shapes = result.Shapes();
            // Transforms: S
            shapes.Append(SpriteShape_05());
            // Transforms: S
            shapes.Append(SpriteShape_06());
            // Transforms: S
            shapes.Append(SpriteShape_07());
            // Transforms: S
            shapes.Append(SpriteShape_08());
            // Transforms: S
            shapes.Append(SpriteShape_09());
            // Transforms: S
            shapes.Append(SpriteShape_10());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", _scaleYScalarAnimation_1_to_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_0, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: E1
        CompositionContainerShape ContainerShape_14()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_15());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_2(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: E1
        CompositionContainerShape ContainerShape_15()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.362670004F, 0.362670004F });
            // Transforms: NULL CONTROL
            result.Shapes().Append(ContainerShape_16());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m111p167_to_0, _rootProgressRemapped);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_2, _rootProgressRemapped);
            return result;
        }

        // - - Layer aggregator
        // - Layer: E1
        // Transforms for NULL CONTROL
        CompositionContainerShape ContainerShape_16()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            // Transforms: Bdy
            result.Shapes().Append(ContainerShape_17());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m90_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_1, _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: E1
        // Transforms: NULL CONTROL
        // Transforms for Bdy
        CompositionContainerShape ContainerShape_17()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 70.8929977F, 70.8929977F });
            const auto shapes = result.Shapes();
            // Transforms: E1
            shapes.Append(SpriteShape_11());
            // Transforms: E1
            shapes.Append(SpriteShape_12());
            // Transforms: E2
            shapes.Append(ContainerShape_18());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", _scaleYScalarAnimation_1_to_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_0, _rootProgress);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: E1
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Transforms for E2
        CompositionContainerShape ContainerShape_18()
        {
            const auto result = _c.CreateContainerShape();
            const auto shapes = result.Shapes();
            // ShapeGroup: Group 11 Offset:<91.684, 13.371>
            shapes.Append(SpriteShape_13());
            // ShapeGroup: Group 9 Offset:<41.978, 13.371>
            shapes.Append(SpriteShape_14());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_3(), _rootProgress);
            return result;
        }

        // Layer aggregator
        CompositionContainerShape ContainerShape_19()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.362670004F, 0.362670004F });
            // Transforms: NULL CONTROL
            result.Shapes().Append(ContainerShape_20());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m111p167_to_0, _rootProgressRemapped);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_2, _rootProgressRemapped);
            return result;
        }

        // - Layer aggregator
        // Transforms for NULL CONTROL
        CompositionContainerShape ContainerShape_20()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            // Transforms: Bdy
            result.Shapes().Append(ContainerShape_21());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m90_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_1, _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // Transforms: NULL CONTROL
        // Transforms for Bdy
        CompositionContainerShape ContainerShape_21()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 70.8929977F, 70.8929977F });
            // Transforms: B Scale:0.73529,0.73529, Offset:<70.893, 91.979>
            result.Shapes().Append(SpriteShape_15());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", _scaleYScalarAnimation_1_to_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_0, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: W3
        CompositionContainerShape ContainerShape_22()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_23());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_3(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: W3
        CompositionContainerShape ContainerShape_23()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.362670004F, 0.362670004F });
            // Transforms: NULL CONTROL
            result.Shapes().Append(ContainerShape_24());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m111p167_to_0, _rootProgressRemapped);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_2, _rootProgressRemapped);
            return result;
        }

        // - - Layer aggregator
        // - Layer: W3
        // Transforms for NULL CONTROL
        CompositionContainerShape ContainerShape_24()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            // Transforms: Bdy
            result.Shapes().Append(ContainerShape_25());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m90_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_1, _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: W3
        // Transforms: NULL CONTROL
        // Transforms for Bdy
        CompositionContainerShape ContainerShape_25()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 70.8929977F, 70.8929977F });
            const auto shapes = result.Shapes();
            // Transforms: W3
            shapes.Append(SpriteShape_16());
            // Transforms: E2
            shapes.Append(ContainerShape_26());
            // Transforms: W1 Scale:0.73529,0.73529, Offset:<70.893, 91.979>
            shapes.Append(SpriteShape_18());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", _scaleYScalarAnimation_1_to_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_0, _rootProgress);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: W3
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Transforms for E2
        CompositionContainerShape ContainerShape_26()
        {
            const auto result = _c.CreateContainerShape();
            // Transforms: W2
            result.Shapes().Append(SpriteShape_17());
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_3, _rootProgress);
            return result;
        }

        CompositionPath Path_0()
        {
            const auto result = _path_0 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_02()));
            return result;
        }

        CompositionPath Path_1()
        {
            const auto result = _path_1 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_04()));
            return result;
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // ShapeGroup: Group 14 Offset:<70.893, 35.572>
        CompositionPathGeometry PathGeometry_00()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_00())));
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // ShapeGroup: Group 13 Offset:<70.893, 31.283>
        CompositionPathGeometry PathGeometry_01()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_01())));
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Mth
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: Mth
        CompositionPathGeometry PathGeometry_02()
        {
            const auto result = _c.CreatePathGeometry();
            StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_0(), _rootProgress);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Mth
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: Mth
        CompositionPathGeometry PathGeometry_03()
        {
            const auto result = _c.CreatePathGeometry();
            StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_1(), _rootProgress);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: MthCl
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: MthCl Scale:0.73529,0.73557, Offset:<70.893, 91.987>
        CompositionPathGeometry PathGeometry_04()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_06())));
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: S
        CompositionPathGeometry PathGeometry_05()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_07())));
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: S
        CompositionPathGeometry PathGeometry_06()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_08())));
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: S
        CompositionPathGeometry PathGeometry_07()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_09())));
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: S
        CompositionPathGeometry PathGeometry_08()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_10())));
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: S
        CompositionPathGeometry PathGeometry_09()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_11())));
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: S
        CompositionPathGeometry PathGeometry_10()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_12())));
        }

        CompositionPathGeometry PathGeometry_11()
        {
            return _pathGeometry_11 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_13())));
        }

        CompositionPathGeometry PathGeometry_12()
        {
            return _pathGeometry_12 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_14())));
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: B Scale:0.73529,0.73529, Offset:<70.893, 91.979>
        // Path 2+Path 1.PathGeometry
        CompositionPathGeometry PathGeometry_13()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_15())));
        }

        // - - - - - Layer aggregator
        // - - - - Layer: W3
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: W1 Scale:0.73529,0.73529, Offset:<70.893, 91.979>
        CompositionPathGeometry PathGeometry_14()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(_geometry_16)));
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_00()
        {
            // Offset:<70.893, 35.572>
            const auto result = CreateSpriteShape(PathGeometry_00(), { 1.0F, 0.0F, 0.0F, 1.0F, 70.8929977F, 35.5719986F }, ColorBrush_AlmostLightGreen_FF8CE070());
            return result;
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_01()
        {
            // Offset:<70.893, 31.283>
            const auto result = CreateSpriteShape(PathGeometry_01(), { 1.0F, 0.0F, 0.0F, 1.0F, 70.8929977F, 31.2830009F }, ColorBrush_AlmostTomato_FFFF595E());
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Mth
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_02()
        {
            // Offset:<70.893, 27.04>
            const auto result = CreateSpriteShape(PathGeometry_02(), { 1.0F, 0.0F, 0.0F, 1.0F, 70.8929977F, 27.0400009F }, ColorBrush_AlmostDimGray_FF56595B());
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Mth
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_03()
        {
            // Offset:<70.892, 31.078>
            const auto result = CreateSpriteShape(PathGeometry_03(), { 1.0F, 0.0F, 0.0F, 1.0F, 70.8919983F, 31.0779991F }, ColorBrush_AlmostLightSalmon_FFFFAA91());
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: MthCl
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_04()
        {
            // Offset:<70.893, 91.987>, Rotation:-0.007906444094608568 degrees,
            // Scale:<0.73529, 0.73557>
            const auto result = CreateSpriteShape(PathGeometry_04(), { 0.735289991F, 0.0F, 0.0F, 0.735570014F, 70.8929977F, 91.9869995F });
            result.StrokeBrush(_colorBrush_AlmostDimGray_FF56595B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(4.0F);
            return result;
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_05()
        {
            // Offset:<82.343, 47.862>
            const auto result = CreateSpriteShape(PathGeometry_05(), { 1.0F, 0.0F, 0.0F, 1.0F, 82.3430023F, 47.8619995F }, _colorBrush_AlmostDimGray_FF56595B);
            return result;
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_06()
        {
            // Offset:<102.188, 38.411>
            const auto result = CreateSpriteShape(PathGeometry_06(), { 1.0F, 0.0F, 0.0F, 1.0F, 102.188004F, 38.4109993F }, _colorBrush_AlmostDimGray_FF56595B);
            return result;
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_07()
        {
            // Offset:<115.693, 21.583>
            const auto result = CreateSpriteShape(PathGeometry_07(), { 1.0F, 0.0F, 0.0F, 1.0F, 115.693001F, 21.5830002F }, _colorBrush_AlmostDimGray_FF56595B);
            return result;
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_08()
        {
            // Offset:<59.443, 47.861>
            const auto result = CreateSpriteShape(PathGeometry_08(), { 1.0F, 0.0F, 0.0F, 1.0F, 59.4430008F, 47.8610001F }, _colorBrush_AlmostDimGray_FF56595B);
            return result;
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_09()
        {
            // Offset:<39.598, 38.412>
            const auto result = CreateSpriteShape(PathGeometry_09(), { 1.0F, 0.0F, 0.0F, 1.0F, 39.5979996F, 38.4119987F }, _colorBrush_AlmostDimGray_FF56595B);
            return result;
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_10()
        {
            // Offset:<26.093, 21.583>
            const auto result = CreateSpriteShape(PathGeometry_10(), { 1.0F, 0.0F, 0.0F, 1.0F, 26.0930004F, 21.5830002F }, _colorBrush_AlmostDimGray_FF56595B);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: E1
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_11()
        {
            // Offset:<95.746, 13.371>
            const auto result = CreateSpriteShape(PathGeometry_11(), { 1.0F, 0.0F, 0.0F, 1.0F, 95.7460022F, 13.3710003F }, AnimatedColorBrush_TransparentAlmostOldLace_00FFF4E8_to_AlmostOldLace_FFFFF4E8());
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: E1
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_12()
        {
            // Offset:<46.04, 13.371>
            const auto result = CreateSpriteShape(_pathGeometry_11, { 1.0F, 0.0F, 0.0F, 1.0F, 46.0400009F, 13.3710003F }, _animatedColorBrush_TransparentAlmostOldLace_00FFF4E8_to_AlmostOldLace_FFFFF4E8);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: E1
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: E2
        // Path 1
        CompositionSpriteShape SpriteShape_13()
        {
            // Offset:<91.684, 13.371>
            const auto result = CreateSpriteShape(PathGeometry_12(), { 1.0F, 0.0F, 0.0F, 1.0F, 91.6839981F, 13.3710003F }, AnimatedColorBrush_TransparentAlmostDimGray_0056595B_to_AlmostDimGray_FF56595B());
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: E1
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: E2
        // Path 1
        CompositionSpriteShape SpriteShape_14()
        {
            // Offset:<41.978, 13.371>
            const auto result = CreateSpriteShape(_pathGeometry_12, { 1.0F, 0.0F, 0.0F, 1.0F, 41.9780006F, 13.3710003F }, _animatedColorBrush_TransparentAlmostDimGray_0056595B_to_AlmostDimGray_FF56595B);
            return result;
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 2+Path 1
        CompositionSpriteShape SpriteShape_15()
        {
            // Offset:<70.893, 91.979>, Rotation:-0.007906444094608568 degrees,
            // Scale:<0.73529, 0.73529>
            const auto result = CreateSpriteShape(PathGeometry_13(), { 0.735289991F, 0.0F, 0.0F, 0.735289991F, 70.8929977F, 91.9789963F });
            result.StrokeBrush(AnimatedColorBrush_AlmostDimGray_FF56595B_to_TransparentAlmostDimGray_0056595B());
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(5.0F);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: W3
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_16()
        {
            // Offset:<46.04, 13.371>
            const auto result = CreateSpriteShape(_pathGeometry_11, { 1.0F, 0.0F, 0.0F, 1.0F, 46.0400009F, 13.3710003F }, AnimatedColorBrush_TransparentAlmostOldLace_00FFF4E8_to_TransparentAlmostOldLace_00FFF4E8());
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: W3
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: E2
        // Path 1
        CompositionSpriteShape SpriteShape_17()
        {
            // Offset:<41.978, 13.371>
            const auto result = CreateSpriteShape(_pathGeometry_12, { 1.0F, 0.0F, 0.0F, 1.0F, 41.9780006F, 13.3710003F }, AnimatedColorBrush_TransparentAlmostDimGray_0056595B_to_TransparentAlmostDimGray_0056595B());
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: W3
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 2
        CompositionSpriteShape SpriteShape_18()
        {
            // Offset:<70.893, 91.979>, Rotation:-0.007906444094608568 degrees,
            // Scale:<0.73529, 0.73529>
            const auto result = CreateSpriteShape(PathGeometry_14(), { 0.735289991F, 0.0F, 0.0F, 0.735289991F, 70.8929977F, 91.9789963F });
            result.StrokeBrush(_animatedColorBrush_TransparentAlmostDimGray_0056595B_to_TransparentAlmostDimGray_0056595B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(5.0F);
            return result;
        }

        // The root of the composition.
        ContainerVisual Root()
        {
            const auto result = _root = _c.CreateContainerVisual();
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"Progress", 0.0F);
            propertySet.InsertScalar(L"t0", 0.0F);
            // Layer aggregator
            result.Children().InsertAtTop(ShapeVisual_0());
            StartProgressBoundAnimation(propertySet, L"t0", t0ScalarAnimation_0_to_1(), _rootProgressRemapped);
            return result;
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_0()
        {
            return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.0F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_1()
        {
            return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.833000004F, 0.833000004F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_2()
        {
            return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.833000004F, 0.833000004F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_3()
        {
            return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction({ 0.486000001F, 0.0F }, { 0.666999996F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_4()
        {
            return _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.0F }, { 0.666999996F, 1.0F });
        }

        ExpressionAnimation RootProgress()
        {
            const auto result = _rootProgress = _c.CreateExpressionAnimation(L"_.Progress");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped()
        {
            const auto result = _rootProgressRemapped = _c.CreateExpressionAnimation(L"(_.Progress*0.9811764)+0.0188236");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - - Layer: Mth
        // - - - Transforms: NULL CONTROL
        // - - Transforms: Bdy
        // - Transforms: Mth
        // Path
        PathKeyFrameAnimation PathKeyFrameAnimation_0()
        {
            const auto result = CreatePathKeyFrameAnimation(0.0F, Path_0(), _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.209591478F, _path_0, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.23801066F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_03())), _cubicBezierEasingFunction_0);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - - Layer: Mth
        // - - - Transforms: NULL CONTROL
        // - - Transforms: Bdy
        // - Transforms: Mth
        // Path
        PathKeyFrameAnimation PathKeyFrameAnimation_1()
        {
            const auto result = CreatePathKeyFrameAnimation(0.0F, Path_1(), _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.209591478F, _path_1, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.23801066F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_05())), _cubicBezierEasingFunction_0);
            return result;
        }

        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0()
        {
            const auto result = _rotationAngleInDegreesScalarAnimation_0_to_0 = CreateScalarKeyFrameAnimation(0.0F, 0.0F, StepThenHoldEasingFunction());
            result.InsertKeyFrame(0.5115453F, 0.0F, HoldThenStepEasingFunction());
            result.InsertKeyFrame(0.543516874F, -2.4000001F, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.219999999F, 1.0F }));
            result.InsertKeyFrame(0.582593262F, 7.9000001F, _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.0F }, { 0.0F, 1.0F }));
            result.InsertKeyFrame(0.607460022F, 7.9000001F, _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.333000004F }, { 0.666999996F, 0.666999996F }));
            result.InsertKeyFrame(0.642984033F, -2.5999999F, _c.CreateCubicBezierEasingFunction({ 0.603999972F, 0.0F }, { 0.493999988F, 1.0F }));
            result.InsertKeyFrame(0.682060421F, 0.0F, _c.CreateCubicBezierEasingFunction({ 0.57099998F, 0.0F }, { 0.379000008F, 1.0F }));
            return result;
        }

        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_m90_to_0()
        {
            const auto result = _rotationAngleInDegreesScalarAnimation_m90_to_0 = CreateScalarKeyFrameAnimation(0.0F, -90.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0873872116F, -90.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.121492006F, 0.0F, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.147071049F, 12.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.211014211F, -10.9820004F, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.270693421F, 0.0F, _cubicBezierEasingFunction_4);
            return result;
        }

        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_m111p167_to_0()
        {
            const auto result = _rotationAngleInDegreesScalarAnimation_m111p167_to_0 = CreateScalarKeyFrameAnimation(0.0F, -111.167F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.0257946569F, -111.167F, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.0946338549F, -19.8999996F, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.104566246F, 0.0F, _cubicBezierEasingFunction_2);
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1()
        {
            const auto result = _scaleYScalarAnimation_1_to_1 = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.343159854F, 1.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.355950266F, 0.899999976F, CubicBezierEasingFunction_0());
            result.InsertKeyFrame(0.360214919F, 1.07299995F, _c.CreateCubicBezierEasingFunction({ 0.589999974F, 0.0F }, { 0.833000004F, 0.833000004F }));
            result.InsertKeyFrame(0.377264649F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.398579031F, 1.02999997F, CubicBezierEasingFunction_1());
            result.InsertKeyFrame(0.407103032F, 0.853999972F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.424157679F, 1.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.0F, 1.0F }));
            return result;
        }

        ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.0257946551F, 1.0F, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.0257946569F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0946338475F, 1.0F, _cubicBezierEasingFunction_2);
            return result;
        }

        // Layer aggregator
        ShapeVisual ShapeVisual_0()
        {
            const auto result = _c.CreateShapeVisual();
            result.Size({ 100.0F, 100.0F });
            const auto shapes = result.Shapes();
            shapes.Append(ContainerShape_00());
            // Layer: Mth
            shapes.Append(ContainerShape_03());
            // Layer: MthCl
            shapes.Append(ContainerShape_07());
            shapes.Append(ContainerShape_11());
            // Layer: E1
            shapes.Append(ContainerShape_14());
            shapes.Append(ContainerShape_19());
            // Layer: W3
            shapes.Append(ContainerShape_22());
            return result;
        }

        StepEasingFunction HoldThenStepEasingFunction()
        {
            const auto result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
            result.IsFinalStepSingleFrame(true);
            return result;
        }

        StepEasingFunction StepThenHoldEasingFunction()
        {
            const auto result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
            result.IsInitialStepSingleFrame(true);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_0()
        {
            const auto result = _offsetVector2Animation_0 = CreateVector2KeyFrameAnimation(0.0F, { 59.7070007F, -10.8929996F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0873872116F, { 59.7070007F, -10.8929996F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.0926394314F, { 44.4710007F, -10.8929996F }, CubicBezierEasingFunction_2());
            result.InsertKeyFrame(0.100500889F, { 26.3010006F, -10.8929996F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.105753109F, { 16.2700005F, -10.8929996F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.121492006F, { -10.8929996F, -10.8929996F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.147071049F, { -19.5930004F, -10.8929996F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.211014211F, { -3.99099994F, -10.8929996F }, CubicBezierEasingFunction_3());
            result.InsertKeyFrame(0.270692706F, { -10.8929996F, -10.8929996F }, CubicBezierEasingFunction_4());
            result.InsertKeyFrame(0.360214919F, { -10.8929996F, -10.8929996F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.377264649F, { -10.8929996F, -32.9519997F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.398579031F, { -10.8929996F, -10.8929996F }, _cubicBezierEasingFunction_1);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_1()
        {
            const auto result = _offsetVector2Animation_1 = CreateVector2KeyFrameAnimation(0.0F, { 70.4550018F, -0.133000001F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0873872116F, { 70.4550018F, -0.133000001F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.121492006F, { 110.455002F, -0.133000001F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.147071049F, { 118.432999F, -0.133000001F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.211014211F, { 106.471001F, -0.133000001F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.270693421F, { 110.455002F, -0.133000001F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_2()
        {
            const auto result = _offsetVector2Animation_2 = CreateVector2KeyFrameAnimation(0.0F, { -156.733994F, -12.599F }, _holdThenStepEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertExpressionKeyFrame(0.0257946551F, L"(Pow(1-_.t0,3)*Vector2(-156.734,-12.599))+(3*Square(1-_.t0)*_.t0*Vector2(-111.6883,-54.39386))+(3*(1-_.t0)*Square(_.t0)*Vector2(-109.1483,-30.31195))+(Pow(_.t0,3)*Vector2(-91.369,-28.123))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.0946338475F, L"(Pow(1-_.t0,3)*Vector2(-91.369,-28.123))+(3*Square(1-_.t0)*_.t0*Vector2(-73.58971,-25.93405))+(3*(1-_.t0)*Square(_.t0)*Vector2(-50.058,0.534))+(Pow(_.t0,3)*Vector2(-50.058,0.534))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0946338549F, { -50.0579987F, 0.533999979F }, _stepThenHoldEasingFunction);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_3()
        {
            const auto result = _offsetVector2Animation_3 = CreateVector2KeyFrameAnimation(0.0F, { 4.33500004F, 0.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.149200708F, { 4.33500004F, 0.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.184724689F, { 4.33500004F, 0.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.277087033F, { 3.70499992F, 0.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.337477803F, { 4.44000006F, 0.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.404973358F, { 4.33500004F, 0.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.554174066F, { 4.44000006F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Mth
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_0()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.21314387F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: MthCl
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_1()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.21314387F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: E1
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_2()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.142095909F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: W3
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_3()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.554174066F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.628774405F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        static IGeometrySource2D CanvasGeometryToIGeometrySource2D(winrt::com_ptr<CanvasGeometry> geo)
        {
            return geo.as<IGeometrySource2D>();
        }

    public:
        Watermelon_AnimatedVisual_UAPv11(Compositor compositor)
            : _c{compositor}
            , _reusableExpressionAnimation(compositor.CreateExpressionAnimation())
        {
            winrt::check_hresult(D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, _d2dFactory.put()));
            const auto _ = Root();
        }

        void Close()
        {
            if (_root)
            {
                _root.Close();
            }
        }

        TimeSpan Duration() const
        {
            return TimeSpan{ c_durationTicks };
        }

        Visual RootVisual() const
        {
            return _root;
        }

        float2 Size() const
        {
            return { 100.0F, 100.0F };
        }

        static bool IsRuntimeCompatible()
        {
            return winrt::Windows::Foundation::Metadata::ApiInformation::IsApiContractPresent(L"Windows.Foundation.UniversalApiContract", 11);
        }
    };

    class Watermelon_AnimatedVisual_UAPv7 : public winrt::implements<Watermelon_AnimatedVisual_UAPv7,
            winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual,
            IClosable>
    {
        winrt::com_ptr<ID2D1Factory> _d2dFactory{ nullptr };
        static constexpr int64_t c_durationTicks{ 93833333L };
        Compositor const _c{ nullptr };
        ExpressionAnimation const _reusableExpressionAnimation{ nullptr };
        winrt::com_ptr<CanvasGeometry> _geometry_14{ nullptr };
        CompositionColorBrush _animatedColorBrush_TransparentAlmostDimGray_0056595B_to_AlmostDimGray_FF56595B{ nullptr };
        CompositionColorBrush _animatedColorBrush_TransparentAlmostDimGray_0056595B_to_TransparentAlmostDimGray_0056595B{ nullptr };
        CompositionColorBrush _animatedColorBrush_TransparentAlmostOldLace_00FFF4E8_to_AlmostOldLace_FFFFF4E8{ nullptr };
        CompositionColorBrush _colorBrush_AlmostDimGray_FF56595B{ nullptr };
        CompositionPathGeometry _pathGeometry_11{ nullptr };
        CompositionPathGeometry _pathGeometry_12{ nullptr };
        ContainerVisual _root{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_0{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_1{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_2{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_3{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_4{ nullptr };
        ExpressionAnimation _rootProgress{ nullptr };
        ExpressionAnimation _rootProgressRemapped{ nullptr };
        ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_0{ nullptr };
        ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_m90_to_0{ nullptr };
        ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_m111p167_to_0{ nullptr };
        ScalarKeyFrameAnimation _scaleYScalarAnimation_1_to_1{ nullptr };
        StepEasingFunction _holdThenStepEasingFunction{ nullptr };
        StepEasingFunction _stepThenHoldEasingFunction{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_0{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_1{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_2{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_3{ nullptr };

        static void StartProgressBoundAnimation(
            CompositionObject target,
            winrt::hstring animatedPropertyName,
            CompositionAnimation animation,
            ExpressionAnimation controllerProgressExpression)
        {
            target.StartAnimation(animatedPropertyName, animation);
            const auto controller = target.TryGetAnimationController(animatedPropertyName);
            controller.Pause();
            controller.StartAnimation(L"Progress", controllerProgressExpression);
        }

        ColorKeyFrameAnimation CreateColorKeyFrameAnimation(float initialProgress, Color initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateColorKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InterpolationColorSpace(CompositionColorSpace::Rgb);
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateScalarKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, float2 initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateVector2KeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, float3x2 transformMatrix)
        {
            const auto result = _c.CreateSpriteShape(geometry);
            result.TransformMatrix(transformMatrix);
            return result;
        }

        CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, float3x2 transformMatrix, CompositionBrush fillBrush)
        {
            const auto result = _c.CreateSpriteShape(geometry);
            result.TransformMatrix(transformMatrix);
            result.FillBrush(fillBrush);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - ShapeGroup: Group 14 Offset:<70.893, 35.572>
        winrt::com_ptr<CanvasGeometry> Geometry_00()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -70.6429977F, -35.3219986F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -70.6429977F, -16.4519997F }, { -63.2949982F, 1.28900003F }, { -49.9519997F, 14.6309996F } });
            sink->AddBezier({ { -36.6090012F, 27.9740009F }, { -18.8689995F, 35.3219986F }, { 0.0F, 35.3219986F } });
            sink->AddBezier({ { 18.8689995F, 35.3219986F }, { 36.6090012F, 27.9740009F }, { 49.9519997F, 14.6309996F } });
            sink->AddBezier({ { 63.2949982F, 1.28900003F }, { 70.6429977F, -16.4519997F }, { 70.6429977F, -35.3219986F } });
            sink->AddLine({ -70.6429977F, -35.3219986F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - ShapeGroup: Group 13 Offset:<70.893, 31.283>
        winrt::com_ptr<CanvasGeometry> Geometry_01()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 62.0649986F, -31.0330009F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 62.0649986F, 3.24499989F }, { 34.2779999F, 31.0330009F }, { 0.0F, 31.0330009F } });
            sink->AddBezier({ { -34.2770004F, 31.0330009F }, { -62.0649986F, 3.24499989F }, { -62.0649986F, -31.0330009F } });
            sink->AddLine({ 62.0649986F, -31.0330009F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - - Layer aggregator
        // - - - - - - Layer: Mth
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: Mth
        winrt::com_ptr<CanvasGeometry> Geometry_02()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 9.61100006F, 0.158999994F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 1.14199996F, 3.59299994F }, { -5.94000006F, 1.41199994F }, { -9.45300007F, 0.0930000022F } });
            sink->AddBezier({ { -11.2419996F, -0.574999988F }, { -12.5450001F, -0.451000005F }, { -12.1190004F, -0.172999993F } });
            sink->AddBezier({ { -11.493F, 0.237000003F }, { -10.1070004F, 0.790000021F }, { -8.22700024F, 1.40100002F } });
            sink->AddBezier({ { -8.71800041F, 1.24199998F }, { -9.17500019F, 1.08599997F }, { -9.59399986F, 0.93599999F } });
            sink->AddBezier({ { -6.92600012F, 1.33099997F }, { -3.7420001F, 2.1559999F }, { -0.00200000009F, 2.1559999F } });
            sink->AddBezier({ { 3.73600006F, 2.1559999F }, { 7.06400013F, 1.35699999F }, { 9.73700047F, 1.00399995F } });
            sink->AddBezier({ { 9.61800003F, 1.04499996F }, { 9.49499989F, 1.08599997F }, { 9.36999989F, 1.12699997F } });
            sink->AddBezier({ { 9.80500031F, 0.98299998F }, { 10.2069998F, 0.842000008F }, { 10.566F, 0.708000004F } });
            sink->AddLine({ 10.5419998F, 0.713999987F });
            sink->AddBezier({ { 10.5530005F, 0.711000025F }, { 10.5640001F, 0.708999991F }, { 10.5749998F, 0.70599997F } });
            sink->AddBezier({ { 11.3450003F, 0.418000013F }, { 11.9300003F, 0.156000003F }, { 12.2810001F, -0.0659999996F } });
            sink->AddBezier({ { 12.71F, -0.337000012F }, { 11.2690001F, -0.782000005F }, { 9.61100006F, 0.158999994F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - - Layer aggregator
        // - - - - - - Layer: Mth
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: Mth
        winrt::com_ptr<CanvasGeometry> Geometry_03()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -0.00200000009F, -1.88199997F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -3.7420001F, -1.88199997F }, { -6.92600012F, -2.70700002F }, { -9.59300041F, -3.102F } });
            sink->AddBezier({ { -9.17500019F, -2.9519999F }, { -8.71800041F, -2.79500008F }, { -8.22700024F, -2.63599992F } });
            sink->AddBezier({ { -8.20800018F, -2.63000011F }, { -8.18999958F, -2.62400007F }, { -8.17099953F, -2.61800003F } });
            sink->AddBezier({ { -7.70599985F, -2.46700001F }, { -7.21099997F, -2.31399989F }, { -6.68900013F, -2.15799999F } });
            sink->AddBezier({ { -6.61000013F, -2.13400006F }, { -6.53100014F, -2.11100006F }, { -6.44999981F, -2.08699989F } });
            sink->AddBezier({ { -6.23199987F, -2.02200007F }, { -6.0079999F, -1.95700002F }, { -5.78000021F, -1.89100003F } });
            sink->AddBezier({ { -5.64300013F, -1.852F }, { -5.50699997F, -1.81299996F }, { -5.36600018F, -1.773F } });
            sink->AddBezier({ { -5.23899984F, -1.73699999F }, { -5.11000013F, -1.70099998F }, { -4.98000002F, -1.66499996F } });
            sink->AddBezier({ { -4.81400013F, -1.61899996F }, { -4.64599991F, -1.57299995F }, { -4.4749999F, -1.52600002F } });
            sink->AddBezier({ { -4.36800003F, -1.49699998F }, { -4.26000023F, -1.46700001F }, { -4.15100002F, -1.43799996F } });
            sink->AddBezier({ { -3.90199995F, -1.37100005F }, { -3.648F, -1.30299997F }, { -3.39199996F, -1.23599994F } });
            sink->AddBezier({ { -3.29500008F, -1.21099997F }, { -3.19700003F, -1.18499994F }, { -3.09899998F, -1.15999997F } });
            sink->AddBezier({ { -2.8440001F, -1.09399998F }, { -2.56900001F, -1.09800005F }, { -2.30100012F, -1.09300005F } });
            sink->AddBezier({ { -2.25999999F, -1.09200001F }, { -2.2190001F, -1.09200001F }, { -2.17799997F, -1.09099996F } });
            sink->AddBezier({ { -1.86800003F, -1.08599997F }, { -1.55299997F, -1.08200002F }, { -1.23599994F, -1.079F } });
            sink->AddBezier({ { -1.15400004F, -1.07799995F }, { -1.07099998F, -1.07799995F }, { -0.989000022F, -1.07700002F } });
            sink->AddBezier({ { -0.662999988F, -1.074F }, { -0.335000008F, -1.07299995F }, { -0.00300000003F, -1.07299995F } });
            sink->AddBezier({ { 0.25999999F, -1.07299995F }, { 0.521000028F, -1.07299995F }, { 0.779999971F, -1.07500005F } });
            sink->AddBezier({ { 0.867999971F, -1.07599998F }, { 0.954999983F, -1.07599998F }, { 1.04299998F, -1.07700002F } });
            sink->AddBezier({ { 1.21300006F, -1.07799995F }, { 1.38300002F, -1.08000004F }, { 1.551F, -1.08200002F } });
            sink->AddBezier({ { 1.65499997F, -1.08299994F }, { 1.75699997F, -1.08500004F }, { 1.86000001F, -1.08599997F } });
            sink->AddBezier({ { 2.00999999F, -1.08800006F }, { 2.16000009F, -1.09099996F }, { 2.30800009F, -1.09399998F } });
            sink->AddBezier({ { 2.41700006F, -1.09599996F }, { 2.66599989F, -1.06099999F }, { 2.77099991F, -1.08599997F } });
            sink->AddBezier({ { 2.9059999F, -1.11800003F }, { 3.03999996F, -1.15100002F }, { 3.1730001F, -1.18299997F } });
            sink->AddBezier({ { 3.28200006F, -1.20899999F }, { 3.3900001F, -1.23599994F }, { 3.49799991F, -1.26199996F } });
            sink->AddBezier({ { 3.625F, -1.29299998F }, { 3.75200009F, -1.32500005F }, { 3.87700009F, -1.35599995F } });
            sink->AddBezier({ { 3.98699999F, -1.38300002F }, { 4.09600019F, -1.41100001F }, { 4.204F, -1.43799996F } });
            sink->AddBezier({ { 4.32200003F, -1.46800005F }, { 4.43900013F, -1.49699998F }, { 4.55600023F, -1.52699995F } });
            sink->AddBezier({ { 4.66699982F, -1.55599999F }, { 4.78000021F, -1.58500004F }, { 4.88899994F, -1.61300004F } });
            sink->AddBezier({ { 4.99599981F, -1.64100003F }, { 5.0999999F, -1.66799998F }, { 5.20499992F, -1.69500005F } });
            sink->AddBezier({ { 5.3210001F, -1.72599995F }, { 5.4380002F, -1.75699997F }, { 5.55200005F, -1.78699994F } });
            sink->AddBezier({ { 5.60699987F, -1.80200005F }, { 5.65999985F, -1.81599998F }, { 5.71400023F, -1.83099997F } });
            sink->AddBezier({ { 6.01100016F, -1.91100001F }, { 6.30000019F, -1.99000001F }, { 6.58300018F, -2.06900001F } });
            sink->AddBezier({ { 6.63800001F, -2.08400011F }, { 6.69500017F, -2.0999999F }, { 6.74900007F, -2.11500001F } });
            sink->AddBezier({ { 6.8829999F, -2.15300012F }, { 7.01399994F, -2.19000006F }, { 7.14499998F, -2.22799993F } });
            sink->AddBezier({ { 7.20800018F, -2.24600005F }, { 7.27099991F, -2.26399994F }, { 7.33300018F, -2.28200006F } });
            sink->AddBezier({ { 7.46000004F, -2.31900001F }, { 7.58500004F, -2.35500002F }, { 7.70900011F, -2.39199996F } });
            sink->AddBezier({ { 7.76999998F, -2.41000009F }, { 7.83099985F, -2.42799997F }, { 7.89099979F, -2.4460001F } });
            sink->AddBezier({ { 8.01500034F, -2.48300004F }, { 8.13700008F, -2.51999998F }, { 8.25699997F, -2.55699992F } });
            sink->AddBezier({ { 8.31099987F, -2.57299995F }, { 8.36499977F, -2.59100008F }, { 8.41800022F, -2.60700011F } });
            sink->AddBezier({ { 8.53999996F, -2.64499998F }, { 8.65999985F, -2.68199992F }, { 8.77700043F, -2.7190001F } });
            sink->AddBezier({ { 8.82400036F, -2.73399997F }, { 8.86900043F, -2.74799991F }, { 8.91499996F, -2.76300001F } });
            sink->AddBezier({ { 9.03600025F, -2.80200005F }, { 9.15499973F, -2.83999991F }, { 9.27200031F, -2.87800002F } });
            sink->AddBezier({ { 9.30500031F, -2.88899994F }, { 9.3380003F, -2.9000001F }, { 9.36999989F, -2.91100001F } });
            sink->AddBezier({ { 9.49499989F, -2.9519999F }, { 9.61900043F, -2.99399996F }, { 9.73700047F, -3.03399992F } });
            sink->AddBezier({ { 7.06400013F, -2.68099999F }, { 3.73699999F, -1.88199997F }, { -0.00200000009F, -1.88199997F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - - Layer aggregator
        // - - - - - - Layer: MthCl
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: MthCl Scale:0.73529,0.73557, Offset:<70.893, 91.987>
        winrt::com_ptr<CanvasGeometry> Geometry_04()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -16.625F, -88.125F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -13.75F, -86.875F }, { -7.75F, -84.375F }, { 0.125F, -84.375F } });
            sink->AddBezier({ { 8.0F, -84.375F }, { 13.6669998F, -86.875F }, { 16.625F, -88.125F } });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: S
        winrt::com_ptr<CanvasGeometry> Geometry_05()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 2.30900002F, 0.656000018F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 1.96800005F, -0.823000014F }, { 1.17900002F, -2.15899992F }, { 0.0590000004F, -3.17400002F } });
            sink->AddBezier({ { -0.589999974F, -3.76200008F }, { -1.64100003F, -3.51999998F }, { -1.96700001F, -2.70700002F } });
            sink->AddBezier({ { -2.52900004F, -1.30400002F }, { -2.65199995F, 0.241999999F }, { -2.31100011F, 1.722F } });
            sink->AddLine({ -2.29900002F, 1.77600002F });
            sink->AddBezier({ { -1.94599998F, 3.25399995F }, { -0.606999993F, 3.76200008F }, { 0.532000005F, 3.49900007F } });
            sink->AddBezier({ { 1.67200005F, 3.23600006F }, { 2.65100002F, 2.19400001F }, { 2.3210001F, 0.713F } });
            sink->AddLine({ 2.30900002F, 0.656000018F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: S
        winrt::com_ptr<CanvasGeometry> Geometry_06()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 2.23000002F, -1.16799998F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 1.14300001F, -2.22799993F }, { -0.243000001F, -2.92499995F }, { -1.73399997F, -3.17400002F } });
            sink->AddBezier({ { -2.59899998F, -3.31800008F }, { -3.34899998F, -2.54699993F }, { -3.18400002F, -1.68599999F } });
            sink->AddBezier({ { -2.898F, -0.202000007F }, { -2.16799998F, 1.16700006F }, { -1.08099997F, 2.227F } });
            sink->AddLine({ -1.04100001F, 2.2650001F });
            sink->AddBezier({ { 0.0549999997F, 3.31800008F }, { 1.45500004F, 3.02200007F }, { 2.27099991F, 2.18499994F } });
            sink->AddBezier({ { 3.08800006F, 1.34800005F }, { 3.34899998F, -0.0599999987F }, { 2.26999998F, -1.12699997F } });
            sink->AddLine({ 2.23000002F, -1.16799998F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: S
        winrt::com_ptr<CanvasGeometry> Geometry_07()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 2.11899996F, -1.99300003F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 2.06699991F, -2.01799989F });
            sink->AddBezier({ { 0.703999996F, -2.68700004F }, { -0.828999996F, -2.921F }, { -2.32299995F, -2.69300008F } });
            sink->AddBezier({ { -3.19000006F, -2.56200004F }, { -3.66499996F, -1.59500003F }, { -3.24000001F, -0.828999996F } });
            sink->AddBezier({ { -2.50699997F, 0.493000001F }, { -1.38699996F, 1.56599998F }, { -0.0240000002F, 2.23600006F } });
            sink->AddLine({ 0.0260000005F, 2.25999999F });
            sink->AddBezier({ { 1.39499998F, 2.92000008F }, { 2.6329999F, 2.204F }, { 3.14899993F, 1.15400004F } });
            sink->AddBezier({ { 3.66499996F, 0.104999997F }, { 3.47600007F, -1.31299996F }, { 2.11899996F, -1.99300003F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: S
        winrt::com_ptr<CanvasGeometry> Geometry_08()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -0.0590000004F, -3.1730001F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -1.17900002F, -2.15799999F }, { -1.96700001F, -0.823000014F }, { -2.30900002F, 0.657000005F } });
            sink->AddLine({ -2.32200003F, 0.713F });
            sink->AddBezier({ { -2.65199995F, 2.19400001F }, { -1.671F, 3.23699999F }, { -0.532000005F, 3.5F } });
            sink->AddBezier({ { 0.606999993F, 3.76200008F }, { 1.94500005F, 3.25500011F }, { 2.2980001F, 1.77600002F } });
            sink->AddLine({ 2.30999994F, 1.722F });
            sink->AddBezier({ { 2.65199995F, 0.243000001F }, { 2.52800012F, -1.30299997F }, { 1.96599996F, -2.70600009F } });
            sink->AddBezier({ { 1.63999999F, -3.51999998F }, { 0.591000021F, -3.76200008F }, { -0.0590000004F, -3.1730001F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: S
        winrt::com_ptr<CanvasGeometry> Geometry_09()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 1.73300004F, -3.17400002F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 0.241999999F, -2.92499995F }, { -1.14300001F, -2.227F }, { -2.23000002F, -1.16700006F } });
            sink->AddLine({ -2.27099991F, -1.12800002F });
            sink->AddBezier({ { -3.3499999F, -0.0599999987F }, { -3.08899999F, 1.347F }, { -2.27200007F, 2.18400002F } });
            sink->AddBezier({ { -1.45599997F, 3.02099991F }, { -0.0560000017F, 3.31699991F }, { 1.03999996F, 2.26399994F } });
            sink->AddLine({ 1.08000004F, 2.2249999F });
            sink->AddBezier({ { 2.16700006F, 1.16499996F }, { 2.898F, -0.202000007F }, { 3.18400002F, -1.68599999F } });
            sink->AddBezier({ { 3.3499999F, -2.54699993F }, { 2.59800005F, -3.31800008F }, { 1.73300004F, -3.17400002F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: S
        winrt::com_ptr<CanvasGeometry> Geometry_10()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 2.32299995F, -2.69400001F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 0.828999996F, -2.921F }, { -0.704999983F, -2.68799996F }, { -2.06699991F, -2.01799989F } });
            sink->AddLine({ -2.11899996F, -1.99300003F });
            sink->AddBezier({ { -3.47600007F, -1.31299996F }, { -3.66499996F, 0.104999997F }, { -3.14899993F, 1.15499997F } });
            sink->AddBezier({ { -2.6329999F, 2.204F }, { -1.39499998F, 2.92000008F }, { -0.0260000005F, 2.25900006F } });
            sink->AddLine({ 0.0240000002F, 2.23600006F });
            sink->AddBezier({ { 1.38699996F, 1.56599998F }, { 2.50699997F, 0.493999988F }, { 3.24000001F, -0.828000009F } });
            sink->AddBezier({ { 3.66499996F, -1.59500003F }, { 3.19000006F, -2.56200004F }, { 2.32299995F, -2.69400001F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_11()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -4.10699987F, 4.46099997F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 4.10699987F, 4.46099997F });
            sink->AddBezier({ { 6.546F, 4.46099997F }, { 8.52400017F, 2.48300004F }, { 8.52400017F, 0.0439999998F } });
            sink->AddLine({ 8.52400017F, -0.0439999998F });
            sink->AddBezier({ { 8.52400017F, -2.48399997F }, { 6.546F, -4.46099997F }, { 4.10699987F, -4.46099997F } });
            sink->AddLine({ -4.10699987F, -4.46099997F });
            sink->AddBezier({ { -6.546F, -4.46099997F }, { -8.52400017F, -2.48399997F }, { -8.52400017F, -0.0439999998F } });
            sink->AddLine({ -8.52400017F, 0.0439999998F });
            sink->AddBezier({ { -8.52400017F, 2.48300004F }, { -6.546F, 4.46099997F }, { -4.10699987F, 4.46099997F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_12()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -4.46199989F, 0.0439999998F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ -4.46199989F, -0.0450000018F });
            sink->AddBezier({ { -4.46199989F, -2.4849999F }, { -2.48399997F, -4.46199989F }, { -0.0450000018F, -4.46199989F } });
            sink->AddLine({ 0.0450000018F, -4.46199989F });
            sink->AddBezier({ { 2.48399997F, -4.46199989F }, { 4.46199989F, -2.4849999F }, { 4.46199989F, -0.0450000018F } });
            sink->AddLine({ 4.46199989F, 0.0439999998F });
            sink->AddBezier({ { 4.46199989F, 2.48300004F }, { 2.48399997F, 4.46199989F }, { 0.0450000018F, 4.46199989F } });
            sink->AddLine({ -0.0450000018F, 4.46199989F });
            sink->AddBezier({ { -2.48399997F, 4.46199989F }, { -4.46199989F, 2.48300004F }, { -4.46199989F, 0.0439999998F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - Transforms: NULL CONTROL
        // - - - Transforms: Bdy
        // - - Transforms: B Scale:0.73529,0.73529, Offset:<70.893, 91.979>
        // - Path 2+Path 1.PathGeometry
        winrt::com_ptr<CanvasGeometry> Geometry_13()
        {
            winrt::com_ptr<ID2D1Geometry> geometries[2]
            {
                Geometry_14().get()->Geometry(),
                Geometry_15().get()->Geometry(),
            };
            winrt::com_ptr<ID2D1GeometryGroup> group{ nullptr };
            winrt::check_hresult(_d2dFactory->CreateGeometryGroup(
                D2D1_FILL_MODE_ALTERNATE,
                (ID2D1Geometry**)(&geometries),
                2,
                group.put()));
            auto result = winrt::make_self<CanvasGeometry>(group);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_14()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 22.8330002F, -107.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 43.8330002F, -107.0F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = _geometry_14 = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - - Layer aggregator
        // - - - - - Transforms: NULL CONTROL
        // - - - - Transforms: Bdy
        // - - - Transforms: B Scale:0.73529,0.73529, Offset:<70.893, 91.979>
        // - - Path 2+Path 1.PathGeometry
        winrt::com_ptr<CanvasGeometry> Geometry_15()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -44.0F, -107.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ -23.0F, -107.0F });
            sink->EndFigure(D2D1_FIGURE_END_OPEN);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - Transforms: NULL CONTROL
        // - - Transforms: Bdy
        // - Transforms: B Scale:0.73529,0.73529, Offset:<70.893, 91.979>
        // Color
        ColorKeyFrameAnimation ColorAnimation_AlmostDimGray_FF56595B_to_TransparentAlmostDimGray_0056595B()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.142806396F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.228063941F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.248667851F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.269982249F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.289873898F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.419182956F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.439074606F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.752401412F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.772293091F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.82202667F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.84191829F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            return result;
        }

        // Color
        ColorKeyFrameAnimation ColorAnimation_TransparentAlmostDimGray_0056595B_to_AlmostDimGray_FF56595B()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.142806396F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.228063941F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.248667851F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.269982249F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.289873898F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.419182956F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.439074606F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.554174066F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.625222027F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.752401412F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.772293091F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.82202667F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.84191829F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            return result;
        }

        // Color
        ColorKeyFrameAnimation ColorAnimation_TransparentAlmostDimGray_0056595B_to_TransparentAlmostDimGray_0056595B()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // AlmostDimGray_FF56595B
            result.InsertKeyFrame(0.554174066F, { 0xFF, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            // TransparentAlmostDimGray_0056595B
            result.InsertKeyFrame(0.625222027F, { 0x00, 0x56, 0x59, 0x5B }, _holdThenStepEasingFunction);
            return result;
        }

        // Color
        ColorKeyFrameAnimation ColorAnimation_TransparentAlmostOldLace_00FFF4E8_to_AlmostOldLace_FFFFF4E8()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // AlmostOldLace_FFFFF4E8
            result.InsertKeyFrame(0.142806396F, { 0xFF, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // TransparentAlmostOldLace_00FFF4E8
            result.InsertKeyFrame(0.228063941F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // AlmostOldLace_FFFFF4E8
            result.InsertKeyFrame(0.248667851F, { 0xFF, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // TransparentAlmostOldLace_00FFF4E8
            result.InsertKeyFrame(0.269982249F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // AlmostOldLace_FFFFF4E8
            result.InsertKeyFrame(0.289873898F, { 0xFF, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // TransparentAlmostOldLace_00FFF4E8
            result.InsertKeyFrame(0.419182956F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // AlmostOldLace_FFFFF4E8
            result.InsertKeyFrame(0.439074606F, { 0xFF, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // TransparentAlmostOldLace_00FFF4E8
            result.InsertKeyFrame(0.554174066F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // AlmostOldLace_FFFFF4E8
            result.InsertKeyFrame(0.625222027F, { 0xFF, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // TransparentAlmostOldLace_00FFF4E8
            result.InsertKeyFrame(0.752401412F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // AlmostOldLace_FFFFF4E8
            result.InsertKeyFrame(0.772293091F, { 0xFF, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // TransparentAlmostOldLace_00FFF4E8
            result.InsertKeyFrame(0.82202667F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // AlmostOldLace_FFFFF4E8
            result.InsertKeyFrame(0.84191829F, { 0xFF, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - - Layer: W3
        // - - - Transforms: NULL CONTROL
        // - - Transforms: Bdy
        // - Transforms: W3
        // Color
        ColorKeyFrameAnimation ColorAnimation_TransparentAlmostOldLace_00FFF4E8_to_TransparentAlmostOldLace_00FFF4E8()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // AlmostOldLace_FFFFF4E8
            result.InsertKeyFrame(0.554174066F, { 0xFF, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            // TransparentAlmostOldLace_00FFF4E8
            result.InsertKeyFrame(0.625222027F, { 0x00, 0xFF, 0xF4, 0xE8 }, _holdThenStepEasingFunction);
            return result;
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: B Scale:0.73529,0.73529, Offset:<70.893, 91.979>
        CompositionColorBrush AnimatedColorBrush_AlmostDimGray_FF56595B_to_TransparentAlmostDimGray_0056595B()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_AlmostDimGray_FF56595B_to_TransparentAlmostDimGray_0056595B(), _rootProgress);
            return result;
        }

        CompositionColorBrush AnimatedColorBrush_TransparentAlmostDimGray_0056595B_to_AlmostDimGray_FF56595B()
        {
            const auto result = _animatedColorBrush_TransparentAlmostDimGray_0056595B_to_AlmostDimGray_FF56595B = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_TransparentAlmostDimGray_0056595B_to_AlmostDimGray_FF56595B(), _rootProgress);
            return result;
        }

        CompositionColorBrush AnimatedColorBrush_TransparentAlmostDimGray_0056595B_to_TransparentAlmostDimGray_0056595B()
        {
            const auto result = _animatedColorBrush_TransparentAlmostDimGray_0056595B_to_TransparentAlmostDimGray_0056595B = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_TransparentAlmostDimGray_0056595B_to_TransparentAlmostDimGray_0056595B(), _rootProgress);
            return result;
        }

        CompositionColorBrush AnimatedColorBrush_TransparentAlmostOldLace_00FFF4E8_to_AlmostOldLace_FFFFF4E8()
        {
            const auto result = _animatedColorBrush_TransparentAlmostOldLace_00FFF4E8_to_AlmostOldLace_FFFFF4E8 = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_TransparentAlmostOldLace_00FFF4E8_to_AlmostOldLace_FFFFF4E8(), _rootProgress);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: W3
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: W3
        CompositionColorBrush AnimatedColorBrush_TransparentAlmostOldLace_00FFF4E8_to_TransparentAlmostOldLace_00FFF4E8()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_TransparentAlmostOldLace_00FFF4E8_to_TransparentAlmostOldLace_00FFF4E8(), _rootProgress);
            return result;
        }

        CompositionColorBrush ColorBrush_AlmostDimGray_FF56595B()
        {
            return _colorBrush_AlmostDimGray_FF56595B = _c.CreateColorBrush({ 0xFF, 0x56, 0x59, 0x5B });
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // ShapeGroup: Group 14 Offset:<70.893, 35.572>
        CompositionColorBrush ColorBrush_AlmostLightGreen_FF8CE070()
        {
            return _c.CreateColorBrush({ 0xFF, 0x8C, 0xE0, 0x70 });
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Mth
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: Mth
        CompositionColorBrush ColorBrush_AlmostLightSalmon_FFFFAA91()
        {
            return _c.CreateColorBrush({ 0xFF, 0xFF, 0xAA, 0x91 });
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // ShapeGroup: Group 13 Offset:<70.893, 31.283>
        CompositionColorBrush ColorBrush_AlmostTomato_FFFF595E()
        {
            return _c.CreateColorBrush({ 0xFF, 0xFF, 0x59, 0x5E });
        }

        // Layer aggregator
        CompositionContainerShape ContainerShape_00()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.362670004F, 0.362670004F });
            // Transforms: NULL CONTROL
            result.Shapes().Append(ContainerShape_01());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m111p167_to_0(), RootProgressRemapped());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_2(), _rootProgressRemapped);
            return result;
        }

        // - Layer aggregator
        // Transforms for NULL CONTROL
        CompositionContainerShape ContainerShape_01()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            // Transforms: Bdy
            result.Shapes().Append(ContainerShape_02());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m90_to_0(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_1(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // Transforms: NULL CONTROL
        // Transforms for Bdy
        CompositionContainerShape ContainerShape_02()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 70.8929977F, 70.8929977F });
            const auto shapes = result.Shapes();
            // ShapeGroup: Group 14 Offset:<70.893, 35.572>
            shapes.Append(SpriteShape_00());
            // ShapeGroup: Group 13 Offset:<70.893, 31.283>
            shapes.Append(SpriteShape_01());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0(), RootProgress());
            StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_0(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Mth
        CompositionContainerShape ContainerShape_03()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_04());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_0(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Mth
        CompositionContainerShape ContainerShape_04()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.362670004F, 0.362670004F });
            // Transforms: NULL CONTROL
            result.Shapes().Append(ContainerShape_05());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m111p167_to_0, _rootProgressRemapped);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_2, _rootProgressRemapped);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Mth
        // Transforms for NULL CONTROL
        CompositionContainerShape ContainerShape_05()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            // Transforms: Bdy
            result.Shapes().Append(ContainerShape_06());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m90_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_1, _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Mth
        // Transforms: NULL CONTROL
        // Transforms for Bdy
        CompositionContainerShape ContainerShape_06()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 70.8929977F, 70.8929977F });
            const auto shapes = result.Shapes();
            // Transforms: Mth
            shapes.Append(SpriteShape_02());
            // Transforms: Mth
            shapes.Append(SpriteShape_03());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", _scaleYScalarAnimation_1_to_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_0, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: MthCl
        CompositionContainerShape ContainerShape_07()
        {
            const auto result = _c.CreateContainerShape();
            result.Shapes().Append(ContainerShape_08());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_1(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: MthCl
        CompositionContainerShape ContainerShape_08()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.362670004F, 0.362670004F });
            // Transforms: NULL CONTROL
            result.Shapes().Append(ContainerShape_09());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m111p167_to_0, _rootProgressRemapped);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_2, _rootProgressRemapped);
            return result;
        }

        // - - Layer aggregator
        // - Layer: MthCl
        // Transforms for NULL CONTROL
        CompositionContainerShape ContainerShape_09()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            // Transforms: Bdy
            result.Shapes().Append(ContainerShape_10());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m90_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_1, _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: MthCl
        // Transforms: NULL CONTROL
        // Transforms for Bdy
        CompositionContainerShape ContainerShape_10()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 70.8929977F, 70.8929977F });
            // Transforms: MthCl Scale:0.73529,0.73557, Offset:<70.893, 91.987>
            result.Shapes().Append(SpriteShape_04());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", _scaleYScalarAnimation_1_to_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_0, _rootProgress);
            return result;
        }

        // Layer aggregator
        CompositionContainerShape ContainerShape_11()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.362670004F, 0.362670004F });
            // Transforms: NULL CONTROL
            result.Shapes().Append(ContainerShape_12());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m111p167_to_0, _rootProgressRemapped);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_2, _rootProgressRemapped);
            return result;
        }

        // - Layer aggregator
        // Transforms for NULL CONTROL
        CompositionContainerShape ContainerShape_12()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            // Transforms: Bdy
            result.Shapes().Append(ContainerShape_13());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m90_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_1, _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // Transforms: NULL CONTROL
        // Transforms for Bdy
        CompositionContainerShape ContainerShape_13()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 70.8929977F, 70.8929977F });
            const auto shapes = result.Shapes();
            // Transforms: S
            shapes.Append(SpriteShape_05());
            // Transforms: S
            shapes.Append(SpriteShape_06());
            // Transforms: S
            shapes.Append(SpriteShape_07());
            // Transforms: S
            shapes.Append(SpriteShape_08());
            // Transforms: S
            shapes.Append(SpriteShape_09());
            // Transforms: S
            shapes.Append(SpriteShape_10());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", _scaleYScalarAnimation_1_to_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_0, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: E1
        CompositionContainerShape ContainerShape_14()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_15());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_2(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: E1
        CompositionContainerShape ContainerShape_15()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.362670004F, 0.362670004F });
            // Transforms: NULL CONTROL
            result.Shapes().Append(ContainerShape_16());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m111p167_to_0, _rootProgressRemapped);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_2, _rootProgressRemapped);
            return result;
        }

        // - - Layer aggregator
        // - Layer: E1
        // Transforms for NULL CONTROL
        CompositionContainerShape ContainerShape_16()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            // Transforms: Bdy
            result.Shapes().Append(ContainerShape_17());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m90_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_1, _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: E1
        // Transforms: NULL CONTROL
        // Transforms for Bdy
        CompositionContainerShape ContainerShape_17()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 70.8929977F, 70.8929977F });
            const auto shapes = result.Shapes();
            // Transforms: E1
            shapes.Append(SpriteShape_11());
            // Transforms: E1
            shapes.Append(SpriteShape_12());
            // Transforms: E2
            shapes.Append(ContainerShape_18());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", _scaleYScalarAnimation_1_to_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_0, _rootProgress);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: E1
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Transforms for E2
        CompositionContainerShape ContainerShape_18()
        {
            const auto result = _c.CreateContainerShape();
            const auto shapes = result.Shapes();
            // ShapeGroup: Group 11 Offset:<91.684, 13.371>
            shapes.Append(SpriteShape_13());
            // ShapeGroup: Group 9 Offset:<41.978, 13.371>
            shapes.Append(SpriteShape_14());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_3(), _rootProgress);
            return result;
        }

        // Layer aggregator
        CompositionContainerShape ContainerShape_19()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.362670004F, 0.362670004F });
            // Transforms: NULL CONTROL
            result.Shapes().Append(ContainerShape_20());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m111p167_to_0, _rootProgressRemapped);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_2, _rootProgressRemapped);
            return result;
        }

        // - Layer aggregator
        // Transforms for NULL CONTROL
        CompositionContainerShape ContainerShape_20()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            // Transforms: Bdy
            result.Shapes().Append(ContainerShape_21());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m90_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_1, _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // Transforms: NULL CONTROL
        // Transforms for Bdy
        CompositionContainerShape ContainerShape_21()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 70.8929977F, 70.8929977F });
            // Transforms: B Scale:0.73529,0.73529, Offset:<70.893, 91.979>
            result.Shapes().Append(SpriteShape_15());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", _scaleYScalarAnimation_1_to_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_0, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: W3
        CompositionContainerShape ContainerShape_22()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_23());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_3(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: W3
        CompositionContainerShape ContainerShape_23()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.362670004F, 0.362670004F });
            // Transforms: NULL CONTROL
            result.Shapes().Append(ContainerShape_24());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m111p167_to_0, _rootProgressRemapped);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_2, _rootProgressRemapped);
            return result;
        }

        // - - Layer aggregator
        // - Layer: W3
        // Transforms for NULL CONTROL
        CompositionContainerShape ContainerShape_24()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            // Transforms: Bdy
            result.Shapes().Append(ContainerShape_25());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_m90_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_1, _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: W3
        // Transforms: NULL CONTROL
        // Transforms for Bdy
        CompositionContainerShape ContainerShape_25()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 70.8929977F, 70.8929977F });
            const auto shapes = result.Shapes();
            // Transforms: W3
            shapes.Append(SpriteShape_16());
            // Transforms: E2
            shapes.Append(ContainerShape_26());
            // Transforms: W1 Scale:0.73529,0.73529, Offset:<70.893, 91.979>
            shapes.Append(SpriteShape_18());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", _scaleYScalarAnimation_1_to_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_0, _rootProgress);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: W3
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Transforms for E2
        CompositionContainerShape ContainerShape_26()
        {
            const auto result = _c.CreateContainerShape();
            // Transforms: W2
            result.Shapes().Append(SpriteShape_17());
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_3, _rootProgress);
            return result;
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // ShapeGroup: Group 14 Offset:<70.893, 35.572>
        CompositionPathGeometry PathGeometry_00()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_00())));
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // ShapeGroup: Group 13 Offset:<70.893, 31.283>
        CompositionPathGeometry PathGeometry_01()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_01())));
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Mth
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: Mth
        CompositionPathGeometry PathGeometry_02()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_02())));
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Mth
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: Mth
        CompositionPathGeometry PathGeometry_03()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_03())));
        }

        // - - - - - Layer aggregator
        // - - - - Layer: MthCl
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: MthCl Scale:0.73529,0.73557, Offset:<70.893, 91.987>
        CompositionPathGeometry PathGeometry_04()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_04())));
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: S
        CompositionPathGeometry PathGeometry_05()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_05())));
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: S
        CompositionPathGeometry PathGeometry_06()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_06())));
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: S
        CompositionPathGeometry PathGeometry_07()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_07())));
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: S
        CompositionPathGeometry PathGeometry_08()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_08())));
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: S
        CompositionPathGeometry PathGeometry_09()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_09())));
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: S
        CompositionPathGeometry PathGeometry_10()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_10())));
        }

        CompositionPathGeometry PathGeometry_11()
        {
            return _pathGeometry_11 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_11())));
        }

        CompositionPathGeometry PathGeometry_12()
        {
            return _pathGeometry_12 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_12())));
        }

        // - - - - Layer aggregator
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: B Scale:0.73529,0.73529, Offset:<70.893, 91.979>
        // Path 2+Path 1.PathGeometry
        CompositionPathGeometry PathGeometry_13()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_13())));
        }

        // - - - - - Layer aggregator
        // - - - - Layer: W3
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: W1 Scale:0.73529,0.73529, Offset:<70.893, 91.979>
        CompositionPathGeometry PathGeometry_14()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(_geometry_14)));
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_00()
        {
            // Offset:<70.893, 35.572>
            const auto result = CreateSpriteShape(PathGeometry_00(), { 1.0F, 0.0F, 0.0F, 1.0F, 70.8929977F, 35.5719986F }, ColorBrush_AlmostLightGreen_FF8CE070());
            return result;
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_01()
        {
            // Offset:<70.893, 31.283>
            const auto result = CreateSpriteShape(PathGeometry_01(), { 1.0F, 0.0F, 0.0F, 1.0F, 70.8929977F, 31.2830009F }, ColorBrush_AlmostTomato_FFFF595E());
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Mth
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_02()
        {
            // Offset:<70.893, 27.04>
            const auto result = CreateSpriteShape(PathGeometry_02(), { 1.0F, 0.0F, 0.0F, 1.0F, 70.8929977F, 27.0400009F }, ColorBrush_AlmostDimGray_FF56595B());
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Mth
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_03()
        {
            // Offset:<70.892, 31.078>
            const auto result = CreateSpriteShape(PathGeometry_03(), { 1.0F, 0.0F, 0.0F, 1.0F, 70.8919983F, 31.0779991F }, ColorBrush_AlmostLightSalmon_FFFFAA91());
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: MthCl
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_04()
        {
            // Offset:<70.893, 91.987>, Rotation:-0.007906444094608568 degrees,
            // Scale:<0.73529, 0.73557>
            const auto result = CreateSpriteShape(PathGeometry_04(), { 0.735289991F, 0.0F, 0.0F, 0.735570014F, 70.8929977F, 91.9869995F });
            result.StrokeBrush(_colorBrush_AlmostDimGray_FF56595B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(4.0F);
            return result;
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_05()
        {
            // Offset:<82.343, 47.862>
            const auto result = CreateSpriteShape(PathGeometry_05(), { 1.0F, 0.0F, 0.0F, 1.0F, 82.3430023F, 47.8619995F }, _colorBrush_AlmostDimGray_FF56595B);
            return result;
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_06()
        {
            // Offset:<102.188, 38.411>
            const auto result = CreateSpriteShape(PathGeometry_06(), { 1.0F, 0.0F, 0.0F, 1.0F, 102.188004F, 38.4109993F }, _colorBrush_AlmostDimGray_FF56595B);
            return result;
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_07()
        {
            // Offset:<115.693, 21.583>
            const auto result = CreateSpriteShape(PathGeometry_07(), { 1.0F, 0.0F, 0.0F, 1.0F, 115.693001F, 21.5830002F }, _colorBrush_AlmostDimGray_FF56595B);
            return result;
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_08()
        {
            // Offset:<59.443, 47.861>
            const auto result = CreateSpriteShape(PathGeometry_08(), { 1.0F, 0.0F, 0.0F, 1.0F, 59.4430008F, 47.8610001F }, _colorBrush_AlmostDimGray_FF56595B);
            return result;
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_09()
        {
            // Offset:<39.598, 38.412>
            const auto result = CreateSpriteShape(PathGeometry_09(), { 1.0F, 0.0F, 0.0F, 1.0F, 39.5979996F, 38.4119987F }, _colorBrush_AlmostDimGray_FF56595B);
            return result;
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_10()
        {
            // Offset:<26.093, 21.583>
            const auto result = CreateSpriteShape(PathGeometry_10(), { 1.0F, 0.0F, 0.0F, 1.0F, 26.0930004F, 21.5830002F }, _colorBrush_AlmostDimGray_FF56595B);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: E1
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_11()
        {
            // Offset:<95.746, 13.371>
            const auto result = CreateSpriteShape(PathGeometry_11(), { 1.0F, 0.0F, 0.0F, 1.0F, 95.7460022F, 13.3710003F }, AnimatedColorBrush_TransparentAlmostOldLace_00FFF4E8_to_AlmostOldLace_FFFFF4E8());
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: E1
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_12()
        {
            // Offset:<46.04, 13.371>
            const auto result = CreateSpriteShape(_pathGeometry_11, { 1.0F, 0.0F, 0.0F, 1.0F, 46.0400009F, 13.3710003F }, _animatedColorBrush_TransparentAlmostOldLace_00FFF4E8_to_AlmostOldLace_FFFFF4E8);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: E1
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: E2
        // Path 1
        CompositionSpriteShape SpriteShape_13()
        {
            // Offset:<91.684, 13.371>
            const auto result = CreateSpriteShape(PathGeometry_12(), { 1.0F, 0.0F, 0.0F, 1.0F, 91.6839981F, 13.3710003F }, AnimatedColorBrush_TransparentAlmostDimGray_0056595B_to_AlmostDimGray_FF56595B());
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: E1
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: E2
        // Path 1
        CompositionSpriteShape SpriteShape_14()
        {
            // Offset:<41.978, 13.371>
            const auto result = CreateSpriteShape(_pathGeometry_12, { 1.0F, 0.0F, 0.0F, 1.0F, 41.9780006F, 13.3710003F }, _animatedColorBrush_TransparentAlmostDimGray_0056595B_to_AlmostDimGray_FF56595B);
            return result;
        }

        // - - - Layer aggregator
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 2+Path 1
        CompositionSpriteShape SpriteShape_15()
        {
            // Offset:<70.893, 91.979>, Rotation:-0.007906444094608568 degrees,
            // Scale:<0.73529, 0.73529>
            const auto result = CreateSpriteShape(PathGeometry_13(), { 0.735289991F, 0.0F, 0.0F, 0.735289991F, 70.8929977F, 91.9789963F });
            result.StrokeBrush(AnimatedColorBrush_AlmostDimGray_FF56595B_to_TransparentAlmostDimGray_0056595B());
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(5.0F);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: W3
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 1
        CompositionSpriteShape SpriteShape_16()
        {
            // Offset:<46.04, 13.371>
            const auto result = CreateSpriteShape(_pathGeometry_11, { 1.0F, 0.0F, 0.0F, 1.0F, 46.0400009F, 13.3710003F }, AnimatedColorBrush_TransparentAlmostOldLace_00FFF4E8_to_TransparentAlmostOldLace_00FFF4E8());
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: W3
        // - - Transforms: NULL CONTROL
        // - Transforms: Bdy
        // Transforms: E2
        // Path 1
        CompositionSpriteShape SpriteShape_17()
        {
            // Offset:<41.978, 13.371>
            const auto result = CreateSpriteShape(_pathGeometry_12, { 1.0F, 0.0F, 0.0F, 1.0F, 41.9780006F, 13.3710003F }, AnimatedColorBrush_TransparentAlmostDimGray_0056595B_to_TransparentAlmostDimGray_0056595B());
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: W3
        // - Transforms: NULL CONTROL
        // Transforms: Bdy
        // Path 2
        CompositionSpriteShape SpriteShape_18()
        {
            // Offset:<70.893, 91.979>, Rotation:-0.007906444094608568 degrees,
            // Scale:<0.73529, 0.73529>
            const auto result = CreateSpriteShape(PathGeometry_14(), { 0.735289991F, 0.0F, 0.0F, 0.735289991F, 70.8929977F, 91.9789963F });
            result.StrokeBrush(_animatedColorBrush_TransparentAlmostDimGray_0056595B_to_TransparentAlmostDimGray_0056595B);
            result.StrokeDashCap(CompositionStrokeCap::Round);
            result.StrokeStartCap(CompositionStrokeCap::Round);
            result.StrokeEndCap(CompositionStrokeCap::Round);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(5.0F);
            return result;
        }

        // The root of the composition.
        ContainerVisual Root()
        {
            const auto result = _root = _c.CreateContainerVisual();
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"Progress", 0.0F);
            propertySet.InsertScalar(L"t0", 0.0F);
            // Layer aggregator
            result.Children().InsertAtTop(ShapeVisual_0());
            StartProgressBoundAnimation(propertySet, L"t0", t0ScalarAnimation_0_to_1(), _rootProgressRemapped);
            return result;
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_0()
        {
            return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.0F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_1()
        {
            return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.833000004F, 0.833000004F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_2()
        {
            return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.833000004F, 0.833000004F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_3()
        {
            return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction({ 0.486000001F, 0.0F }, { 0.666999996F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_4()
        {
            return _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.0F }, { 0.666999996F, 1.0F });
        }

        ExpressionAnimation RootProgress()
        {
            const auto result = _rootProgress = _c.CreateExpressionAnimation(L"_.Progress");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        ExpressionAnimation RootProgressRemapped()
        {
            const auto result = _rootProgressRemapped = _c.CreateExpressionAnimation(L"(_.Progress*0.9811764)+0.0188236");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0()
        {
            const auto result = _rotationAngleInDegreesScalarAnimation_0_to_0 = CreateScalarKeyFrameAnimation(0.0F, 0.0F, StepThenHoldEasingFunction());
            result.InsertKeyFrame(0.5115453F, 0.0F, HoldThenStepEasingFunction());
            result.InsertKeyFrame(0.543516874F, -2.4000001F, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.219999999F, 1.0F }));
            result.InsertKeyFrame(0.582593262F, 7.9000001F, _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.0F }, { 0.0F, 1.0F }));
            result.InsertKeyFrame(0.607460022F, 7.9000001F, _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.333000004F }, { 0.666999996F, 0.666999996F }));
            result.InsertKeyFrame(0.642984033F, -2.5999999F, _c.CreateCubicBezierEasingFunction({ 0.603999972F, 0.0F }, { 0.493999988F, 1.0F }));
            result.InsertKeyFrame(0.682060421F, 0.0F, _c.CreateCubicBezierEasingFunction({ 0.57099998F, 0.0F }, { 0.379000008F, 1.0F }));
            return result;
        }

        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_m90_to_0()
        {
            const auto result = _rotationAngleInDegreesScalarAnimation_m90_to_0 = CreateScalarKeyFrameAnimation(0.0F, -90.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0873872116F, -90.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.121492006F, 0.0F, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.147071049F, 12.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.211014211F, -10.9820004F, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.270693421F, 0.0F, _cubicBezierEasingFunction_4);
            return result;
        }

        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_m111p167_to_0()
        {
            const auto result = _rotationAngleInDegreesScalarAnimation_m111p167_to_0 = CreateScalarKeyFrameAnimation(0.0F, -111.167F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.0257946569F, -111.167F, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.0946338549F, -19.8999996F, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.104566246F, 0.0F, _cubicBezierEasingFunction_2);
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1()
        {
            const auto result = _scaleYScalarAnimation_1_to_1 = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.343159854F, 1.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.355950266F, 0.899999976F, CubicBezierEasingFunction_0());
            result.InsertKeyFrame(0.360214919F, 1.07299995F, _c.CreateCubicBezierEasingFunction({ 0.589999974F, 0.0F }, { 0.833000004F, 0.833000004F }));
            result.InsertKeyFrame(0.377264649F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.398579031F, 1.02999997F, CubicBezierEasingFunction_1());
            result.InsertKeyFrame(0.407103032F, 0.853999972F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.424157679F, 1.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.0F, 1.0F }));
            return result;
        }

        ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.0257946551F, 1.0F, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.0257946569F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0946338475F, 1.0F, _cubicBezierEasingFunction_2);
            return result;
        }

        // Layer aggregator
        ShapeVisual ShapeVisual_0()
        {
            const auto result = _c.CreateShapeVisual();
            result.Size({ 100.0F, 100.0F });
            const auto shapes = result.Shapes();
            shapes.Append(ContainerShape_00());
            // Layer: Mth
            shapes.Append(ContainerShape_03());
            // Layer: MthCl
            shapes.Append(ContainerShape_07());
            shapes.Append(ContainerShape_11());
            // Layer: E1
            shapes.Append(ContainerShape_14());
            shapes.Append(ContainerShape_19());
            // Layer: W3
            shapes.Append(ContainerShape_22());
            return result;
        }

        StepEasingFunction HoldThenStepEasingFunction()
        {
            const auto result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
            result.IsFinalStepSingleFrame(true);
            return result;
        }

        StepEasingFunction StepThenHoldEasingFunction()
        {
            const auto result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
            result.IsInitialStepSingleFrame(true);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_0()
        {
            const auto result = _offsetVector2Animation_0 = CreateVector2KeyFrameAnimation(0.0F, { 59.7070007F, -10.8929996F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0873872116F, { 59.7070007F, -10.8929996F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.0926394314F, { 44.4710007F, -10.8929996F }, CubicBezierEasingFunction_2());
            result.InsertKeyFrame(0.100500889F, { 26.3010006F, -10.8929996F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.105753109F, { 16.2700005F, -10.8929996F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.121492006F, { -10.8929996F, -10.8929996F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.147071049F, { -19.5930004F, -10.8929996F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.211014211F, { -3.99099994F, -10.8929996F }, CubicBezierEasingFunction_3());
            result.InsertKeyFrame(0.270692706F, { -10.8929996F, -10.8929996F }, CubicBezierEasingFunction_4());
            result.InsertKeyFrame(0.360214919F, { -10.8929996F, -10.8929996F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.377264649F, { -10.8929996F, -32.9519997F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.398579031F, { -10.8929996F, -10.8929996F }, _cubicBezierEasingFunction_1);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_1()
        {
            const auto result = _offsetVector2Animation_1 = CreateVector2KeyFrameAnimation(0.0F, { 70.4550018F, -0.133000001F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0873872116F, { 70.4550018F, -0.133000001F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.121492006F, { 110.455002F, -0.133000001F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.147071049F, { 118.432999F, -0.133000001F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.211014211F, { 106.471001F, -0.133000001F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.270693421F, { 110.455002F, -0.133000001F }, _cubicBezierEasingFunction_4);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_2()
        {
            const auto result = _offsetVector2Animation_2 = CreateVector2KeyFrameAnimation(0.0F, { -156.733994F, -12.599F }, _holdThenStepEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertExpressionKeyFrame(0.0257946551F, L"(Pow(1-_.t0,3)*Vector2(-156.734,-12.599))+(3*Square(1-_.t0)*_.t0*Vector2(-111.6883,-54.39386))+(3*(1-_.t0)*Square(_.t0)*Vector2(-109.1483,-30.31195))+(Pow(_.t0,3)*Vector2(-91.369,-28.123))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.0946338475F, L"(Pow(1-_.t0,3)*Vector2(-91.369,-28.123))+(3*Square(1-_.t0)*_.t0*Vector2(-73.58971,-25.93405))+(3*(1-_.t0)*Square(_.t0)*Vector2(-50.058,0.534))+(Pow(_.t0,3)*Vector2(-50.058,0.534))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.0946338549F, { -50.0579987F, 0.533999979F }, _stepThenHoldEasingFunction);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_3()
        {
            const auto result = _offsetVector2Animation_3 = CreateVector2KeyFrameAnimation(0.0F, { 4.33500004F, 0.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.149200708F, { 4.33500004F, 0.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.184724689F, { 4.33500004F, 0.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.277087033F, { 3.70499992F, 0.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.337477803F, { 4.44000006F, 0.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.404973358F, { 4.33500004F, 0.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.554174066F, { 4.44000006F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Mth
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_0()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.21314387F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: MthCl
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_1()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.21314387F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: E1
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_2()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.142095909F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: W3
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_3()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.554174066F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.628774405F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        static IGeometrySource2D CanvasGeometryToIGeometrySource2D(winrt::com_ptr<CanvasGeometry> geo)
        {
            return geo.as<IGeometrySource2D>();
        }

    public:
        Watermelon_AnimatedVisual_UAPv7(Compositor compositor)
            : _c{compositor}
            , _reusableExpressionAnimation(compositor.CreateExpressionAnimation())
        {
            winrt::check_hresult(D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, _d2dFactory.put()));
            const auto _ = Root();
        }

        void Close()
        {
            if (_root)
            {
                _root.Close();
            }
        }

        TimeSpan Duration() const
        {
            return TimeSpan{ c_durationTicks };
        }

        Visual RootVisual() const
        {
            return _root;
        }

        float2 Size() const
        {
            return { 100.0F, 100.0F };
        }

        static bool IsRuntimeCompatible()
        {
            return winrt::Windows::Foundation::Metadata::ApiInformation::IsApiContractPresent(L"Windows.Foundation.UniversalApiContract", 7);
        }
    };

    winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual Watermelon::TryCreateAnimatedVisual(
        Compositor const& compositor,
        IInspectable& diagnostics)
    {
        diagnostics = nullptr;

        if (Watermelon_AnimatedVisual_UAPv11::IsRuntimeCompatible())
        {
            return winrt::make<Watermelon_AnimatedVisual_UAPv11>(compositor);
        }

        if (Watermelon_AnimatedVisual_UAPv7::IsRuntimeCompatible())
        {
            return winrt::make<Watermelon_AnimatedVisual_UAPv7>(compositor);
        }

        return nullptr;
    }

    double Watermelon::FrameToProgress(double frameNumber)
    {
        return frameNumber / 563.0;
    }

    winrt::Windows::Foundation::Collections::IMapView<hstring, double> Watermelon::Markers()
    {
        return winrt::single_threaded_map<winrt::hstring, double>(
            std::map<winrt::hstring, double>
            {
            }
        ).GetView();
    }

    void Watermelon::SetColorProperty(hstring const&, Color)
    {
    }

    void Watermelon::SetScalarProperty(hstring const&, double)
    {
    }
} // end namespace

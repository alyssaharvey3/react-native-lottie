//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.0.0-build.90+ga9eb6fa111
//       
//       Command:
//           LottieGen -InterfaceBaseName Microsoft.UI.Xaml.Controls.IAnimatedVisual -Language Cppwinrt -WinUIVersion 2.4 -InputFile MotionCorpse-Jrcanest.json
//       
//       Input file:
//           MotionCorpse-Jrcanest.json (38034 bytes created 20:50-08:00 Dec 28 2020)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ___________________________________________________________________________
// |       Object stats       | UAP v12 count | UAP v11 count | UAP v7 count |
// |__________________________|_______________|_______________|______________|
// | All CompositionObjects   |           480 |           480 |          448 |
// |--------------------------+---------------+---------------+--------------|
// | Expression animators     |            84 |            84 |           77 |
// | KeyFrame animators       |            74 |            74 |           67 |
// | Reference parameters     |            85 |            85 |           78 |
// | Expression operations    |             0 |             0 |            0 |
// |--------------------------+---------------+---------------+--------------|
// | Animated brushes         |             5 |             5 |            5 |
// | Animated gradient stops  |             - |             - |            - |
// | ExpressionAnimations     |             2 |             2 |            2 |
// | PathKeyFrameAnimations   |             7 |             7 |            - |
// |--------------------------+---------------+---------------+--------------|
// | ContainerVisuals         |             1 |             1 |            1 |
// | ShapeVisuals             |             1 |             1 |            1 |
// |--------------------------+---------------+---------------+--------------|
// | ContainerShapes          |            18 |            18 |           18 |
// | CompositionSpriteShapes  |            17 |            17 |           17 |
// |--------------------------+---------------+---------------+--------------|
// | Brushes                  |            14 |            14 |           14 |
// | Gradient stops           |             - |             - |            - |
// | CompositionVisualSurface |             - |             - |            - |
// ---------------------------------------------------------------------------
#include "pch.h"
#include "AnimatedVisuals.MotionCorpse_Jrcanest.h"
#include "AnimatedVisuals.MotionCorpse_Jrcanest.g.cpp"
#include <winrt/Windows.Foundation.Metadata.h>
#include <winrt/Windows.UI.Composition.h>
#include "d2d1.h"
#include <d2d1_1.h>
#include <d2d1helper.h>
#include <Windows.Graphics.Interop.h>
#ifdef BUILD_WINDOWS
namespace ABI
{
#include <Windows.Graphics.Effects.Interop.h>
}
#else
#include <Windows.Graphics.Effects.Interop.h>
#endif
#include <winrt/Windows.Graphics.Effects.h>

using namespace winrt::Windows::Foundation;
using namespace winrt::Windows::Foundation::Numerics;
using namespace winrt::Windows::Graphics;
using namespace winrt::Windows::UI;
using namespace winrt::Windows::UI::Composition;
using TimeSpan = winrt::Windows::Foundation::TimeSpan;

namespace winrt::AnimatedVisuals::implementation
{
    class CanvasGeometry : public winrt::implements<CanvasGeometry,
        IGeometrySource2D,
        ::ABI::Windows::Graphics::IGeometrySource2DInterop>
    {
        winrt::com_ptr<ID2D1Geometry> _geometry{ nullptr };

    public:
        CanvasGeometry(winrt::com_ptr<ID2D1Geometry> geometry)
            : _geometry{ geometry }
        { }

        // IGeometrySource2D.
        winrt::com_ptr<ID2D1Geometry> Geometry() { return _geometry; }

        // IGeometrySource2DInterop.
        IFACEMETHODIMP GetGeometry(ID2D1Geometry** value) override
        {
            _geometry.copy_to(value);
            return S_OK;
        }

        // IGeometrySource2DInterop.
        IFACEMETHODIMP TryGetGeometryUsingFactory(ID2D1Factory*, ID2D1Geometry**) override
        {
            return E_NOTIMPL;
        }
    };
    class MotionCorpse_Jrcanest_AnimatedVisual_UAPv12 : public winrt::implements<MotionCorpse_Jrcanest_AnimatedVisual_UAPv12,
            winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual,
            IClosable>
    {
        winrt::com_ptr<ID2D1Factory> _d2dFactory{ nullptr };
        static constexpr int64_t c_durationTicks{ 34166666L };
        Compositor const _c{ nullptr };
        ExpressionAnimation const _reusableExpressionAnimation{ nullptr };
        CompositionColorBrush _colorBrush_AlmostBlack_FF001623{ nullptr };
        CompositionColorBrush _colorBrush_AlmostCoral_FFFF7060{ nullptr };
        CompositionColorBrush _colorBrush_AlmostGainsboro_FFD8DBD6{ nullptr };
        CompositionColorBrush _colorBrush_AlmostLightSalmon_FFFFC17A{ nullptr };
        CompositionPath _path_0{ nullptr };
        CompositionPath _path_1{ nullptr };
        CompositionPath _path_2{ nullptr };
        CompositionPath _path_3{ nullptr };
        CompositionPath _path_4{ nullptr };
        CompositionPath _path_5{ nullptr };
        CompositionPath _path_6{ nullptr };
        CompositionPath _path_7{ nullptr };
        CompositionPath _path_8{ nullptr };
        CompositionPath _path_9{ nullptr };
        CompositionPathGeometry _pathGeometry_5{ nullptr };
        CompositionRectangleGeometry _rectangle_2024p742x1181p836{ nullptr };
        ContainerVisual _root{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_0{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_1{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_2{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_3{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_4{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_5{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_6{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_7{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_8{ nullptr };
        ExpressionAnimation _rootProgress{ nullptr };
        ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_0_1{ nullptr };
        ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_45{ nullptr };
        ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_m45{ nullptr };
        ScalarKeyFrameAnimation _scalarAnimation_1_to_0p66{ nullptr };
        StepEasingFunction _holdThenStepEasingFunction{ nullptr };
        StepEasingFunction _stepThenHoldEasingFunction{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_04{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_07{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_14{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_15{ nullptr };
        Vector2KeyFrameAnimation _shapeVisibilityAnimation_02{ nullptr };
        Vector2KeyFrameAnimation _shapeVisibilityAnimation_03{ nullptr };

        static void StartProgressBoundAnimation(
            CompositionObject target,
            winrt::hstring animatedPropertyName,
            CompositionAnimation animation,
            ExpressionAnimation controllerProgressExpression)
        {
            target.StartAnimation(animatedPropertyName, animation);
            const auto controller = target.TryGetAnimationController(animatedPropertyName);
            controller.Pause();
            controller.StartAnimation(L"Progress", controllerProgressExpression);
        }

        void BindProperty(
            CompositionObject target,
            winrt::hstring animatedPropertyName,
            winrt::hstring expression,
            winrt::hstring referenceParameterName,
            CompositionObject referencedObject)
        {
            _reusableExpressionAnimation.ClearAllParameters();
            _reusableExpressionAnimation.Expression(expression);
            _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
            target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
        }

        ColorKeyFrameAnimation CreateColorKeyFrameAnimation(float initialProgress, Color initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateColorKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InterpolationColorSpace(CompositionColorSpace::Rgb);
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreatePathKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateScalarKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, float2 initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateVector2KeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, float3x2 transformMatrix, CompositionBrush fillBrush)
        {
            const auto result = _c.CreateSpriteShape(geometry);
            result.TransformMatrix(transformMatrix);
            result.FillBrush(fillBrush);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Small_triangle
        // - - Transforms: Small_triangle Offset:<-50, 0>
        winrt::com_ptr<CanvasGeometry> Geometry_00()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -50.0F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 0.0F, -62.0F });
            sink->AddLine({ 50.0F, 0.0F });
            sink->AddLine({ -50.0F, 0.0F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_01()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -103.538002F, 76.2139969F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -103.538002F, 76.2139969F }, { -149.979004F, 103.026001F }, { -149.979004F, 103.026001F } });
            sink->AddBezier({ { -149.979004F, 103.026001F }, { -149.979004F, 156.651001F }, { -149.979004F, 156.651001F } });
            sink->AddBezier({ { -149.979004F, 156.651001F }, { -103.538002F, 183.464005F }, { -103.538002F, 183.464005F } });
            sink->AddBezier({ { -103.538002F, 183.464005F }, { -57.0970001F, 156.651001F }, { -57.0970001F, 156.651001F } });
            sink->AddBezier({ { -57.0970001F, 156.651001F }, { -57.0970001F, 103.026001F }, { -57.0970001F, 103.026001F } });
            sink->AddBezier({ { -57.0970001F, 103.026001F }, { -103.538002F, 76.2139969F }, { -103.538002F, 76.2139969F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_02()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -87.7080002F, -30.9740009F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -87.7080002F, -30.9740009F }, { -177.125F, 20.6509991F }, { -177.125F, 20.6509991F } });
            sink->AddBezier({ { -177.125F, 20.6509991F }, { -177.125F, 123.901001F }, { -177.125F, 123.901001F } });
            sink->AddBezier({ { -177.125F, 123.901001F }, { -87.7080002F, 175.526001F }, { -87.7080002F, 175.526001F } });
            sink->AddBezier({ { -87.7080002F, 175.526001F }, { 1.70899999F, 123.901001F }, { 1.70899999F, 123.901001F } });
            sink->AddBezier({ { 1.70899999F, 123.901001F }, { 1.70899999F, 20.6509991F }, { 1.70899999F, 20.6509991F } });
            sink->AddBezier({ { 1.70899999F, 20.6509991F }, { -87.7080002F, -30.9740009F }, { -87.7080002F, -30.9740009F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: hexagon
        // - - - Transforms: hexagon
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_03()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -87.7080002F, -128.973999F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -87.7080002F, -128.973999F }, { -212.632004F, -56.848999F }, { -212.632004F, -56.848999F } });
            sink->AddBezier({ { -212.632004F, -56.848999F }, { -212.632004F, 87.401001F }, { -212.632004F, 87.401001F } });
            sink->AddBezier({ { -212.632004F, 87.401001F }, { -87.7080002F, 159.526001F }, { -87.7080002F, 159.526001F } });
            sink->AddBezier({ { -87.7080002F, 159.526001F }, { 37.2159996F, 87.401001F }, { 37.2159996F, 87.401001F } });
            sink->AddBezier({ { 37.2159996F, 87.401001F }, { 37.2159996F, -56.848999F }, { 37.2159996F, -56.848999F } });
            sink->AddBezier({ { 37.2159996F, -56.848999F }, { -87.7080002F, -128.973999F }, { -87.7080002F, -128.973999F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_04()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -38.1990013F, 3.30900002F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -38.1990013F, 25.6970005F }, { -20.0499992F, 43.8470001F }, { 2.33899999F, 43.8470001F } });
            sink->AddBezier({ { 24.7280006F, 43.8470001F }, { 42.8769989F, 25.6970005F }, { 42.8769989F, 3.30900002F } });
            sink->AddBezier({ { 42.8769989F, 3.30900002F }, { 42.7190018F, 3.23099995F }, { 42.7190018F, 3.23099995F } });
            sink->AddBezier({ { 42.7190018F, -19.1569996F }, { 24.5699997F, -37.3069992F }, { 2.18099999F, -37.3069992F } });
            sink->AddBezier({ { -20.2080002F, -37.3069992F }, { -38.355999F, -19.1569996F }, { -38.355999F, 3.23099995F } });
            sink->AddBezier({ { -38.355999F, 3.23099995F }, { -38.1990013F, 3.30900002F }, { -38.1990013F, 3.30900002F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Circle_small
        // - - - Transforms: Circle_control
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_05()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -38.355999F, 157.309006F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -38.355999F, 179.697006F }, { -20.2080002F, 197.847F }, { 2.18099999F, 197.847F } });
            sink->AddBezier({ { 24.5699997F, 197.847F }, { 42.7190018F, 179.697006F }, { 42.7190018F, 157.309006F } });
            sink->AddBezier({ { 42.7190018F, 157.309006F }, { 42.7190018F, -116.768997F }, { 42.7190018F, -116.768997F } });
            sink->AddBezier({ { 42.7190018F, -139.156998F }, { 24.5699997F, -157.307007F }, { 2.18099999F, -157.307007F } });
            sink->AddBezier({ { -20.2080002F, -157.307007F }, { -38.355999F, -139.156998F }, { -38.355999F, -116.768997F } });
            sink->AddBezier({ { -38.355999F, -116.768997F }, { -38.355999F, 157.309006F }, { -38.355999F, 157.309006F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_06()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 222.5F, -206.5F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 222.5F, -206.5F }, { 222.0F, -161.5F }, { 222.0F, -161.5F } });
            sink->AddBezier({ { 222.0F, -161.5F }, { -163.0F, -161.0F }, { -163.0F, -161.0F } });
            sink->AddBezier({ { -163.0F, -161.0F }, { -162.5F, -206.0F }, { -162.5F, -206.0F } });
            sink->AddBezier({ { -162.5F, -206.0F }, { 222.5F, -206.5F }, { 222.5F, -206.5F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Btn_rectangle
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_07()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 222.5F, -206.5F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 222.5F, -206.5F }, { 222.0F, 26.5F }, { 222.0F, 26.5F } });
            sink->AddBezier({ { 222.0F, 26.5F }, { -163.0F, 27.0F }, { -163.0F, 27.0F } });
            sink->AddBezier({ { -163.0F, 27.0F }, { -162.5F, -206.0F }, { -162.5F, -206.0F } });
            sink->AddBezier({ { -162.5F, -206.0F }, { 222.5F, -206.5F }, { 222.5F, -206.5F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Btn_rectangle
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_08()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 163.5F, -206.5F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 163.5F, -206.5F }, { 163.0F, 26.5F }, { 163.0F, 26.5F } });
            sink->AddBezier({ { 163.0F, 26.5F }, { -222.0F, 27.0F }, { -222.0F, 27.0F } });
            sink->AddBezier({ { -222.0F, 27.0F }, { -221.5F, -206.0F }, { -221.5F, -206.0F } });
            sink->AddBezier({ { -221.5F, -206.0F }, { 163.5F, -206.5F }, { 163.5F, -206.5F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_09()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 108.502998F, 108.502998F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 108.502998F, 108.502998F }, { -35.0400009F, 108.502998F }, { -35.0400009F, 108.502998F } });
            sink->AddBezier({ { -35.0400009F, 108.502998F }, { -35.0400009F, -35.0400009F }, { -35.0400009F, -35.0400009F } });
            sink->AddBezier({ { -35.0400009F, -35.0400009F }, { 108.502998F, 108.502998F }, { 108.502998F, 108.502998F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Triangle
        // - - - ShapeGroup: Shape RotationDegrees:-45
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_10()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 250.0F, 250.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 250.0F, 250.0F }, { -250.0F, 250.0F }, { -250.0F, 250.0F } });
            sink->AddBezier({ { -250.0F, 250.0F }, { -250.0F, -250.0F }, { -250.0F, -250.0F } });
            sink->AddBezier({ { -250.0F, -250.0F }, { 250.0F, 250.0F }, { 250.0F, 250.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_11()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 80.0F, -535.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 80.0F, -535.0F }, { 80.0F, 535.0F }, { 80.0F, 535.0F } });
            sink->AddBezier({ { 80.0F, 535.0F }, { 54.0F, 534.0F }, { 54.0F, 534.0F } });
            sink->AddBezier({ { 54.0F, 534.0F }, { 54.0F, -536.0F }, { 54.0F, -536.0F } });
            sink->AddBezier({ { 54.0F, -536.0F }, { 80.0F, -535.0F }, { 80.0F, -535.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_12()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 80.0F, -535.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 80.0F, -535.0F }, { 80.0F, 535.0F }, { 80.0F, 535.0F } });
            sink->AddBezier({ { 80.0F, 535.0F }, { -80.0F, 535.0F }, { -80.0F, 535.0F } });
            sink->AddBezier({ { -80.0F, 535.0F }, { -80.0F, -535.0F }, { -80.0F, -535.0F } });
            sink->AddBezier({ { -80.0F, -535.0F }, { 80.0F, -535.0F }, { 80.0F, -535.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_13()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 79.0F, -81.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 79.0F, -81.0F }, { 80.0F, 535.0F }, { 80.0F, 535.0F } });
            sink->AddBezier({ { 80.0F, 535.0F }, { -80.0F, 535.0F }, { -80.0F, 535.0F } });
            sink->AddBezier({ { -80.0F, 535.0F }, { -81.0F, -81.0F }, { -81.0F, -81.0F } });
            sink->AddBezier({ { -81.0F, -81.0F }, { 79.0F, -81.0F }, { 79.0F, -81.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - - Layer aggregator
        // - - - - - - Layer: Shape Layer 7
        // - - - - - Transforms: Blue_cntrl
        // - - - - Transforms: Null 29
        // - - - Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_14()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 499.217987F, 206.781998F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 499.217987F, 206.781998F }, { 706.0F, 0.0F }, { 706.0F, 0.0F } });
            sink->AddBezier({ { 706.0F, 0.0F }, { 499.217987F, -206.781998F }, { 499.217987F, -206.781998F } });
            sink->AddBezier({ { 499.217987F, -206.781998F }, { 499.217987F, -499.217987F }, { 499.217987F, -499.217987F } });
            sink->AddBezier({ { 499.217987F, -499.217987F }, { 206.783005F, -499.217987F }, { 206.783005F, -499.217987F } });
            sink->AddBezier({ { 206.783005F, -499.217987F }, { 0.0F, -706.0F }, { 0.0F, -706.0F } });
            sink->AddBezier({ { 0.0F, -706.0F }, { -206.783005F, -499.217987F }, { -206.783005F, -499.217987F } });
            sink->AddBezier({ { -206.783005F, -499.217987F }, { -499.217987F, -499.217987F }, { -499.217987F, -499.217987F } });
            sink->AddBezier({ { -499.217987F, -499.217987F }, { -499.217987F, -206.781998F }, { -499.217987F, -206.781998F } });
            sink->AddBezier({ { -499.217987F, -206.781998F }, { -706.0F, 0.0F }, { -706.0F, 0.0F } });
            sink->AddBezier({ { -706.0F, 0.0F }, { -499.217987F, 206.781998F }, { -499.217987F, 206.781998F } });
            sink->AddBezier({ { -499.217987F, 206.781998F }, { -499.217987F, 499.21701F }, { -499.217987F, 499.21701F } });
            sink->AddBezier({ { -499.217987F, 499.21701F }, { -206.783005F, 499.21701F }, { -206.783005F, 499.21701F } });
            sink->AddBezier({ { -206.783005F, 499.21701F }, { 0.0F, 706.0F }, { 0.0F, 706.0F } });
            sink->AddBezier({ { 0.0F, 706.0F }, { 206.783005F, 499.21701F }, { 206.783005F, 499.21701F } });
            sink->AddBezier({ { 206.783005F, 499.21701F }, { 499.217987F, 499.21701F }, { 499.217987F, 499.21701F } });
            sink->AddBezier({ { 499.217987F, 499.21701F }, { 499.217987F, 206.781998F }, { 499.217987F, 206.781998F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - - Layer aggregator
        // - - - - - - Layer: Shape Layer 7
        // - - - - - Transforms: Blue_cntrl
        // - - - - Transforms: Null 29
        // - - - Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_15()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 456.0F, 188.880997F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 456.0F, 188.880997F }, { 706.0F, 0.0F }, { 706.0F, 0.0F } });
            sink->AddBezier({ { 706.0F, 0.0F }, { 456.0F, -188.880997F }, { 456.0F, -188.880997F } });
            sink->AddBezier({ { 456.0F, -188.880997F }, { 499.217987F, -499.217987F }, { 499.217987F, -499.217987F } });
            sink->AddBezier({ { 499.217987F, -499.217987F }, { 188.880997F, -456.0F }, { 188.880997F, -456.0F } });
            sink->AddBezier({ { 188.880997F, -456.0F }, { 0.0F, -706.0F }, { 0.0F, -706.0F } });
            sink->AddBezier({ { 0.0F, -706.0F }, { -188.880997F, -456.0F }, { -188.880997F, -456.0F } });
            sink->AddBezier({ { -188.880997F, -456.0F }, { -499.217987F, -499.217987F }, { -499.217987F, -499.217987F } });
            sink->AddBezier({ { -499.217987F, -499.217987F }, { -456.0F, -188.880997F }, { -456.0F, -188.880997F } });
            sink->AddBezier({ { -456.0F, -188.880997F }, { -706.0F, 0.0F }, { -706.0F, 0.0F } });
            sink->AddBezier({ { -706.0F, 0.0F }, { -456.0F, 188.880997F }, { -456.0F, 188.880997F } });
            sink->AddBezier({ { -456.0F, 188.880997F }, { -499.217987F, 499.21701F }, { -499.217987F, 499.21701F } });
            sink->AddBezier({ { -499.217987F, 499.21701F }, { -188.880997F, 455.998993F }, { -188.880997F, 455.998993F } });
            sink->AddBezier({ { -188.880997F, 455.998993F }, { 0.0F, 706.0F }, { 0.0F, 706.0F } });
            sink->AddBezier({ { 0.0F, 706.0F }, { 188.880997F, 455.998993F }, { 188.880997F, 455.998993F } });
            sink->AddBezier({ { 188.880997F, 455.998993F }, { 499.217987F, 499.21701F }, { 499.217987F, 499.21701F } });
            sink->AddBezier({ { 499.217987F, 499.21701F }, { 456.0F, 188.880997F }, { 456.0F, 188.880997F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_16()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 706.0F, 292.43399F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 706.0F, 292.43399F }, { 706.0F, 0.0F }, { 706.0F, 0.0F } });
            sink->AddBezier({ { 706.0F, 0.0F }, { 706.0F, -292.43399F }, { 706.0F, -292.43399F } });
            sink->AddBezier({ { 706.0F, -292.43399F }, { 499.217987F, -499.217987F }, { 499.217987F, -499.217987F } });
            sink->AddBezier({ { 499.217987F, -499.217987F }, { 292.434998F, -706.0F }, { 292.434998F, -706.0F } });
            sink->AddBezier({ { 292.434998F, -706.0F }, { 0.0F, -706.0F }, { 0.0F, -706.0F } });
            sink->AddBezier({ { 0.0F, -706.0F }, { -292.434998F, -706.0F }, { -292.434998F, -706.0F } });
            sink->AddBezier({ { -292.434998F, -706.0F }, { -499.217987F, -499.217987F }, { -499.217987F, -499.217987F } });
            sink->AddBezier({ { -499.217987F, -499.217987F }, { -706.0F, -292.43399F }, { -706.0F, -292.43399F } });
            sink->AddBezier({ { -706.0F, -292.43399F }, { -706.0F, 0.0F }, { -706.0F, 0.0F } });
            sink->AddBezier({ { -706.0F, 0.0F }, { -706.0F, 292.43399F }, { -706.0F, 292.43399F } });
            sink->AddBezier({ { -706.0F, 292.43399F }, { -499.217987F, 499.21701F }, { -499.217987F, 499.21701F } });
            sink->AddBezier({ { -499.217987F, 499.21701F }, { -292.434998F, 706.0F }, { -292.434998F, 706.0F } });
            sink->AddBezier({ { -292.434998F, 706.0F }, { 0.0F, 706.0F }, { 0.0F, 706.0F } });
            sink->AddBezier({ { 0.0F, 706.0F }, { 292.434998F, 706.0F }, { 292.434998F, 706.0F } });
            sink->AddBezier({ { 292.434998F, 706.0F }, { 499.217987F, 499.21701F }, { 499.217987F, 499.21701F } });
            sink->AddBezier({ { 499.217987F, 499.21701F }, { 706.0F, 292.43399F }, { 706.0F, 292.43399F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - - Layer aggregator
        // - - - - - - Layer: Shape Layer 7
        // - - - - - Transforms: Blue_cntrl
        // - - - - Transforms: Null 29
        // - - - Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_17()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 1026.0F, 292.43399F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 1026.0F, 292.43399F }, { 1026.0F, 0.0F }, { 1026.0F, 0.0F } });
            sink->AddBezier({ { 1026.0F, 0.0F }, { 1026.0F, -292.43399F }, { 1026.0F, -292.43399F } });
            sink->AddBezier({ { 1026.0F, -292.43399F }, { 819.218018F, -499.217987F }, { 819.218018F, -499.217987F } });
            sink->AddBezier({ { 819.218018F, -499.217987F }, { 612.434998F, -706.0F }, { 612.434998F, -706.0F } });
            sink->AddBezier({ { 612.434998F, -706.0F }, { 0.0F, -706.0F }, { 0.0F, -706.0F } });
            sink->AddBezier({ { 0.0F, -706.0F }, { -612.434998F, -706.0F }, { -612.434998F, -706.0F } });
            sink->AddBezier({ { -612.434998F, -706.0F }, { -819.218018F, -499.217987F }, { -819.218018F, -499.217987F } });
            sink->AddBezier({ { -819.218018F, -499.217987F }, { -1026.0F, -292.43399F }, { -1026.0F, -292.43399F } });
            sink->AddBezier({ { -1026.0F, -292.43399F }, { -1026.0F, 0.0F }, { -1026.0F, 0.0F } });
            sink->AddBezier({ { -1026.0F, 0.0F }, { -1026.0F, 292.43399F }, { -1026.0F, 292.43399F } });
            sink->AddBezier({ { -1026.0F, 292.43399F }, { -819.218018F, 499.21701F }, { -819.218018F, 499.21701F } });
            sink->AddBezier({ { -819.218018F, 499.21701F }, { -612.434998F, 706.0F }, { -612.434998F, 706.0F } });
            sink->AddBezier({ { -612.434998F, 706.0F }, { 0.0F, 706.0F }, { 0.0F, 706.0F } });
            sink->AddBezier({ { 0.0F, 706.0F }, { 612.434998F, 706.0F }, { 612.434998F, 706.0F } });
            sink->AddBezier({ { 612.434998F, 706.0F }, { 819.218018F, 499.21701F }, { 819.218018F, 499.21701F } });
            sink->AddBezier({ { 819.218018F, 499.21701F }, { 1026.0F, 292.43399F }, { 1026.0F, 292.43399F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Shape Layer 6
        // - - - Transforms: BlueOctagon
        // - - Transforms: Shape Layer 6 Offset:<58.254, 53.492>
        winrt::com_ptr<CanvasGeometry> Geometry_18()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 706.0F, 292.43399F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 706.0F, -292.43399F });
            sink->AddLine({ 292.434998F, -706.0F });
            sink->AddLine({ -292.434998F, -706.0F });
            sink->AddLine({ -706.0F, -292.43399F });
            sink->AddLine({ -706.0F, 292.43399F });
            sink->AddLine({ -292.434998F, 706.0F });
            sink->AddLine({ 292.434998F, 706.0F });
            sink->AddLine({ 706.0F, 292.43399F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_19()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 779.575012F, -623.637024F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 779.575012F, -623.637024F }, { 779.575012F, 716.0F }, { 779.575012F, 716.0F } });
            sink->AddBezier({ { 779.575012F, 716.0F }, { -316.015991F, 716.0F }, { -316.015991F, 716.0F } });
            sink->AddBezier({ { -316.015991F, 716.0F }, { -316.015991F, -623.637024F }, { -316.015991F, -623.637024F } });
            sink->AddBezier({ { -316.015991F, -623.637024F }, { 779.575012F, -623.637024F }, { 779.575012F, -623.637024F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_20()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 1352.0F, 208.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 1352.0F, 208.0F }, { 1352.0F, 716.0F }, { 1352.0F, 716.0F } });
            sink->AddBezier({ { 1352.0F, 716.0F }, { -316.0F, 716.0F }, { -316.0F, 716.0F } });
            sink->AddBezier({ { -316.0F, 716.0F }, { -316.0F, 208.0F }, { -316.0F, 208.0F } });
            sink->AddBezier({ { -316.0F, 208.0F }, { 1352.0F, 208.0F }, { 1352.0F, 208.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - - Layer: Shape Layer 8
        // - - - - Transforms: BlueOctagon
        // - - - Transforms: Shape Layer 8 Offset:<58.254, 53.492>
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_21()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 1352.0F, -1008.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 1352.0F, -1008.0F }, { 1352.0F, 716.0F }, { 1352.0F, 716.0F } });
            sink->AddBezier({ { 1352.0F, 716.0F }, { -316.0F, 716.0F }, { -316.0F, 716.0F } });
            sink->AddBezier({ { -316.0F, 716.0F }, { -316.0F, -1008.0F }, { -316.0F, -1008.0F } });
            sink->AddBezier({ { -316.0F, -1008.0F }, { 1352.0F, -1008.0F }, { 1352.0F, -1008.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Shape Layer 7
        // - - - Transforms: Blue_cntrl
        // - - Transforms: Null 29
        // - Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        // Color
        ColorKeyFrameAnimation ColorAnimation_AlmostBlack_FF001623_to_AlmostGainsboro_FFD8DBD6()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0xFF, 0x00, 0x16, 0x23 }, _holdThenStepEasingFunction);
            // AlmostGainsboro_FFD8DBD6
            result.InsertKeyFrame(0.073170729F, { 0xFF, 0xD8, 0xDB, 0xD6 }, _holdThenStepEasingFunction);
            // AlmostCoral_FFFF7060
            result.InsertKeyFrame(0.219512194F, { 0xFF, 0xFF, 0x70, 0x60 }, _holdThenStepEasingFunction);
            // AlmostGainsboro_FFD8DBD6
            result.InsertKeyFrame(0.365853667F, { 0xFF, 0xD8, 0xDB, 0xD6 }, _holdThenStepEasingFunction);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Small_triangle
        // - Transforms: Small_triangle Offset:<-50, 0>
        // Color
        ColorKeyFrameAnimation ColorAnimation_AlmostCoral_FFFF7060_to_AlmostBlack_FF001623()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0xFF, 0xFF, 0x70, 0x60 }, StepThenHoldEasingFunction());
            // AlmostCoral_FFFF7060
            result.InsertKeyFrame(0.341463417F, { 0xFF, 0xFF, 0x70, 0x60 }, _holdThenStepEasingFunction);
            // AlmostBlack_FF001623
            result.InsertKeyFrame(0.585365832F, { 0xFF, 0x00, 0x16, 0x23 }, _holdThenStepEasingFunction);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Small_triangle
        // - Transforms: Small_triangle Offset:<-50, 0>
        // Color
        ColorKeyFrameAnimation ColorAnimation_AlmostCoral_FFFF7060_to_AlmostGainsboro_FFD8DBD6()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0xFF, 0xFF, 0x70, 0x60 }, _stepThenHoldEasingFunction);
            // AlmostCoral_FFFF7060
            result.InsertKeyFrame(0.341463417F, { 0xFF, 0xFF, 0x70, 0x60 }, _holdThenStepEasingFunction);
            // AlmostGainsboro_FFD8DBD6
            result.InsertKeyFrame(0.585365832F, { 0xFF, 0xD8, 0xDB, 0xD6 }, _holdThenStepEasingFunction);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Shape Layer 7
        // - - - Transforms: Blue_cntrl
        // - - Transforms: Null 29
        // - Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        // Color
        ColorKeyFrameAnimation ColorAnimation_AlmostLightSalmon_FFFFC17A_to_AlmostBlack_FF001623()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0xFF, 0xFF, 0xC1, 0x7A }, _holdThenStepEasingFunction);
            // AlmostCoral_FFFF7060
            result.InsertKeyFrame(0.073170729F, { 0xFF, 0xFF, 0x70, 0x60 }, _holdThenStepEasingFunction);
            // AlmostBlack_FF001623
            result.InsertKeyFrame(0.219512194F, { 0xFF, 0x00, 0x16, 0x23 }, _holdThenStepEasingFunction);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_solo 2
        // Color
        ColorKeyFrameAnimation ColorAnimation_TransparentAlmostLightSalmon_00FFC17A_to_AlmostLightSalmon_FFFFC17A()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0x00, 0xFF, 0xC1, 0x7A }, _stepThenHoldEasingFunction);
            // TransparentAlmostLightSalmon_00FFC17A
            result.InsertKeyFrame(0.865853667F, { 0x00, 0xFF, 0xC1, 0x7A }, _holdThenStepEasingFunction);
            // AlmostLightSalmon_FFFFC17A
            result.InsertKeyFrame(0.878048778F, { 0xFF, 0xFF, 0xC1, 0x7A }, _cubicBezierEasingFunction_0);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Shape Layer 7
        // - - Transforms: Blue_cntrl
        // - Transforms: Null 29
        // Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        CompositionColorBrush AnimatedColorBrush_AlmostBlack_FF001623_to_AlmostGainsboro_FFD8DBD6()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_AlmostBlack_FF001623_to_AlmostGainsboro_FFD8DBD6(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Small_triangle
        // Transforms: Small_triangle Offset:<-50, 0>
        CompositionColorBrush AnimatedColorBrush_AlmostCoral_FFFF7060_to_AlmostBlack_FF001623()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_AlmostCoral_FFFF7060_to_AlmostBlack_FF001623(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Small_triangle
        // Transforms: Small_triangle Offset:<-50, 0>
        CompositionColorBrush AnimatedColorBrush_AlmostCoral_FFFF7060_to_AlmostGainsboro_FFD8DBD6()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_AlmostCoral_FFFF7060_to_AlmostGainsboro_FFD8DBD6(), _rootProgress);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Shape Layer 7
        // - - Transforms: Blue_cntrl
        // - Transforms: Null 29
        // Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        CompositionColorBrush AnimatedColorBrush_AlmostLightSalmon_FFFFC17A_to_AlmostBlack_FF001623()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_AlmostLightSalmon_FFFFC17A_to_AlmostBlack_FF001623(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_solo 2
        CompositionColorBrush AnimatedColorBrush_TransparentAlmostLightSalmon_00FFC17A_to_AlmostLightSalmon_FFFFC17A()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_TransparentAlmostLightSalmon_00FFC17A_to_AlmostLightSalmon_FFFFC17A(), _rootProgress);
            return result;
        }

        CompositionColorBrush ColorBrush_AlmostBlack_FF001623()
        {
            return _colorBrush_AlmostBlack_FF001623 = _c.CreateColorBrush({ 0xFF, 0x00, 0x16, 0x23 });
        }

        // - Layer aggregator
        // Layer: BG 2
        CompositionColorBrush ColorBrush_AlmostBlack_FF001626()
        {
            return _c.CreateColorBrush({ 0xFF, 0x00, 0x16, 0x26 });
        }

        CompositionColorBrush ColorBrush_AlmostCoral_FFFF7060()
        {
            return _colorBrush_AlmostCoral_FFFF7060 = _c.CreateColorBrush({ 0xFF, 0xFF, 0x70, 0x60 });
        }

        CompositionColorBrush ColorBrush_AlmostGainsboro_FFD8DBD6()
        {
            return _colorBrush_AlmostGainsboro_FFD8DBD6 = _c.CreateColorBrush({ 0xFF, 0xD8, 0xDB, 0xD6 });
        }

        CompositionColorBrush ColorBrush_AlmostLightSalmon_FFFFC17A()
        {
            return _colorBrush_AlmostLightSalmon_FFFFC17A = _c.CreateColorBrush({ 0xFF, 0xFF, 0xC1, 0x7A });
        }

        // - - Layer aggregator
        // - Layer: Smear_rect
        // SolidLayerRectangle
        CompositionColorBrush ColorBrush_AlmostLightSalmon_FFFFC37A()
        {
            return _c.CreateColorBrush({ 0xFF, 0xFF, 0xC3, 0x7A });
        }

        // - Layer aggregator
        // Layer: BG 3
        CompositionColorBrush ColorBrush_AlmostSalmon_FFFF7063()
        {
            return _c.CreateColorBrush({ 0xFF, 0xFF, 0x70, 0x63 });
        }

        // - - Layer aggregator
        // - Layer: Long_bar 2
        // Transforms: Long_bar 2
        CompositionColorBrush ColorBrush_Black()
        {
            return _c.CreateColorBrush({ 0xFF, 0x00, 0x00, 0x00 });
        }

        // - - Layer aggregator
        // - Layer: Long_bar 2
        // Transforms: Long_bar 2
        CompositionColorBrush ColorBrush_White()
        {
            return _c.CreateColorBrush({ 0xFF, 0xFF, 0xFF, 0xFF });
        }

        // Layer aggregator
        // Layer: Small_triangle
        CompositionContainerShape ContainerShape_00()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: Small_triangle Offset:<-50, 0>
            result.Shapes().Append(SpriteShape_03());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_128p5_to_127(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_00(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_03(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: hexagon
        CompositionContainerShape ContainerShape_01()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: hexagon
            result.Shapes().Append(SpriteShape_04());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_0(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_02(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_04(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Circle_small
        CompositionContainerShape ContainerShape_02()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: Circle_control
            result.Shapes().Append(SpriteShape_05());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_1(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_04(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_05(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Circle_Big
        CompositionContainerShape ContainerShape_03()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_04());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_06(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_Big
        CompositionContainerShape ContainerShape_04()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 3.0F, 122.0F });
            // ShapeGroup: Ellipse 1 Offset:<3, 122>
            result.Shapes().Append(SpriteShape_06());
            StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1_to_0p66(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1_to_0p66, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_05(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Triangle
        CompositionContainerShape ContainerShape_05()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // ShapeGroup: Shape RotationDegrees:-45
            result.Shapes().Append(SpriteShape_08());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_45(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_07(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", _shapeVisibilityAnimation_02, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Long_bar
        CompositionContainerShape ContainerShape_06()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: Long_bar
            result.Shapes().Append(SpriteShape_09());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_04, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_07(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Long_bar 2
        CompositionContainerShape ContainerShape_07()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: Long_bar 2
            result.Shapes().Append(SpriteShape_10());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_04, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_08(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Smear_rect
        CompositionContainerShape ContainerShape_08()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // SolidLayerRectangle
            result.Shapes().Append(SpriteShape_11());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_09(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Shape Layer 7
        CompositionContainerShape ContainerShape_09()
        {
            const auto result = _c.CreateContainerShape();
            // Transforms: Blue_cntrl
            result.Shapes().Append(ContainerShape_10());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_45, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_07, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_11(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 7
        // Transforms for Blue_cntrl
        CompositionContainerShape ContainerShape_10()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 50.0F, 50.0F });
            result.RotationAngleInDegrees(270.0F);
            result.Scale({ 0.699999988F, 0.699999988F });
            // Transforms: Null 29
            result.Shapes().Append(ContainerShape_11());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_13(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Shape Layer 7
        // Transforms: Blue_cntrl
        // Transforms for Null 29
        CompositionContainerShape ContainerShape_11()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 50.0F, 50.0F });
            result.RotationAngleInDegrees(90.0F);
            result.Scale({ 0.150000006F, 0.150000006F });
            // Transforms: Shape Layer 7 Offset:<34.725, 81.275>
            result.Shapes().Append(SpriteShape_13());
            result.StartAnimation(L"Offset", OffsetVector2Animation_12());
            const auto controller = result.TryGetAnimationController(L"Offset");
            controller.Pause();
            BindProperty(controller, L"Progress", L"(_.Progress*0.8723404)+0.1276596", L"_", _root);
            return result;
        }

        // Layer aggregator
        // Layer: Shape Layer 6
        CompositionContainerShape ContainerShape_12()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: BlueOctagon
            result.Shapes().Append(ContainerShape_13());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_m45(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_15(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_12(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 6
        // Transforms for BlueOctagon
        CompositionContainerShape ContainerShape_13()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.104999997F, 0.104999997F });
            // Transforms: Shape Layer 6 Offset:<58.254, 53.492>
            result.Shapes().Append(SpriteShape_14());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_14(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Shape Layer 8
        CompositionContainerShape ContainerShape_14()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: BlueOctagon
            result.Shapes().Append(ContainerShape_15());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_m45, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_15, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_13(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 8
        // Transforms for BlueOctagon
        CompositionContainerShape ContainerShape_15()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.104999997F, 0.104999997F });
            // Transforms: Shape Layer 8 Offset:<58.254, 53.492>
            result.Shapes().Append(SpriteShape_15());
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_14, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Shape Layer 9
        CompositionContainerShape ContainerShape_16()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: BlueOctagon
            result.Shapes().Append(ContainerShape_17());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_m45, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_15, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_14(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 9
        // Transforms for BlueOctagon
        CompositionContainerShape ContainerShape_17()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.104999997F, 0.104999997F });
            // Transforms: Shape Layer 9 Offset:<58.254, 53.492>
            result.Shapes().Append(SpriteShape_16());
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_14, _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle_Big
        // ShapeGroup: Ellipse 1 Offset:<3, 122>
        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_0_0()
        {
            const auto result = _c.CreateEllipseGeometry();
            result.Radius({ 0.0F, 0.0F });
            StartProgressBoundAnimation(result, L"Radius", RadiusVector2Animation_0(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_solo 2
        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_0_1()
        {
            const auto result = _c.CreateEllipseGeometry();
            result.Radius({ 0.0F, 0.0F });
            StartProgressBoundAnimation(result, L"Radius", RadiusVector2Animation_1(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Shape Layer 9
        // - Transforms: BlueOctagon
        // Transforms: Shape Layer 9 Offset:<58.254, 53.492>
        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_840p73()
        {
            const auto result = _c.CreateEllipseGeometry();
            result.Radius({ 840.72998F, 840.72998F });
            return result;
        }

        CompositionPath Path_0()
        {
            const auto result = _path_0 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_01()));
            return result;
        }

        CompositionPath Path_1()
        {
            const auto result = _path_1 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_02()));
            return result;
        }

        CompositionPath Path_2()
        {
            const auto result = _path_2 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_04()));
            return result;
        }

        CompositionPath Path_3()
        {
            const auto result = _path_3 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_06()));
            return result;
        }

        CompositionPath Path_4()
        {
            const auto result = _path_4 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_09()));
            return result;
        }

        CompositionPath Path_5()
        {
            const auto result = _path_5 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_11()));
            return result;
        }

        CompositionPath Path_6()
        {
            const auto result = _path_6 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_12()));
            return result;
        }

        CompositionPath Path_7()
        {
            const auto result = _path_7 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_16()));
            return result;
        }

        CompositionPath Path_8()
        {
            const auto result = _path_8 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_19()));
            return result;
        }

        CompositionPath Path_9()
        {
            const auto result = _path_9 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_20()));
            return result;
        }

        // - - Layer aggregator
        // - Layer: Small_triangle
        // Transforms: Small_triangle Offset:<-50, 0>
        CompositionPathGeometry PathGeometry_0()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_00())));
        }

        // - - Layer aggregator
        // - Layer: hexagon
        // Transforms: hexagon
        CompositionPathGeometry PathGeometry_1()
        {
            const auto result = _c.CreatePathGeometry();
            StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_0(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_small
        // Transforms: Circle_control
        CompositionPathGeometry PathGeometry_2()
        {
            const auto result = _c.CreatePathGeometry();
            StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_1(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Btn_rectangle
        CompositionPathGeometry PathGeometry_3()
        {
            const auto result = _c.CreatePathGeometry();
            StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_2(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Triangle
        // ShapeGroup: Shape RotationDegrees:-45
        CompositionPathGeometry PathGeometry_4()
        {
            const auto result = _c.CreatePathGeometry();
            StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_3(), _rootProgress);
            return result;
        }

        CompositionPathGeometry PathGeometry_5()
        {
            const auto result = _pathGeometry_5 = _c.CreatePathGeometry();
            StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_4(), _rootProgress);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Shape Layer 7
        // - - Transforms: Blue_cntrl
        // - Transforms: Null 29
        // Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        CompositionPathGeometry PathGeometry_6()
        {
            const auto result = _c.CreatePathGeometry();
            StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_5(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Shape Layer 6
        // - Transforms: BlueOctagon
        // Transforms: Shape Layer 6 Offset:<58.254, 53.492>
        CompositionPathGeometry PathGeometry_7()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_18())));
        }

        // - - - Layer aggregator
        // - - Layer: Shape Layer 8
        // - Transforms: BlueOctagon
        // Transforms: Shape Layer 8 Offset:<58.254, 53.492>
        CompositionPathGeometry PathGeometry_8()
        {
            const auto result = _c.CreatePathGeometry();
            StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_6(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Smear_rect
        // SolidLayerRectangle
        // SolidLayerRectangle.RectangleGeometry
        CompositionRectangleGeometry Rectangle_1920x1080()
        {
            const auto result = _c.CreateRectangleGeometry();
            result.Size({ 1920.0F, 1080.0F });
            return result;
        }

        // Rectangle Path 1.RectangleGeometry
        CompositionRectangleGeometry Rectangle_2024p742x1181p836()
        {
            const auto result = _rectangle_2024p742x1181p836 = _c.CreateRectangleGeometry();
            result.Offset({ -1012.37097F, -590.91803F });
            result.Size({ 2024.74194F, 1181.83606F });
            return result;
        }

        // Layer aggregator
        // Rectangle Path 1
        CompositionSpriteShape SpriteShape_00()
        {
            // Offset:<961.371, 536.918>
            const auto result = CreateSpriteShape(Rectangle_2024p742x1181p836(), { 1.0F, 0.0F, 0.0F, 1.0F, 961.370972F, 536.91803F }, ColorBrush_AlmostLightSalmon_FFFFC17A());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_00(), RootProgress());
            return result;
        }

        // Layer aggregator
        // Rectangle Path 1
        CompositionSpriteShape SpriteShape_01()
        {
            // Offset:<961.371, 536.918>
            const auto result = CreateSpriteShape(_rectangle_2024p742x1181p836, { 1.0F, 0.0F, 0.0F, 1.0F, 961.370972F, 536.91803F }, ColorBrush_AlmostSalmon_FFFF7063());
            result.Scale({ 0.0F, 0.0F });
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_01(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Rectangle Path 1
        CompositionSpriteShape SpriteShape_02()
        {
            // Offset:<961.371, 536.918>
            const auto result = CreateSpriteShape(_rectangle_2024p742x1181p836, { 1.0F, 0.0F, 0.0F, 1.0F, 961.370972F, 536.91803F }, ColorBrush_AlmostBlack_FF001626());
            result.Scale({ 0.0F, 0.0F });
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_02(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Small_triangle
        // Path 1
        CompositionSpriteShape SpriteShape_03()
        {
            // Offset:<-50, 0>
            const auto result = CreateSpriteShape(PathGeometry_0(), { 1.0F, 0.0F, 0.0F, 1.0F, -50.0F, 0.0F }, AnimatedColorBrush_AlmostCoral_FFFF7060_to_AlmostBlack_FF001623());
            result.StrokeBrush(AnimatedColorBrush_AlmostCoral_FFFF7060_to_AlmostGainsboro_FFD8DBD6());
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - Layer aggregator
        // Layer: hexagon
        // Path 1
        CompositionSpriteShape SpriteShape_04()
        {
            const auto result = _c.CreateSpriteShape(PathGeometry_1());
            result.CenterPoint({ -87.7080002F, 159.526001F });
            result.FillBrush(ColorBrush_AlmostBlack_FF001623());
            result.StrokeBrush(ColorBrush_AlmostCoral_FFFF7060());
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_30_to_30(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_01(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_small
        // Path 1
        CompositionSpriteShape SpriteShape_05()
        {
            const auto result = _c.CreateSpriteShape(PathGeometry_2());
            result.FillBrush(_colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(ColorBrush_AlmostGainsboro_FFD8DBD6());
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_03(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_Big
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_06()
        {
            // Offset:<3, 122>
            const auto result = CreateSpriteShape(Ellipse_0_0(), { 1.0F, 0.0F, 0.0F, 1.0F, 3.0F, 122.0F }, _colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostLightSalmon_FFFFC17A);
            result.StrokeThickness(8.0F);
            return result;
        }

        // Layer aggregator
        // Path 1
        CompositionSpriteShape SpriteShape_07()
        {
            const auto result = _c.CreateSpriteShape(PathGeometry_3());
            result.Scale({ 0.0F, 0.0F });
            result.FillBrush(_colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostLightSalmon_FFFFC17A);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_06(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", _shapeVisibilityAnimation_03, _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Triangle
        // Path 1
        CompositionSpriteShape SpriteShape_08()
        {
            // Rotation:-44.99999927302816 degrees, Scale:<0.99999994, 0.99999994>
            const auto result = CreateSpriteShape(PathGeometry_4(), { 0.707106769F, -0.707106769F, 0.707106769F, 0.707106769F, 0.0F, 0.0F }, _colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostLightSalmon_FFFFC17A);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - Layer aggregator
        // Layer: Long_bar
        // Path 1
        CompositionSpriteShape SpriteShape_09()
        {
            const auto result = _c.CreateSpriteShape(PathGeometry_5());
            result.FillBrush(_colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostCoral_FFFF7060);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_08(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Long_bar 2
        // Path 1
        CompositionSpriteShape SpriteShape_10()
        {
            const auto result = _c.CreateSpriteShape(_pathGeometry_5);
            result.FillBrush(ColorBrush_Black());
            result.StrokeBrush(ColorBrush_White());
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_09(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Smear_rect
        // SolidLayerRectangle
        CompositionSpriteShape SpriteShape_11()
        {
            const auto result = _c.CreateSpriteShape(Rectangle_1920x1080());
            result.CenterPoint({ 960.0F, 0.0F });
            result.FillBrush(ColorBrush_AlmostLightSalmon_FFFFC37A());
            StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_0p081_to_0p081(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_0p09_to_0p569(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_10(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_12()
        {
            const auto result = _c.CreateSpriteShape(Ellipse_0_1());
            result.Scale({ 0.0F, 0.0F });
            result.FillBrush(AnimatedColorBrush_TransparentAlmostLightSalmon_00FFC17A_to_AlmostLightSalmon_FFFFC17A());
            result.StrokeBrush(_colorBrush_AlmostLightSalmon_FFFFC17A);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_11(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_10(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Shape Layer 7
        // - Transforms: Blue_cntrl
        // Transforms: Null 29
        // Path 1
        CompositionSpriteShape SpriteShape_13()
        {
            // Offset:<34.725, 81.275>
            const auto result = CreateSpriteShape(PathGeometry_6(), { 1.0F, 0.0F, 0.0F, 1.0F, 34.7249985F, 81.2750015F }, AnimatedColorBrush_AlmostLightSalmon_FFFFC17A_to_AlmostBlack_FF001623());
            result.StrokeBrush(AnimatedColorBrush_AlmostBlack_FF001623_to_AlmostGainsboro_FFD8DBD6());
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(80.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Shape Layer 6
        // Transforms: BlueOctagon
        // Path 1
        CompositionSpriteShape SpriteShape_14()
        {
            // Offset:<58.254, 53.492>
            const auto result = CreateSpriteShape(PathGeometry_7(), { 1.0F, 0.0F, 0.0F, 1.0F, 58.2540016F, 53.4920006F }, _colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostGainsboro_FFD8DBD6);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(80.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Shape Layer 8
        // Transforms: BlueOctagon
        // Path 1
        CompositionSpriteShape SpriteShape_15()
        {
            // Offset:<58.254, 53.492>
            const auto result = CreateSpriteShape(PathGeometry_8(), { 1.0F, 0.0F, 0.0F, 1.0F, 58.2540016F, 53.4920006F }, _colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostGainsboro_FFD8DBD6);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(80.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Shape Layer 9
        // Transforms: BlueOctagon
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_16()
        {
            // Offset:<582.55505, -95.660995>
            const auto result = CreateSpriteShape(Ellipse_840p73(), { 1.0F, 0.0F, 0.0F, 1.0F, 582.555054F, -95.6609955F }, _colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostGainsboro_FFD8DBD6);
            result.StrokeThickness(80.0F);
            return result;
        }

        // The root of the composition.
        ContainerVisual Root()
        {
            const auto result = _root = _c.CreateContainerVisual();
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"Progress", 0.0F);
            propertySet.InsertScalar(L"t0", 0.0F);
            propertySet.InsertScalar(L"t1", 0.0F);
            propertySet.InsertScalar(L"t2", 0.0F);
            propertySet.InsertScalar(L"t3", 0.0F);
            propertySet.InsertScalar(L"t4", 0.0F);
            // Layer aggregator
            result.Children().InsertAtTop(ShapeVisual_0());
            StartProgressBoundAnimation(propertySet, L"t0", t0ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t1", t1ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t2", t2ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t3", t3ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t4", t4ScalarAnimation_0_to_1(), _rootProgress);
            return result;
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_0()
        {
            return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.833000004F, 0.833000004F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_1()
        {
            return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction({ 0.810000002F, 0.0F }, { 0.666999996F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_2()
        {
            return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction({ 0.0F, 0.0F }, { 0.0F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_3()
        {
            return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.666999996F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_4()
        {
            return _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 1.0F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_5()
        {
            return _cubicBezierEasingFunction_5 = _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.0F }, { 0.666999996F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_6()
        {
            return _cubicBezierEasingFunction_6 = _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.333000004F }, { 0.666999996F, 0.666999996F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_7()
        {
            return _cubicBezierEasingFunction_7 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.0F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_8()
        {
            return _cubicBezierEasingFunction_8 = _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.833000004F, 0.833000004F });
        }

        ExpressionAnimation RootProgress()
        {
            const auto result = _rootProgress = _c.CreateExpressionAnimation(L"_.Progress");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: hexagon
        // - Transforms: hexagon
        // Path
        PathKeyFrameAnimation PathKeyFrameAnimation_0()
        {
            const auto result = CreatePathKeyFrameAnimation(0.0F, Path_0(), _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, _path_0, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.51219511F, Path_1(), CubicBezierEasingFunction_2());
            result.InsertKeyFrame(0.585365832F, _path_1, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.634146333F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_03())), CubicBezierEasingFunction_3());
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle_small
        // - Transforms: Circle_control
        // Path
        PathKeyFrameAnimation PathKeyFrameAnimation_1()
        {
            const auto result = CreatePathKeyFrameAnimation(0.0F, Path_2(), _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, _path_2, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.573170722F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_05())), CubicBezierEasingFunction_4());
            return result;
        }

        // - - Layer aggregator
        // - Layer: Btn_rectangle
        // Path
        PathKeyFrameAnimation PathKeyFrameAnimation_2()
        {
            const auto result = CreatePathKeyFrameAnimation(0.0F, Path_3(), _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.365853667F, _path_3, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.439024389F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_07())), _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.51219511F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_08())), _cubicBezierEasingFunction_2);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Triangle
        // - ShapeGroup: Shape RotationDegrees:-45
        // Path
        PathKeyFrameAnimation PathKeyFrameAnimation_3()
        {
            const auto result = CreatePathKeyFrameAnimation(0.0F, Path_4(), _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.219512194F, _path_4, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.292682916F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_10())), _cubicBezierEasingFunction_2);
            return result;
        }

        // Path
        PathKeyFrameAnimation PathKeyFrameAnimation_4()
        {
            const auto result = CreatePathKeyFrameAnimation(0.0F, Path_5(), _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.292682916F, _path_5, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.365853667F, Path_6(), _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.951219499F, _path_6, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(1.0F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_13())), _cubicBezierEasingFunction_0);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Shape Layer 7
        // - - - Transforms: Blue_cntrl
        // - - Transforms: Null 29
        // - Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        // Path
        PathKeyFrameAnimation PathKeyFrameAnimation_5()
        {
            const auto result = CreatePathKeyFrameAnimation(0.0F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_14())), _c.CreateCubicBezierEasingFunction({ 0.865999997F, 0.0F }, { 1.0F, 1.0F }));
            result.InsertKeyFrame(0.024390243F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_15())), _cubicBezierEasingFunction_7);
            result.InsertKeyFrame(0.073170729F, Path_7(), _cubicBezierEasingFunction_8);
            result.InsertKeyFrame(0.219512194F, _path_7, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.353658527F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_17())), _cubicBezierEasingFunction_4);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Shape Layer 8
        // - - Transforms: BlueOctagon
        // - Transforms: Shape Layer 8 Offset:<58.254, 53.492>
        // Path
        PathKeyFrameAnimation PathKeyFrameAnimation_6()
        {
            const auto result = CreatePathKeyFrameAnimation(0.0F, Path_8(), _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, _path_8, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.51219511F, Path_9(), _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.585365832F, _path_9, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.833000004F, 0.833000004F }));
            result.InsertKeyFrame(0.719512224F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_21())), _cubicBezierEasingFunction_7);
            return result;
        }

        // - Layer aggregator
        // Layer: hexagon
        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_0()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.621951222F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.695121944F, 9.15799999F, _c.CreateCubicBezierEasingFunction({ 0.226999998F, 0.0F }, { 0.0F, 0.814999998F }));
            result.InsertKeyFrame(0.804878056F, 30.0F, _c.CreateCubicBezierEasingFunction({ 0.187000006F, 0.023F }, { 0.115999997F, 1.0F }));
            result.InsertKeyFrame(0.914634168F, 30.0F, _c.CreateCubicBezierEasingFunction({ 0.298000008F, 0.0F }, { 0.666999996F, 1.0F }));
            result.InsertKeyFrame(0.98780489F, 0.0F, _cubicBezierEasingFunction_1);
            return result;
        }

        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_1()
        {
            const auto result = _rotationAngleInDegreesScalarAnimation_0_to_0_1 = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.51219511F, 6.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.118000001F }, { 0.97299999F, 0.861000001F }));
            result.InsertKeyFrame(0.585365832F, 11.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.980000019F, 1.0F }));
            result.InsertKeyFrame(0.804878056F, 0.0F, _c.CreateCubicBezierEasingFunction({ 0.0199999996F, 0.0F }, { 0.0F, 1.0F }));
            return result;
        }

        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_45()
        {
            const auto result = _rotationAngleInDegreesScalarAnimation_0_to_45 = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.219512194F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.292682916F, 45.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.207000002F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_m45()
        {
            const auto result = _rotationAngleInDegreesScalarAnimation_0_to_m45 = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.365853667F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.439024389F, 180.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.238999993F }, { 0.959999979F, 0.843999982F }));
            result.InsertKeyFrame(0.585365832F, 180.0F, _c.CreateCubicBezierEasingFunction({ 0.296000004F, 0.296000004F }, { 0.666999996F, 0.666999996F }));
            result.InsertKeyFrame(0.658536613F, -45.0F, _c.CreateCubicBezierEasingFunction({ 0.0399999991F, 0.245000005F }, { 0.959999979F, 1.0F }));
            return result;
        }

        // - - Layer aggregator
        // - Layer: hexagon
        // Transforms: hexagon
        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_30_to_30()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 30.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.585365832F, 30.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.597561002F, -21.1669998F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.609756112F, -3.92199993F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.634146333F, 30.0F, _cubicBezierEasingFunction_0);
            return result;
        }

        // - Layer aggregator
        // Layer: Small_triangle
        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_128p5_to_127()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 128.5F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, 128.5F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.48780489F, 74.5F, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.666999996F, 1.0F }));
            result.InsertKeyFrame(0.573170722F, 0.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.214000002F }, { 0.966000021F, 0.948000014F }));
            result.InsertKeyFrame(0.804878056F, 112.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0939999968F }, { 0.986999989F, 0.967000008F }));
            result.InsertKeyFrame(0.902438998F, 112.0F, CubicBezierEasingFunction_0());
            result.InsertKeyFrame(0.939024389F, 127.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.939999998F, 1.0F }));
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScalarAnimation_1_to_0p66()
        {
            const auto result = _scalarAnimation_1_to_0p66 = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.890243888F, 1.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.98780489F, 0.790000021F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.97299999F, 1.0F }));
            result.InsertKeyFrame(1.0F, 0.660000026F, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.833000004F, 1.0F }));
            return result;
        }

        // - - Layer aggregator
        // - Layer: Smear_rect
        // SolidLayerRectangle
        // Scale
        ScalarKeyFrameAnimation ScaleXScalarAnimation_0p081_to_0p081()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.081249997F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.878048778F, 0.081249997F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.951219499F, 0.081249997F, _cubicBezierEasingFunction_5);
            result.InsertKeyFrame(1.0F, 0.081249997F, _cubicBezierEasingFunction_5);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Smear_rect
        // SolidLayerRectangle
        // Scale
        ScalarKeyFrameAnimation ScaleYScalarAnimation_0p09_to_0p569()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0900000036F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.878048778F, 0.0900000036F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.951219499F, 0.237540007F, _c.CreateCubicBezierEasingFunction({ 0.442000002F, 0.0F }, { 0.763999999F, 0.400999993F }));
            result.InsertKeyFrame(1.0F, 0.56852001F, _c.CreateCubicBezierEasingFunction({ 0.978999972F, 0.739000022F }, { 0.959999979F, 0.84799999F }));
            return result;
        }

        ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.451219529F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.48780486F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.585365891F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.597560942F, 1.0F, _cubicBezierEasingFunction_0);
            return result;
        }

        ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.597561002F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.609756052F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.609756112F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.621951163F, 1.0F, _cubicBezierEasingFunction_0);
            return result;
        }

        ScalarKeyFrameAnimation t2ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.597561061F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.609756052F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.621951222F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.634146273F, 1.0F, _cubicBezierEasingFunction_0);
            return result;
        }

        ScalarKeyFrameAnimation t3ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.585365891F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.804877996F, 1.0F, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.902439058F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.98780483F, 1.0F, _cubicBezierEasingFunction_1);
            return result;
        }

        ScalarKeyFrameAnimation t4ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.865853727F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.98780483F, 1.0F, _cubicBezierEasingFunction_5);
            return result;
        }

        // Layer aggregator
        ShapeVisual ShapeVisual_0()
        {
            const auto result = _c.CreateShapeVisual();
            result.Size({ 1920.0F, 1080.0F });
            const auto shapes = result.Shapes();
            // Layer: BG
            shapes.Append(SpriteShape_00());
            // Layer: BG 3
            shapes.Append(SpriteShape_01());
            // Layer: BG 2
            shapes.Append(SpriteShape_02());
            // Layer: Small_triangle
            shapes.Append(ContainerShape_00());
            // Layer: hexagon
            shapes.Append(ContainerShape_01());
            // Layer: Circle_small
            shapes.Append(ContainerShape_02());
            // Layer: Circle_Big
            shapes.Append(ContainerShape_03());
            // Layer: Btn_rectangle
            shapes.Append(SpriteShape_07());
            // Layer: Triangle
            shapes.Append(ContainerShape_05());
            // Layer: Long_bar
            shapes.Append(ContainerShape_06());
            // Layer: Long_bar 2
            shapes.Append(ContainerShape_07());
            // Layer: Smear_rect
            shapes.Append(ContainerShape_08());
            // Layer: Circle_solo 2
            shapes.Append(SpriteShape_12());
            // Layer: Shape Layer 7
            shapes.Append(ContainerShape_09());
            // Layer: Shape Layer 6
            shapes.Append(ContainerShape_12());
            // Layer: Shape Layer 8
            shapes.Append(ContainerShape_14());
            // Layer: Shape Layer 9
            shapes.Append(ContainerShape_16());
            return result;
        }

        StepEasingFunction HoldThenStepEasingFunction()
        {
            const auto result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
            result.IsFinalStepSingleFrame(true);
            return result;
        }

        StepEasingFunction StepThenHoldEasingFunction()
        {
            const auto result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
            result.IsInitialStepSingleFrame(true);
            return result;
        }

        // - Layer aggregator
        // Layer: Small_triangle
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_00()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 500.5F, 1076.0F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.365853667F, { 500.5F, 1076.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.439024389F, { 430.5F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.451219499F, { 382.359009F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertExpressionKeyFrame(0.48780486F, L"(Pow(1-_.t0,3)*Vector2(382.359,1076))+(3*Square(1-_.t0)*_.t0*Vector2(382.359,1076))+(3*(1-_.t0)*Square(_.t0)*Vector2(391.3793,1076))+(Pow(_.t0,3)*Vector2(387.5,1076))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.585365832F, { 387.5F, 1076.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.585365891F, { 367.5F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertExpressionKeyFrame(0.597560942F, L"(Pow(1-_.t0,3)*Vector2(367.5,1076))+(3*Square(1-_.t0)*_.t0*Vector2(361.1458,1076))+(3*(1-_.t0)*Square(_.t0)*Vector2(290.3446,1067.915))+(Pow(_.t0,3)*Vector2(283.202,1067.915))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.609756052F, L"(Pow(1-_.t1,3)*Vector2(283.202,1067.915))+(3*Square(1-_.t1)*_.t1*Vector2(197.4376,1067.915))+(3*(1-_.t1)*Square(_.t1)*Vector2(259.166,1067))+(Pow(_.t1,3)*Vector2(259.166,1067))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.609756112F, { 259.165985F, 1067.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.646341443F, { 191.436996F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.682926834F, { 154.723999F, 1072.50806F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.731707335F, { 134.044006F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.804878056F, { 126.5F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.914634168F, { 126.5F, 1076.0F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.666999996F, 0.666999996F }));
            result.InsertKeyFrame(0.98780489F, { 556.5F, 1076.0F }, CubicBezierEasingFunction_1());
            return result;
        }

        // - - Layer aggregator
        // - Layer: hexagon
        // Transforms: hexagon
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_01()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -660.291992F, -172.526001F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.585365832F, { -660.291992F, -172.526001F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.597561002F, { -242.292007F, -172.526001F }, _cubicBezierEasingFunction_0);
            result.InsertExpressionKeyFrame(0.609756052F, L"(Pow(1-_.t2,3)*Vector2(-242.292,-172.526))+(3*Square(1-_.t2)*_.t2*Vector2(-218.0033,-172.526))+(3*(1-_.t2)*Square(_.t2)*Vector2(-145.5887,-162.701))+(Pow(_.t2,3)*Vector2(-103.387,-162.701))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.621951163F, L"(Pow(1-_.t1,3)*Vector2(-103.387,-162.701))+(3*Square(1-_.t1)*_.t1*Vector2(-83.72858,-162.701))+(3*(1-_.t1)*Square(_.t1)*Vector2(-37.80243,-157.103))+(Pow(_.t1,3)*Vector2(-32.045,-157.103))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.634146273F, L"(Pow(1-_.t2,3)*Vector2(-32.045,-157.103))+(3*Square(1-_.t2)*_.t2*Vector2(-27.71596,-157.103))+(3*(1-_.t2)*Square(_.t2)*Vector2(-61.309,-157.103))+(Pow(_.t2,3)*Vector2(-61.309,-157.103))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.634146333F, { -61.3089981F, -157.102997F }, _stepThenHoldEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: hexagon
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_02()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 1791.10706F, 1075.5F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.621951222F, { 1791.10706F, 1075.5F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.634146333F, { 1798.10706F, 1075.5F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.914634168F, { 1798.10706F, 1075.5F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.98780489F, { 1406.10706F, 1075.5F }, _cubicBezierEasingFunction_1);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_small
        // Transforms: Circle_control
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_03()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -204.485992F, -890.875F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, { -204.485992F, -890.875F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.585365832F, { -204.485992F, 169.125F }, _c.CreateCubicBezierEasingFunction({ 0.949000001F, 0.0F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_04()
        {
            const auto result = _offsetVector2Animation_04 = CreateVector2KeyFrameAnimation(0.0F, { 657.0F, 842.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, { 657.0F, 842.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.51219511F, { 599.0F, 842.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.585365832F, { 557.0F, 842.0F }, _cubicBezierEasingFunction_4);
            result.InsertKeyFrame(0.804878056F, { 1039.0F, 842.0F }, _cubicBezierEasingFunction_2);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_Big
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_05()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 321.0F, 847.0F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.585365832F, { 321.0F, 847.0F }, _holdThenStepEasingFunction);
            result.InsertExpressionKeyFrame(0.804877996F, L"(Pow(1-_.t3,3)*Vector2(321,847))+(3*Square(1-_.t3)*_.t3*Vector2(380.3984,767.6546))+(3*(1-_.t3)*Square(_.t3)*Vector2(438,518))+(Pow(_.t3,3)*Vector2(438,518))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.804878056F, { 438.0F, 518.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.890243888F, { 438.0F, 518.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.951219499F, { 537.260986F, 518.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.98780489F, { 951.0F, 953.0F }, _cubicBezierEasingFunction_0);
            return result;
        }

        // - Layer aggregator
        // Layer: Btn_rectangle
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_06()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 820.0F, 1048.5F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.585365832F, { 820.0F, 1048.5F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.597561002F, { 1013.77502F, 1048.5F }, CubicBezierEasingFunction_5());
            result.InsertKeyFrame(0.804878056F, { 1502.0F, 1048.5F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.902438998F, { 1502.0F, 1048.5F }, CubicBezierEasingFunction_6());
            result.InsertExpressionKeyFrame(0.98780483F, L"(Pow(1-_.t3,3)*Vector2(1502,1048.5))+(3*Square(1-_.t3)*_.t3*Vector2(1502,1048.5))+(3*(1-_.t3)*Square(_.t3)*Vector2(1168.515,1048.5))+(Pow(_.t3,3)*Vector2(1113,1048.5))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.98780489F, { 1113.0F, 1048.5F }, _stepThenHoldEasingFunction);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_07()
        {
            const auto result = _offsetVector2Animation_07 = CreateVector2KeyFrameAnimation(0.0F, { 907.5F, 592.5F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.585365832F, { 907.5F, 592.5F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.804878056F, { 1291.5F, 592.5F }, CubicBezierEasingFunction_7());
            result.InsertKeyFrame(0.865853667F, { 1291.5F, 592.5F }, _cubicBezierEasingFunction_6);
            result.InsertExpressionKeyFrame(0.98780483F, L"(Pow(1-_.t4,3)*Vector2(1291.5,592.5))+(3*Square(1-_.t4)*_.t4*Vector2(1291.5,592.5))+(3*(1-_.t4)*Square(_.t4)*Vector2(1161.907,592.5))+(Pow(_.t4,3)*Vector2(1132.5,592.5))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.98780489F, { 1132.5F, 592.5F }, _stepThenHoldEasingFunction);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Long_bar
        // Transforms: Long_bar
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_08()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -80.0F, -302.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, { -80.0F, -302.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.51219511F, { -80.0F, -302.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.585365832F, { -80.0F, -295.0F }, CubicBezierEasingFunction_8());
            result.InsertKeyFrame(0.804878056F, { -80.0F, -302.0F }, _c.CreateCubicBezierEasingFunction({ 0.0F, 0.0F }, { 0.171000004F, 1.0F }));
            return result;
        }

        // - - Layer aggregator
        // - Layer: Long_bar 2
        // Transforms: Long_bar 2
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_09()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -80.0F, -302.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, { -80.0F, -302.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.51219511F, { -80.0F, -302.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.585365832F, { -80.0F, -295.0F }, _cubicBezierEasingFunction_8);
            result.InsertKeyFrame(0.804878056F, { -80.0F, -302.0F }, _cubicBezierEasingFunction_2);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Smear_rect
        // SolidLayerRectangle
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_10()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 0.0F, 0.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.951219499F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(1.0F, { 0.0F, 598.0F }, _c.CreateCubicBezierEasingFunction({ 0.0F, 0.0F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_solo 2
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_11()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 961.0F, 88.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.878048778F, { 961.0F, 88.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(1.0F, { 961.0F, 1080.0F }, _cubicBezierEasingFunction_8);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Shape Layer 7
        // - Transforms: Blue_cntrl
        // Transforms: Null 29
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_12()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 0.0F, 0.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.319148928F, { 0.0F, 0.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.446808517F, { 4.04099989F, 388.269012F }, _c.CreateCubicBezierEasingFunction({ 0.828000009F, 0.0F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // - - Layer aggregator
        // - Layer: Shape Layer 7
        // Transforms: Blue_cntrl
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_13()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 2.5F, -182.419998F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.073170729F, { 2.5F, -304.256012F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.5F, 1.0F }));
            result.InsertKeyFrame(0.219512194F, { 2.5F, -126.5F }, _cubicBezierEasingFunction_8);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_14()
        {
            const auto result = _offsetVector2Animation_14 = CreateVector2KeyFrameAnimation(0.0F, { -28.3169994F, -136.317001F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.646341443F, { -28.3169994F, -136.317001F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.731707335F, { -28.3169994F, -167.317001F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.804878056F, { -28.3169994F, -84.3170013F }, _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.0F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_15()
        {
            const auto result = _offsetVector2Animation_15 = CreateVector2KeyFrameAnimation(0.0F, { 1160.0F, 841.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.585365832F, { 1160.0F, 841.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.804878056F, { 1541.5F, 842.5F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.902438998F, { 1618.78796F, 842.5F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.98780489F, { 1252.70996F, 842.5F }, _cubicBezierEasingFunction_1);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Circle_Big
        // - ShapeGroup: Ellipse 1 Offset:<3, 122>
        // Ellipse Path 1.EllipseGeometry
        // Radius
        Vector2KeyFrameAnimation RadiusVector2Animation_0()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 40.0F, 40.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.585365832F, { 40.0F, 40.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.804878056F, { 435.0F, 435.0F }, _c.CreateCubicBezierEasingFunction({ 0.0F, 0.00499999989F }, { 0.0F, 1.0F }));
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_solo 2
        // Ellipse Path 1.EllipseGeometry
        // Radius
        Vector2KeyFrameAnimation RadiusVector2Animation_1()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 29.5F, 29.5F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.804878056F, { 29.5F, 29.5F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.878048778F, { 75.0F, 75.0F }, _c.CreateCubicBezierEasingFunction({ 0.0399999991F, 0.0F }, { 0.0F, 1.0F }));
            return result;
        }

        // - Layer aggregator
        // Layer: BG
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_00()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.073170729F, { 0.0F, 0.0F }, HoldThenStepEasingFunction());
            return result;
        }

        // - Layer aggregator
        // Layer: BG 3
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_01()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.073170729F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.219512194F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation ShapeVisibilityAnimation_02()
        {
            const auto result = _shapeVisibilityAnimation_02 = CreateVector2KeyFrameAnimation(0.219512194F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation ShapeVisibilityAnimation_03()
        {
            const auto result = _shapeVisibilityAnimation_03 = CreateVector2KeyFrameAnimation(0.365853667F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: hexagon
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_04()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.597561002F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_small
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_05()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.439024389F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.585365832F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_Big
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_06()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.585365832F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Long_bar
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_07()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.292682916F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.951219499F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Long_bar 2
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_08()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.951219499F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Smear_rect
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_09()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.878048778F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_solo 2
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_10()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.804878056F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 7
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_11()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.365853667F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 6
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_12()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.365853667F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.439024389F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 8
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_13()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.439024389F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.658536613F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 9
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_14()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.658536613F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        static IGeometrySource2D CanvasGeometryToIGeometrySource2D(winrt::com_ptr<CanvasGeometry> geo)
        {
            return geo.as<IGeometrySource2D>();
        }

    public:
        MotionCorpse_Jrcanest_AnimatedVisual_UAPv12(Compositor compositor)
            : _c{compositor}
            , _reusableExpressionAnimation(compositor.CreateExpressionAnimation())
        {
            winrt::check_hresult(D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, _d2dFactory.put()));
            const auto _ = Root();
        }

        void Close()
        {
            if (_root)
            {
                _root.Close();
            }
        }

        TimeSpan Duration() const
        {
            return TimeSpan{ c_durationTicks };
        }

        Visual RootVisual() const
        {
            return _root;
        }

        float2 Size() const
        {
            return { 1920.0F, 1080.0F };
        }

        static bool IsRuntimeCompatible()
        {
            return winrt::Windows::Foundation::Metadata::ApiInformation::IsApiContractPresent(L"Windows.Foundation.UniversalApiContract", 12);
        }
    };

    class MotionCorpse_Jrcanest_AnimatedVisual_UAPv11 : public winrt::implements<MotionCorpse_Jrcanest_AnimatedVisual_UAPv11,
            winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual,
            IClosable>
    {
        winrt::com_ptr<ID2D1Factory> _d2dFactory{ nullptr };
        static constexpr int64_t c_durationTicks{ 34166666L };
        Compositor const _c{ nullptr };
        ExpressionAnimation const _reusableExpressionAnimation{ nullptr };
        CompositionColorBrush _colorBrush_AlmostBlack_FF001623{ nullptr };
        CompositionColorBrush _colorBrush_AlmostCoral_FFFF7060{ nullptr };
        CompositionColorBrush _colorBrush_AlmostGainsboro_FFD8DBD6{ nullptr };
        CompositionColorBrush _colorBrush_AlmostLightSalmon_FFFFC17A{ nullptr };
        CompositionPath _path_0{ nullptr };
        CompositionPath _path_1{ nullptr };
        CompositionPath _path_2{ nullptr };
        CompositionPath _path_3{ nullptr };
        CompositionPath _path_4{ nullptr };
        CompositionPath _path_5{ nullptr };
        CompositionPath _path_6{ nullptr };
        CompositionPath _path_7{ nullptr };
        CompositionPath _path_8{ nullptr };
        CompositionPath _path_9{ nullptr };
        CompositionPathGeometry _pathGeometry_5{ nullptr };
        CompositionRoundedRectangleGeometry _roundedRectangle_2024p742x1181p836{ nullptr };
        ContainerVisual _root{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_0{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_1{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_2{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_3{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_4{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_5{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_6{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_7{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_8{ nullptr };
        ExpressionAnimation _rootProgress{ nullptr };
        ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_0_1{ nullptr };
        ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_45{ nullptr };
        ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_m45{ nullptr };
        ScalarKeyFrameAnimation _scalarAnimation_1_to_0p66{ nullptr };
        StepEasingFunction _holdThenStepEasingFunction{ nullptr };
        StepEasingFunction _stepThenHoldEasingFunction{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_04{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_07{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_14{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_15{ nullptr };
        Vector2KeyFrameAnimation _shapeVisibilityAnimation_02{ nullptr };
        Vector2KeyFrameAnimation _shapeVisibilityAnimation_03{ nullptr };

        static void StartProgressBoundAnimation(
            CompositionObject target,
            winrt::hstring animatedPropertyName,
            CompositionAnimation animation,
            ExpressionAnimation controllerProgressExpression)
        {
            target.StartAnimation(animatedPropertyName, animation);
            const auto controller = target.TryGetAnimationController(animatedPropertyName);
            controller.Pause();
            controller.StartAnimation(L"Progress", controllerProgressExpression);
        }

        void BindProperty(
            CompositionObject target,
            winrt::hstring animatedPropertyName,
            winrt::hstring expression,
            winrt::hstring referenceParameterName,
            CompositionObject referencedObject)
        {
            _reusableExpressionAnimation.ClearAllParameters();
            _reusableExpressionAnimation.Expression(expression);
            _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
            target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
        }

        ColorKeyFrameAnimation CreateColorKeyFrameAnimation(float initialProgress, Color initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateColorKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InterpolationColorSpace(CompositionColorSpace::Rgb);
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreatePathKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateScalarKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, float2 initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateVector2KeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, float3x2 transformMatrix, CompositionBrush fillBrush)
        {
            const auto result = _c.CreateSpriteShape(geometry);
            result.TransformMatrix(transformMatrix);
            result.FillBrush(fillBrush);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Small_triangle
        // - - Transforms: Small_triangle Offset:<-50, 0>
        winrt::com_ptr<CanvasGeometry> Geometry_00()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -50.0F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 0.0F, -62.0F });
            sink->AddLine({ 50.0F, 0.0F });
            sink->AddLine({ -50.0F, 0.0F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_01()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -103.538002F, 76.2139969F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -103.538002F, 76.2139969F }, { -149.979004F, 103.026001F }, { -149.979004F, 103.026001F } });
            sink->AddBezier({ { -149.979004F, 103.026001F }, { -149.979004F, 156.651001F }, { -149.979004F, 156.651001F } });
            sink->AddBezier({ { -149.979004F, 156.651001F }, { -103.538002F, 183.464005F }, { -103.538002F, 183.464005F } });
            sink->AddBezier({ { -103.538002F, 183.464005F }, { -57.0970001F, 156.651001F }, { -57.0970001F, 156.651001F } });
            sink->AddBezier({ { -57.0970001F, 156.651001F }, { -57.0970001F, 103.026001F }, { -57.0970001F, 103.026001F } });
            sink->AddBezier({ { -57.0970001F, 103.026001F }, { -103.538002F, 76.2139969F }, { -103.538002F, 76.2139969F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_02()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -87.7080002F, -30.9740009F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -87.7080002F, -30.9740009F }, { -177.125F, 20.6509991F }, { -177.125F, 20.6509991F } });
            sink->AddBezier({ { -177.125F, 20.6509991F }, { -177.125F, 123.901001F }, { -177.125F, 123.901001F } });
            sink->AddBezier({ { -177.125F, 123.901001F }, { -87.7080002F, 175.526001F }, { -87.7080002F, 175.526001F } });
            sink->AddBezier({ { -87.7080002F, 175.526001F }, { 1.70899999F, 123.901001F }, { 1.70899999F, 123.901001F } });
            sink->AddBezier({ { 1.70899999F, 123.901001F }, { 1.70899999F, 20.6509991F }, { 1.70899999F, 20.6509991F } });
            sink->AddBezier({ { 1.70899999F, 20.6509991F }, { -87.7080002F, -30.9740009F }, { -87.7080002F, -30.9740009F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: hexagon
        // - - - Transforms: hexagon
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_03()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -87.7080002F, -128.973999F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -87.7080002F, -128.973999F }, { -212.632004F, -56.848999F }, { -212.632004F, -56.848999F } });
            sink->AddBezier({ { -212.632004F, -56.848999F }, { -212.632004F, 87.401001F }, { -212.632004F, 87.401001F } });
            sink->AddBezier({ { -212.632004F, 87.401001F }, { -87.7080002F, 159.526001F }, { -87.7080002F, 159.526001F } });
            sink->AddBezier({ { -87.7080002F, 159.526001F }, { 37.2159996F, 87.401001F }, { 37.2159996F, 87.401001F } });
            sink->AddBezier({ { 37.2159996F, 87.401001F }, { 37.2159996F, -56.848999F }, { 37.2159996F, -56.848999F } });
            sink->AddBezier({ { 37.2159996F, -56.848999F }, { -87.7080002F, -128.973999F }, { -87.7080002F, -128.973999F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_04()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -38.1990013F, 3.30900002F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -38.1990013F, 25.6970005F }, { -20.0499992F, 43.8470001F }, { 2.33899999F, 43.8470001F } });
            sink->AddBezier({ { 24.7280006F, 43.8470001F }, { 42.8769989F, 25.6970005F }, { 42.8769989F, 3.30900002F } });
            sink->AddBezier({ { 42.8769989F, 3.30900002F }, { 42.7190018F, 3.23099995F }, { 42.7190018F, 3.23099995F } });
            sink->AddBezier({ { 42.7190018F, -19.1569996F }, { 24.5699997F, -37.3069992F }, { 2.18099999F, -37.3069992F } });
            sink->AddBezier({ { -20.2080002F, -37.3069992F }, { -38.355999F, -19.1569996F }, { -38.355999F, 3.23099995F } });
            sink->AddBezier({ { -38.355999F, 3.23099995F }, { -38.1990013F, 3.30900002F }, { -38.1990013F, 3.30900002F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Circle_small
        // - - - Transforms: Circle_control
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_05()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -38.355999F, 157.309006F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -38.355999F, 179.697006F }, { -20.2080002F, 197.847F }, { 2.18099999F, 197.847F } });
            sink->AddBezier({ { 24.5699997F, 197.847F }, { 42.7190018F, 179.697006F }, { 42.7190018F, 157.309006F } });
            sink->AddBezier({ { 42.7190018F, 157.309006F }, { 42.7190018F, -116.768997F }, { 42.7190018F, -116.768997F } });
            sink->AddBezier({ { 42.7190018F, -139.156998F }, { 24.5699997F, -157.307007F }, { 2.18099999F, -157.307007F } });
            sink->AddBezier({ { -20.2080002F, -157.307007F }, { -38.355999F, -139.156998F }, { -38.355999F, -116.768997F } });
            sink->AddBezier({ { -38.355999F, -116.768997F }, { -38.355999F, 157.309006F }, { -38.355999F, 157.309006F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_06()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 222.5F, -206.5F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 222.5F, -206.5F }, { 222.0F, -161.5F }, { 222.0F, -161.5F } });
            sink->AddBezier({ { 222.0F, -161.5F }, { -163.0F, -161.0F }, { -163.0F, -161.0F } });
            sink->AddBezier({ { -163.0F, -161.0F }, { -162.5F, -206.0F }, { -162.5F, -206.0F } });
            sink->AddBezier({ { -162.5F, -206.0F }, { 222.5F, -206.5F }, { 222.5F, -206.5F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Btn_rectangle
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_07()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 222.5F, -206.5F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 222.5F, -206.5F }, { 222.0F, 26.5F }, { 222.0F, 26.5F } });
            sink->AddBezier({ { 222.0F, 26.5F }, { -163.0F, 27.0F }, { -163.0F, 27.0F } });
            sink->AddBezier({ { -163.0F, 27.0F }, { -162.5F, -206.0F }, { -162.5F, -206.0F } });
            sink->AddBezier({ { -162.5F, -206.0F }, { 222.5F, -206.5F }, { 222.5F, -206.5F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Btn_rectangle
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_08()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 163.5F, -206.5F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 163.5F, -206.5F }, { 163.0F, 26.5F }, { 163.0F, 26.5F } });
            sink->AddBezier({ { 163.0F, 26.5F }, { -222.0F, 27.0F }, { -222.0F, 27.0F } });
            sink->AddBezier({ { -222.0F, 27.0F }, { -221.5F, -206.0F }, { -221.5F, -206.0F } });
            sink->AddBezier({ { -221.5F, -206.0F }, { 163.5F, -206.5F }, { 163.5F, -206.5F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_09()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 108.502998F, 108.502998F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 108.502998F, 108.502998F }, { -35.0400009F, 108.502998F }, { -35.0400009F, 108.502998F } });
            sink->AddBezier({ { -35.0400009F, 108.502998F }, { -35.0400009F, -35.0400009F }, { -35.0400009F, -35.0400009F } });
            sink->AddBezier({ { -35.0400009F, -35.0400009F }, { 108.502998F, 108.502998F }, { 108.502998F, 108.502998F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Triangle
        // - - - ShapeGroup: Shape RotationDegrees:-45
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_10()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 250.0F, 250.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 250.0F, 250.0F }, { -250.0F, 250.0F }, { -250.0F, 250.0F } });
            sink->AddBezier({ { -250.0F, 250.0F }, { -250.0F, -250.0F }, { -250.0F, -250.0F } });
            sink->AddBezier({ { -250.0F, -250.0F }, { 250.0F, 250.0F }, { 250.0F, 250.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_11()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 80.0F, -535.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 80.0F, -535.0F }, { 80.0F, 535.0F }, { 80.0F, 535.0F } });
            sink->AddBezier({ { 80.0F, 535.0F }, { 54.0F, 534.0F }, { 54.0F, 534.0F } });
            sink->AddBezier({ { 54.0F, 534.0F }, { 54.0F, -536.0F }, { 54.0F, -536.0F } });
            sink->AddBezier({ { 54.0F, -536.0F }, { 80.0F, -535.0F }, { 80.0F, -535.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_12()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 80.0F, -535.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 80.0F, -535.0F }, { 80.0F, 535.0F }, { 80.0F, 535.0F } });
            sink->AddBezier({ { 80.0F, 535.0F }, { -80.0F, 535.0F }, { -80.0F, 535.0F } });
            sink->AddBezier({ { -80.0F, 535.0F }, { -80.0F, -535.0F }, { -80.0F, -535.0F } });
            sink->AddBezier({ { -80.0F, -535.0F }, { 80.0F, -535.0F }, { 80.0F, -535.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_13()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 79.0F, -81.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 79.0F, -81.0F }, { 80.0F, 535.0F }, { 80.0F, 535.0F } });
            sink->AddBezier({ { 80.0F, 535.0F }, { -80.0F, 535.0F }, { -80.0F, 535.0F } });
            sink->AddBezier({ { -80.0F, 535.0F }, { -81.0F, -81.0F }, { -81.0F, -81.0F } });
            sink->AddBezier({ { -81.0F, -81.0F }, { 79.0F, -81.0F }, { 79.0F, -81.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - - Layer aggregator
        // - - - - - - Layer: Shape Layer 7
        // - - - - - Transforms: Blue_cntrl
        // - - - - Transforms: Null 29
        // - - - Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_14()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 499.217987F, 206.781998F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 499.217987F, 206.781998F }, { 706.0F, 0.0F }, { 706.0F, 0.0F } });
            sink->AddBezier({ { 706.0F, 0.0F }, { 499.217987F, -206.781998F }, { 499.217987F, -206.781998F } });
            sink->AddBezier({ { 499.217987F, -206.781998F }, { 499.217987F, -499.217987F }, { 499.217987F, -499.217987F } });
            sink->AddBezier({ { 499.217987F, -499.217987F }, { 206.783005F, -499.217987F }, { 206.783005F, -499.217987F } });
            sink->AddBezier({ { 206.783005F, -499.217987F }, { 0.0F, -706.0F }, { 0.0F, -706.0F } });
            sink->AddBezier({ { 0.0F, -706.0F }, { -206.783005F, -499.217987F }, { -206.783005F, -499.217987F } });
            sink->AddBezier({ { -206.783005F, -499.217987F }, { -499.217987F, -499.217987F }, { -499.217987F, -499.217987F } });
            sink->AddBezier({ { -499.217987F, -499.217987F }, { -499.217987F, -206.781998F }, { -499.217987F, -206.781998F } });
            sink->AddBezier({ { -499.217987F, -206.781998F }, { -706.0F, 0.0F }, { -706.0F, 0.0F } });
            sink->AddBezier({ { -706.0F, 0.0F }, { -499.217987F, 206.781998F }, { -499.217987F, 206.781998F } });
            sink->AddBezier({ { -499.217987F, 206.781998F }, { -499.217987F, 499.21701F }, { -499.217987F, 499.21701F } });
            sink->AddBezier({ { -499.217987F, 499.21701F }, { -206.783005F, 499.21701F }, { -206.783005F, 499.21701F } });
            sink->AddBezier({ { -206.783005F, 499.21701F }, { 0.0F, 706.0F }, { 0.0F, 706.0F } });
            sink->AddBezier({ { 0.0F, 706.0F }, { 206.783005F, 499.21701F }, { 206.783005F, 499.21701F } });
            sink->AddBezier({ { 206.783005F, 499.21701F }, { 499.217987F, 499.21701F }, { 499.217987F, 499.21701F } });
            sink->AddBezier({ { 499.217987F, 499.21701F }, { 499.217987F, 206.781998F }, { 499.217987F, 206.781998F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - - Layer aggregator
        // - - - - - - Layer: Shape Layer 7
        // - - - - - Transforms: Blue_cntrl
        // - - - - Transforms: Null 29
        // - - - Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_15()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 456.0F, 188.880997F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 456.0F, 188.880997F }, { 706.0F, 0.0F }, { 706.0F, 0.0F } });
            sink->AddBezier({ { 706.0F, 0.0F }, { 456.0F, -188.880997F }, { 456.0F, -188.880997F } });
            sink->AddBezier({ { 456.0F, -188.880997F }, { 499.217987F, -499.217987F }, { 499.217987F, -499.217987F } });
            sink->AddBezier({ { 499.217987F, -499.217987F }, { 188.880997F, -456.0F }, { 188.880997F, -456.0F } });
            sink->AddBezier({ { 188.880997F, -456.0F }, { 0.0F, -706.0F }, { 0.0F, -706.0F } });
            sink->AddBezier({ { 0.0F, -706.0F }, { -188.880997F, -456.0F }, { -188.880997F, -456.0F } });
            sink->AddBezier({ { -188.880997F, -456.0F }, { -499.217987F, -499.217987F }, { -499.217987F, -499.217987F } });
            sink->AddBezier({ { -499.217987F, -499.217987F }, { -456.0F, -188.880997F }, { -456.0F, -188.880997F } });
            sink->AddBezier({ { -456.0F, -188.880997F }, { -706.0F, 0.0F }, { -706.0F, 0.0F } });
            sink->AddBezier({ { -706.0F, 0.0F }, { -456.0F, 188.880997F }, { -456.0F, 188.880997F } });
            sink->AddBezier({ { -456.0F, 188.880997F }, { -499.217987F, 499.21701F }, { -499.217987F, 499.21701F } });
            sink->AddBezier({ { -499.217987F, 499.21701F }, { -188.880997F, 455.998993F }, { -188.880997F, 455.998993F } });
            sink->AddBezier({ { -188.880997F, 455.998993F }, { 0.0F, 706.0F }, { 0.0F, 706.0F } });
            sink->AddBezier({ { 0.0F, 706.0F }, { 188.880997F, 455.998993F }, { 188.880997F, 455.998993F } });
            sink->AddBezier({ { 188.880997F, 455.998993F }, { 499.217987F, 499.21701F }, { 499.217987F, 499.21701F } });
            sink->AddBezier({ { 499.217987F, 499.21701F }, { 456.0F, 188.880997F }, { 456.0F, 188.880997F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_16()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 706.0F, 292.43399F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 706.0F, 292.43399F }, { 706.0F, 0.0F }, { 706.0F, 0.0F } });
            sink->AddBezier({ { 706.0F, 0.0F }, { 706.0F, -292.43399F }, { 706.0F, -292.43399F } });
            sink->AddBezier({ { 706.0F, -292.43399F }, { 499.217987F, -499.217987F }, { 499.217987F, -499.217987F } });
            sink->AddBezier({ { 499.217987F, -499.217987F }, { 292.434998F, -706.0F }, { 292.434998F, -706.0F } });
            sink->AddBezier({ { 292.434998F, -706.0F }, { 0.0F, -706.0F }, { 0.0F, -706.0F } });
            sink->AddBezier({ { 0.0F, -706.0F }, { -292.434998F, -706.0F }, { -292.434998F, -706.0F } });
            sink->AddBezier({ { -292.434998F, -706.0F }, { -499.217987F, -499.217987F }, { -499.217987F, -499.217987F } });
            sink->AddBezier({ { -499.217987F, -499.217987F }, { -706.0F, -292.43399F }, { -706.0F, -292.43399F } });
            sink->AddBezier({ { -706.0F, -292.43399F }, { -706.0F, 0.0F }, { -706.0F, 0.0F } });
            sink->AddBezier({ { -706.0F, 0.0F }, { -706.0F, 292.43399F }, { -706.0F, 292.43399F } });
            sink->AddBezier({ { -706.0F, 292.43399F }, { -499.217987F, 499.21701F }, { -499.217987F, 499.21701F } });
            sink->AddBezier({ { -499.217987F, 499.21701F }, { -292.434998F, 706.0F }, { -292.434998F, 706.0F } });
            sink->AddBezier({ { -292.434998F, 706.0F }, { 0.0F, 706.0F }, { 0.0F, 706.0F } });
            sink->AddBezier({ { 0.0F, 706.0F }, { 292.434998F, 706.0F }, { 292.434998F, 706.0F } });
            sink->AddBezier({ { 292.434998F, 706.0F }, { 499.217987F, 499.21701F }, { 499.217987F, 499.21701F } });
            sink->AddBezier({ { 499.217987F, 499.21701F }, { 706.0F, 292.43399F }, { 706.0F, 292.43399F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - - Layer aggregator
        // - - - - - - Layer: Shape Layer 7
        // - - - - - Transforms: Blue_cntrl
        // - - - - Transforms: Null 29
        // - - - Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_17()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 1026.0F, 292.43399F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 1026.0F, 292.43399F }, { 1026.0F, 0.0F }, { 1026.0F, 0.0F } });
            sink->AddBezier({ { 1026.0F, 0.0F }, { 1026.0F, -292.43399F }, { 1026.0F, -292.43399F } });
            sink->AddBezier({ { 1026.0F, -292.43399F }, { 819.218018F, -499.217987F }, { 819.218018F, -499.217987F } });
            sink->AddBezier({ { 819.218018F, -499.217987F }, { 612.434998F, -706.0F }, { 612.434998F, -706.0F } });
            sink->AddBezier({ { 612.434998F, -706.0F }, { 0.0F, -706.0F }, { 0.0F, -706.0F } });
            sink->AddBezier({ { 0.0F, -706.0F }, { -612.434998F, -706.0F }, { -612.434998F, -706.0F } });
            sink->AddBezier({ { -612.434998F, -706.0F }, { -819.218018F, -499.217987F }, { -819.218018F, -499.217987F } });
            sink->AddBezier({ { -819.218018F, -499.217987F }, { -1026.0F, -292.43399F }, { -1026.0F, -292.43399F } });
            sink->AddBezier({ { -1026.0F, -292.43399F }, { -1026.0F, 0.0F }, { -1026.0F, 0.0F } });
            sink->AddBezier({ { -1026.0F, 0.0F }, { -1026.0F, 292.43399F }, { -1026.0F, 292.43399F } });
            sink->AddBezier({ { -1026.0F, 292.43399F }, { -819.218018F, 499.21701F }, { -819.218018F, 499.21701F } });
            sink->AddBezier({ { -819.218018F, 499.21701F }, { -612.434998F, 706.0F }, { -612.434998F, 706.0F } });
            sink->AddBezier({ { -612.434998F, 706.0F }, { 0.0F, 706.0F }, { 0.0F, 706.0F } });
            sink->AddBezier({ { 0.0F, 706.0F }, { 612.434998F, 706.0F }, { 612.434998F, 706.0F } });
            sink->AddBezier({ { 612.434998F, 706.0F }, { 819.218018F, 499.21701F }, { 819.218018F, 499.21701F } });
            sink->AddBezier({ { 819.218018F, 499.21701F }, { 1026.0F, 292.43399F }, { 1026.0F, 292.43399F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Shape Layer 6
        // - - - Transforms: BlueOctagon
        // - - Transforms: Shape Layer 6 Offset:<58.254, 53.492>
        winrt::com_ptr<CanvasGeometry> Geometry_18()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 706.0F, 292.43399F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 706.0F, -292.43399F });
            sink->AddLine({ 292.434998F, -706.0F });
            sink->AddLine({ -292.434998F, -706.0F });
            sink->AddLine({ -706.0F, -292.43399F });
            sink->AddLine({ -706.0F, 292.43399F });
            sink->AddLine({ -292.434998F, 706.0F });
            sink->AddLine({ 292.434998F, 706.0F });
            sink->AddLine({ 706.0F, 292.43399F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_19()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 779.575012F, -623.637024F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 779.575012F, -623.637024F }, { 779.575012F, 716.0F }, { 779.575012F, 716.0F } });
            sink->AddBezier({ { 779.575012F, 716.0F }, { -316.015991F, 716.0F }, { -316.015991F, 716.0F } });
            sink->AddBezier({ { -316.015991F, 716.0F }, { -316.015991F, -623.637024F }, { -316.015991F, -623.637024F } });
            sink->AddBezier({ { -316.015991F, -623.637024F }, { 779.575012F, -623.637024F }, { 779.575012F, -623.637024F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_20()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 1352.0F, 208.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 1352.0F, 208.0F }, { 1352.0F, 716.0F }, { 1352.0F, 716.0F } });
            sink->AddBezier({ { 1352.0F, 716.0F }, { -316.0F, 716.0F }, { -316.0F, 716.0F } });
            sink->AddBezier({ { -316.0F, 716.0F }, { -316.0F, 208.0F }, { -316.0F, 208.0F } });
            sink->AddBezier({ { -316.0F, 208.0F }, { 1352.0F, 208.0F }, { 1352.0F, 208.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - - Layer: Shape Layer 8
        // - - - - Transforms: BlueOctagon
        // - - - Transforms: Shape Layer 8 Offset:<58.254, 53.492>
        // - Path
        winrt::com_ptr<CanvasGeometry> Geometry_21()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 1352.0F, -1008.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { 1352.0F, -1008.0F }, { 1352.0F, 716.0F }, { 1352.0F, 716.0F } });
            sink->AddBezier({ { 1352.0F, 716.0F }, { -316.0F, 716.0F }, { -316.0F, 716.0F } });
            sink->AddBezier({ { -316.0F, 716.0F }, { -316.0F, -1008.0F }, { -316.0F, -1008.0F } });
            sink->AddBezier({ { -316.0F, -1008.0F }, { 1352.0F, -1008.0F }, { 1352.0F, -1008.0F } });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Shape Layer 7
        // - - - Transforms: Blue_cntrl
        // - - Transforms: Null 29
        // - Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        // Color
        ColorKeyFrameAnimation ColorAnimation_AlmostBlack_FF001623_to_AlmostGainsboro_FFD8DBD6()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0xFF, 0x00, 0x16, 0x23 }, _holdThenStepEasingFunction);
            // AlmostGainsboro_FFD8DBD6
            result.InsertKeyFrame(0.073170729F, { 0xFF, 0xD8, 0xDB, 0xD6 }, _holdThenStepEasingFunction);
            // AlmostCoral_FFFF7060
            result.InsertKeyFrame(0.219512194F, { 0xFF, 0xFF, 0x70, 0x60 }, _holdThenStepEasingFunction);
            // AlmostGainsboro_FFD8DBD6
            result.InsertKeyFrame(0.365853667F, { 0xFF, 0xD8, 0xDB, 0xD6 }, _holdThenStepEasingFunction);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Small_triangle
        // - Transforms: Small_triangle Offset:<-50, 0>
        // Color
        ColorKeyFrameAnimation ColorAnimation_AlmostCoral_FFFF7060_to_AlmostBlack_FF001623()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0xFF, 0xFF, 0x70, 0x60 }, StepThenHoldEasingFunction());
            // AlmostCoral_FFFF7060
            result.InsertKeyFrame(0.341463417F, { 0xFF, 0xFF, 0x70, 0x60 }, _holdThenStepEasingFunction);
            // AlmostBlack_FF001623
            result.InsertKeyFrame(0.585365832F, { 0xFF, 0x00, 0x16, 0x23 }, _holdThenStepEasingFunction);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Small_triangle
        // - Transforms: Small_triangle Offset:<-50, 0>
        // Color
        ColorKeyFrameAnimation ColorAnimation_AlmostCoral_FFFF7060_to_AlmostGainsboro_FFD8DBD6()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0xFF, 0xFF, 0x70, 0x60 }, _stepThenHoldEasingFunction);
            // AlmostCoral_FFFF7060
            result.InsertKeyFrame(0.341463417F, { 0xFF, 0xFF, 0x70, 0x60 }, _holdThenStepEasingFunction);
            // AlmostGainsboro_FFD8DBD6
            result.InsertKeyFrame(0.585365832F, { 0xFF, 0xD8, 0xDB, 0xD6 }, _holdThenStepEasingFunction);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Shape Layer 7
        // - - - Transforms: Blue_cntrl
        // - - Transforms: Null 29
        // - Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        // Color
        ColorKeyFrameAnimation ColorAnimation_AlmostLightSalmon_FFFFC17A_to_AlmostBlack_FF001623()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0xFF, 0xFF, 0xC1, 0x7A }, _holdThenStepEasingFunction);
            // AlmostCoral_FFFF7060
            result.InsertKeyFrame(0.073170729F, { 0xFF, 0xFF, 0x70, 0x60 }, _holdThenStepEasingFunction);
            // AlmostBlack_FF001623
            result.InsertKeyFrame(0.219512194F, { 0xFF, 0x00, 0x16, 0x23 }, _holdThenStepEasingFunction);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_solo 2
        // Color
        ColorKeyFrameAnimation ColorAnimation_TransparentAlmostLightSalmon_00FFC17A_to_AlmostLightSalmon_FFFFC17A()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0x00, 0xFF, 0xC1, 0x7A }, _stepThenHoldEasingFunction);
            // TransparentAlmostLightSalmon_00FFC17A
            result.InsertKeyFrame(0.865853667F, { 0x00, 0xFF, 0xC1, 0x7A }, _holdThenStepEasingFunction);
            // AlmostLightSalmon_FFFFC17A
            result.InsertKeyFrame(0.878048778F, { 0xFF, 0xFF, 0xC1, 0x7A }, _cubicBezierEasingFunction_0);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Shape Layer 7
        // - - Transforms: Blue_cntrl
        // - Transforms: Null 29
        // Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        CompositionColorBrush AnimatedColorBrush_AlmostBlack_FF001623_to_AlmostGainsboro_FFD8DBD6()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_AlmostBlack_FF001623_to_AlmostGainsboro_FFD8DBD6(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Small_triangle
        // Transforms: Small_triangle Offset:<-50, 0>
        CompositionColorBrush AnimatedColorBrush_AlmostCoral_FFFF7060_to_AlmostBlack_FF001623()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_AlmostCoral_FFFF7060_to_AlmostBlack_FF001623(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Small_triangle
        // Transforms: Small_triangle Offset:<-50, 0>
        CompositionColorBrush AnimatedColorBrush_AlmostCoral_FFFF7060_to_AlmostGainsboro_FFD8DBD6()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_AlmostCoral_FFFF7060_to_AlmostGainsboro_FFD8DBD6(), _rootProgress);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Shape Layer 7
        // - - Transforms: Blue_cntrl
        // - Transforms: Null 29
        // Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        CompositionColorBrush AnimatedColorBrush_AlmostLightSalmon_FFFFC17A_to_AlmostBlack_FF001623()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_AlmostLightSalmon_FFFFC17A_to_AlmostBlack_FF001623(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_solo 2
        CompositionColorBrush AnimatedColorBrush_TransparentAlmostLightSalmon_00FFC17A_to_AlmostLightSalmon_FFFFC17A()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_TransparentAlmostLightSalmon_00FFC17A_to_AlmostLightSalmon_FFFFC17A(), _rootProgress);
            return result;
        }

        CompositionColorBrush ColorBrush_AlmostBlack_FF001623()
        {
            return _colorBrush_AlmostBlack_FF001623 = _c.CreateColorBrush({ 0xFF, 0x00, 0x16, 0x23 });
        }

        // - Layer aggregator
        // Layer: BG 2
        CompositionColorBrush ColorBrush_AlmostBlack_FF001626()
        {
            return _c.CreateColorBrush({ 0xFF, 0x00, 0x16, 0x26 });
        }

        CompositionColorBrush ColorBrush_AlmostCoral_FFFF7060()
        {
            return _colorBrush_AlmostCoral_FFFF7060 = _c.CreateColorBrush({ 0xFF, 0xFF, 0x70, 0x60 });
        }

        CompositionColorBrush ColorBrush_AlmostGainsboro_FFD8DBD6()
        {
            return _colorBrush_AlmostGainsboro_FFD8DBD6 = _c.CreateColorBrush({ 0xFF, 0xD8, 0xDB, 0xD6 });
        }

        CompositionColorBrush ColorBrush_AlmostLightSalmon_FFFFC17A()
        {
            return _colorBrush_AlmostLightSalmon_FFFFC17A = _c.CreateColorBrush({ 0xFF, 0xFF, 0xC1, 0x7A });
        }

        // - - Layer aggregator
        // - Layer: Smear_rect
        // SolidLayerRectangle
        CompositionColorBrush ColorBrush_AlmostLightSalmon_FFFFC37A()
        {
            return _c.CreateColorBrush({ 0xFF, 0xFF, 0xC3, 0x7A });
        }

        // - Layer aggregator
        // Layer: BG 3
        CompositionColorBrush ColorBrush_AlmostSalmon_FFFF7063()
        {
            return _c.CreateColorBrush({ 0xFF, 0xFF, 0x70, 0x63 });
        }

        // - - Layer aggregator
        // - Layer: Long_bar 2
        // Transforms: Long_bar 2
        CompositionColorBrush ColorBrush_Black()
        {
            return _c.CreateColorBrush({ 0xFF, 0x00, 0x00, 0x00 });
        }

        // - - Layer aggregator
        // - Layer: Long_bar 2
        // Transforms: Long_bar 2
        CompositionColorBrush ColorBrush_White()
        {
            return _c.CreateColorBrush({ 0xFF, 0xFF, 0xFF, 0xFF });
        }

        // Layer aggregator
        // Layer: Small_triangle
        CompositionContainerShape ContainerShape_00()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: Small_triangle Offset:<-50, 0>
            result.Shapes().Append(SpriteShape_03());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_128p5_to_127(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_00(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_03(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: hexagon
        CompositionContainerShape ContainerShape_01()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: hexagon
            result.Shapes().Append(SpriteShape_04());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_0(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_02(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_04(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Circle_small
        CompositionContainerShape ContainerShape_02()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: Circle_control
            result.Shapes().Append(SpriteShape_05());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_1(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_04(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_05(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Circle_Big
        CompositionContainerShape ContainerShape_03()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_04());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_06(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_Big
        CompositionContainerShape ContainerShape_04()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 3.0F, 122.0F });
            // ShapeGroup: Ellipse 1 Offset:<3, 122>
            result.Shapes().Append(SpriteShape_06());
            StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1_to_0p66(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1_to_0p66, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_05(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Triangle
        CompositionContainerShape ContainerShape_05()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // ShapeGroup: Shape RotationDegrees:-45
            result.Shapes().Append(SpriteShape_08());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_45(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_07(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", _shapeVisibilityAnimation_02, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Long_bar
        CompositionContainerShape ContainerShape_06()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: Long_bar
            result.Shapes().Append(SpriteShape_09());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_04, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_07(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Long_bar 2
        CompositionContainerShape ContainerShape_07()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: Long_bar 2
            result.Shapes().Append(SpriteShape_10());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_04, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_08(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Smear_rect
        CompositionContainerShape ContainerShape_08()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // SolidLayerRectangle
            result.Shapes().Append(SpriteShape_11());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_09(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Shape Layer 7
        CompositionContainerShape ContainerShape_09()
        {
            const auto result = _c.CreateContainerShape();
            // Transforms: Blue_cntrl
            result.Shapes().Append(ContainerShape_10());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_45, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_07, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_11(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 7
        // Transforms for Blue_cntrl
        CompositionContainerShape ContainerShape_10()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 50.0F, 50.0F });
            result.RotationAngleInDegrees(270.0F);
            result.Scale({ 0.699999988F, 0.699999988F });
            // Transforms: Null 29
            result.Shapes().Append(ContainerShape_11());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_13(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Shape Layer 7
        // Transforms: Blue_cntrl
        // Transforms for Null 29
        CompositionContainerShape ContainerShape_11()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 50.0F, 50.0F });
            result.RotationAngleInDegrees(90.0F);
            result.Scale({ 0.150000006F, 0.150000006F });
            // Transforms: Shape Layer 7 Offset:<34.725, 81.275>
            result.Shapes().Append(SpriteShape_13());
            result.StartAnimation(L"Offset", OffsetVector2Animation_12());
            const auto controller = result.TryGetAnimationController(L"Offset");
            controller.Pause();
            BindProperty(controller, L"Progress", L"(_.Progress*0.8723404)+0.1276596", L"_", _root);
            return result;
        }

        // Layer aggregator
        // Layer: Shape Layer 6
        CompositionContainerShape ContainerShape_12()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: BlueOctagon
            result.Shapes().Append(ContainerShape_13());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_m45(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_15(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_12(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 6
        // Transforms for BlueOctagon
        CompositionContainerShape ContainerShape_13()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.104999997F, 0.104999997F });
            // Transforms: Shape Layer 6 Offset:<58.254, 53.492>
            result.Shapes().Append(SpriteShape_14());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_14(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Shape Layer 8
        CompositionContainerShape ContainerShape_14()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: BlueOctagon
            result.Shapes().Append(ContainerShape_15());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_m45, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_15, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_13(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 8
        // Transforms for BlueOctagon
        CompositionContainerShape ContainerShape_15()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.104999997F, 0.104999997F });
            // Transforms: Shape Layer 8 Offset:<58.254, 53.492>
            result.Shapes().Append(SpriteShape_15());
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_14, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Shape Layer 9
        CompositionContainerShape ContainerShape_16()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: BlueOctagon
            result.Shapes().Append(ContainerShape_17());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_m45, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_15, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_14(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 9
        // Transforms for BlueOctagon
        CompositionContainerShape ContainerShape_17()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.104999997F, 0.104999997F });
            // Transforms: Shape Layer 9 Offset:<58.254, 53.492>
            result.Shapes().Append(SpriteShape_16());
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_14, _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle_Big
        // ShapeGroup: Ellipse 1 Offset:<3, 122>
        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_0_0()
        {
            const auto result = _c.CreateEllipseGeometry();
            result.Radius({ 0.0F, 0.0F });
            StartProgressBoundAnimation(result, L"Radius", RadiusVector2Animation_0(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_solo 2
        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_0_1()
        {
            const auto result = _c.CreateEllipseGeometry();
            result.Radius({ 0.0F, 0.0F });
            StartProgressBoundAnimation(result, L"Radius", RadiusVector2Animation_1(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Shape Layer 9
        // - Transforms: BlueOctagon
        // Transforms: Shape Layer 9 Offset:<58.254, 53.492>
        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_840p73()
        {
            const auto result = _c.CreateEllipseGeometry();
            result.Radius({ 840.72998F, 840.72998F });
            return result;
        }

        CompositionPath Path_0()
        {
            const auto result = _path_0 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_01()));
            return result;
        }

        CompositionPath Path_1()
        {
            const auto result = _path_1 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_02()));
            return result;
        }

        CompositionPath Path_2()
        {
            const auto result = _path_2 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_04()));
            return result;
        }

        CompositionPath Path_3()
        {
            const auto result = _path_3 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_06()));
            return result;
        }

        CompositionPath Path_4()
        {
            const auto result = _path_4 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_09()));
            return result;
        }

        CompositionPath Path_5()
        {
            const auto result = _path_5 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_11()));
            return result;
        }

        CompositionPath Path_6()
        {
            const auto result = _path_6 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_12()));
            return result;
        }

        CompositionPath Path_7()
        {
            const auto result = _path_7 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_16()));
            return result;
        }

        CompositionPath Path_8()
        {
            const auto result = _path_8 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_19()));
            return result;
        }

        CompositionPath Path_9()
        {
            const auto result = _path_9 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_20()));
            return result;
        }

        // - - Layer aggregator
        // - Layer: Small_triangle
        // Transforms: Small_triangle Offset:<-50, 0>
        CompositionPathGeometry PathGeometry_0()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_00())));
        }

        // - - Layer aggregator
        // - Layer: hexagon
        // Transforms: hexagon
        CompositionPathGeometry PathGeometry_1()
        {
            const auto result = _c.CreatePathGeometry();
            StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_0(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_small
        // Transforms: Circle_control
        CompositionPathGeometry PathGeometry_2()
        {
            const auto result = _c.CreatePathGeometry();
            StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_1(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Btn_rectangle
        CompositionPathGeometry PathGeometry_3()
        {
            const auto result = _c.CreatePathGeometry();
            StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_2(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Triangle
        // ShapeGroup: Shape RotationDegrees:-45
        CompositionPathGeometry PathGeometry_4()
        {
            const auto result = _c.CreatePathGeometry();
            StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_3(), _rootProgress);
            return result;
        }

        CompositionPathGeometry PathGeometry_5()
        {
            const auto result = _pathGeometry_5 = _c.CreatePathGeometry();
            StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_4(), _rootProgress);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Shape Layer 7
        // - - Transforms: Blue_cntrl
        // - Transforms: Null 29
        // Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        CompositionPathGeometry PathGeometry_6()
        {
            const auto result = _c.CreatePathGeometry();
            StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_5(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Shape Layer 6
        // - Transforms: BlueOctagon
        // Transforms: Shape Layer 6 Offset:<58.254, 53.492>
        CompositionPathGeometry PathGeometry_7()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_18())));
        }

        // - - - Layer aggregator
        // - - Layer: Shape Layer 8
        // - Transforms: BlueOctagon
        // Transforms: Shape Layer 8 Offset:<58.254, 53.492>
        CompositionPathGeometry PathGeometry_8()
        {
            const auto result = _c.CreatePathGeometry();
            StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_6(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Smear_rect
        // SolidLayerRectangle
        // SolidLayerRectangle.RectangleGeometry
        CompositionRoundedRectangleGeometry RoundedRectangle_1920x1080()
        {
            const auto result = _c.CreateRoundedRectangleGeometry();
            result.CornerRadius({ 9.99999997E-07F, 9.99999997E-07F });
            result.Size({ 1920.0F, 1080.0F });
            return result;
        }

        // Rectangle Path 1.RectangleGeometry
        CompositionRoundedRectangleGeometry RoundedRectangle_2024p742x1181p836()
        {
            const auto result = _roundedRectangle_2024p742x1181p836 = _c.CreateRoundedRectangleGeometry();
            result.CornerRadius({ 9.99999997E-07F, 9.99999997E-07F });
            result.Offset({ -1012.37097F, -590.91803F });
            result.Size({ 2024.74194F, 1181.83606F });
            return result;
        }

        // Layer aggregator
        // Rectangle Path 1
        CompositionSpriteShape SpriteShape_00()
        {
            // Offset:<961.371, 536.918>
            const auto result = CreateSpriteShape(RoundedRectangle_2024p742x1181p836(), { 1.0F, 0.0F, 0.0F, 1.0F, 961.370972F, 536.91803F }, ColorBrush_AlmostLightSalmon_FFFFC17A());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_00(), RootProgress());
            return result;
        }

        // Layer aggregator
        // Rectangle Path 1
        CompositionSpriteShape SpriteShape_01()
        {
            // Offset:<961.371, 536.918>
            const auto result = CreateSpriteShape(_roundedRectangle_2024p742x1181p836, { 1.0F, 0.0F, 0.0F, 1.0F, 961.370972F, 536.91803F }, ColorBrush_AlmostSalmon_FFFF7063());
            result.Scale({ 0.0F, 0.0F });
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_01(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Rectangle Path 1
        CompositionSpriteShape SpriteShape_02()
        {
            // Offset:<961.371, 536.918>
            const auto result = CreateSpriteShape(_roundedRectangle_2024p742x1181p836, { 1.0F, 0.0F, 0.0F, 1.0F, 961.370972F, 536.91803F }, ColorBrush_AlmostBlack_FF001626());
            result.Scale({ 0.0F, 0.0F });
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_02(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Small_triangle
        // Path 1
        CompositionSpriteShape SpriteShape_03()
        {
            // Offset:<-50, 0>
            const auto result = CreateSpriteShape(PathGeometry_0(), { 1.0F, 0.0F, 0.0F, 1.0F, -50.0F, 0.0F }, AnimatedColorBrush_AlmostCoral_FFFF7060_to_AlmostBlack_FF001623());
            result.StrokeBrush(AnimatedColorBrush_AlmostCoral_FFFF7060_to_AlmostGainsboro_FFD8DBD6());
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - Layer aggregator
        // Layer: hexagon
        // Path 1
        CompositionSpriteShape SpriteShape_04()
        {
            const auto result = _c.CreateSpriteShape(PathGeometry_1());
            result.CenterPoint({ -87.7080002F, 159.526001F });
            result.FillBrush(ColorBrush_AlmostBlack_FF001623());
            result.StrokeBrush(ColorBrush_AlmostCoral_FFFF7060());
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_30_to_30(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_01(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_small
        // Path 1
        CompositionSpriteShape SpriteShape_05()
        {
            const auto result = _c.CreateSpriteShape(PathGeometry_2());
            result.FillBrush(_colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(ColorBrush_AlmostGainsboro_FFD8DBD6());
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_03(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_Big
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_06()
        {
            // Offset:<3, 122>
            const auto result = CreateSpriteShape(Ellipse_0_0(), { 1.0F, 0.0F, 0.0F, 1.0F, 3.0F, 122.0F }, _colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostLightSalmon_FFFFC17A);
            result.StrokeThickness(8.0F);
            return result;
        }

        // Layer aggregator
        // Path 1
        CompositionSpriteShape SpriteShape_07()
        {
            const auto result = _c.CreateSpriteShape(PathGeometry_3());
            result.Scale({ 0.0F, 0.0F });
            result.FillBrush(_colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostLightSalmon_FFFFC17A);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_06(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", _shapeVisibilityAnimation_03, _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Triangle
        // Path 1
        CompositionSpriteShape SpriteShape_08()
        {
            // Rotation:-44.99999927302816 degrees, Scale:<0.99999994, 0.99999994>
            const auto result = CreateSpriteShape(PathGeometry_4(), { 0.707106769F, -0.707106769F, 0.707106769F, 0.707106769F, 0.0F, 0.0F }, _colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostLightSalmon_FFFFC17A);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - Layer aggregator
        // Layer: Long_bar
        // Path 1
        CompositionSpriteShape SpriteShape_09()
        {
            const auto result = _c.CreateSpriteShape(PathGeometry_5());
            result.FillBrush(_colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostCoral_FFFF7060);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_08(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Long_bar 2
        // Path 1
        CompositionSpriteShape SpriteShape_10()
        {
            const auto result = _c.CreateSpriteShape(_pathGeometry_5);
            result.FillBrush(ColorBrush_Black());
            result.StrokeBrush(ColorBrush_White());
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_09(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Smear_rect
        // SolidLayerRectangle
        CompositionSpriteShape SpriteShape_11()
        {
            const auto result = _c.CreateSpriteShape(RoundedRectangle_1920x1080());
            result.CenterPoint({ 960.0F, 0.0F });
            result.FillBrush(ColorBrush_AlmostLightSalmon_FFFFC37A());
            StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_0p081_to_0p081(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_0p09_to_0p569(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_10(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_12()
        {
            const auto result = _c.CreateSpriteShape(Ellipse_0_1());
            result.Scale({ 0.0F, 0.0F });
            result.FillBrush(AnimatedColorBrush_TransparentAlmostLightSalmon_00FFC17A_to_AlmostLightSalmon_FFFFC17A());
            result.StrokeBrush(_colorBrush_AlmostLightSalmon_FFFFC17A);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_11(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_10(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Shape Layer 7
        // - Transforms: Blue_cntrl
        // Transforms: Null 29
        // Path 1
        CompositionSpriteShape SpriteShape_13()
        {
            // Offset:<34.725, 81.275>
            const auto result = CreateSpriteShape(PathGeometry_6(), { 1.0F, 0.0F, 0.0F, 1.0F, 34.7249985F, 81.2750015F }, AnimatedColorBrush_AlmostLightSalmon_FFFFC17A_to_AlmostBlack_FF001623());
            result.StrokeBrush(AnimatedColorBrush_AlmostBlack_FF001623_to_AlmostGainsboro_FFD8DBD6());
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(80.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Shape Layer 6
        // Transforms: BlueOctagon
        // Path 1
        CompositionSpriteShape SpriteShape_14()
        {
            // Offset:<58.254, 53.492>
            const auto result = CreateSpriteShape(PathGeometry_7(), { 1.0F, 0.0F, 0.0F, 1.0F, 58.2540016F, 53.4920006F }, _colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostGainsboro_FFD8DBD6);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(80.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Shape Layer 8
        // Transforms: BlueOctagon
        // Path 1
        CompositionSpriteShape SpriteShape_15()
        {
            // Offset:<58.254, 53.492>
            const auto result = CreateSpriteShape(PathGeometry_8(), { 1.0F, 0.0F, 0.0F, 1.0F, 58.2540016F, 53.4920006F }, _colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostGainsboro_FFD8DBD6);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(80.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Shape Layer 9
        // Transforms: BlueOctagon
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_16()
        {
            // Offset:<582.55505, -95.660995>
            const auto result = CreateSpriteShape(Ellipse_840p73(), { 1.0F, 0.0F, 0.0F, 1.0F, 582.555054F, -95.6609955F }, _colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostGainsboro_FFD8DBD6);
            result.StrokeThickness(80.0F);
            return result;
        }

        // The root of the composition.
        ContainerVisual Root()
        {
            const auto result = _root = _c.CreateContainerVisual();
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"Progress", 0.0F);
            propertySet.InsertScalar(L"t0", 0.0F);
            propertySet.InsertScalar(L"t1", 0.0F);
            propertySet.InsertScalar(L"t2", 0.0F);
            propertySet.InsertScalar(L"t3", 0.0F);
            propertySet.InsertScalar(L"t4", 0.0F);
            // Layer aggregator
            result.Children().InsertAtTop(ShapeVisual_0());
            StartProgressBoundAnimation(propertySet, L"t0", t0ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t1", t1ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t2", t2ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t3", t3ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t4", t4ScalarAnimation_0_to_1(), _rootProgress);
            return result;
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_0()
        {
            return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.833000004F, 0.833000004F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_1()
        {
            return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction({ 0.810000002F, 0.0F }, { 0.666999996F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_2()
        {
            return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction({ 0.0F, 0.0F }, { 0.0F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_3()
        {
            return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.666999996F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_4()
        {
            return _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 1.0F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_5()
        {
            return _cubicBezierEasingFunction_5 = _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.0F }, { 0.666999996F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_6()
        {
            return _cubicBezierEasingFunction_6 = _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.333000004F }, { 0.666999996F, 0.666999996F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_7()
        {
            return _cubicBezierEasingFunction_7 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.0F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_8()
        {
            return _cubicBezierEasingFunction_8 = _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.833000004F, 0.833000004F });
        }

        ExpressionAnimation RootProgress()
        {
            const auto result = _rootProgress = _c.CreateExpressionAnimation(L"_.Progress");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: hexagon
        // - Transforms: hexagon
        // Path
        PathKeyFrameAnimation PathKeyFrameAnimation_0()
        {
            const auto result = CreatePathKeyFrameAnimation(0.0F, Path_0(), _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, _path_0, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.51219511F, Path_1(), CubicBezierEasingFunction_2());
            result.InsertKeyFrame(0.585365832F, _path_1, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.634146333F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_03())), CubicBezierEasingFunction_3());
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle_small
        // - Transforms: Circle_control
        // Path
        PathKeyFrameAnimation PathKeyFrameAnimation_1()
        {
            const auto result = CreatePathKeyFrameAnimation(0.0F, Path_2(), _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, _path_2, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.573170722F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_05())), CubicBezierEasingFunction_4());
            return result;
        }

        // - - Layer aggregator
        // - Layer: Btn_rectangle
        // Path
        PathKeyFrameAnimation PathKeyFrameAnimation_2()
        {
            const auto result = CreatePathKeyFrameAnimation(0.0F, Path_3(), _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.365853667F, _path_3, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.439024389F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_07())), _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.51219511F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_08())), _cubicBezierEasingFunction_2);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Triangle
        // - ShapeGroup: Shape RotationDegrees:-45
        // Path
        PathKeyFrameAnimation PathKeyFrameAnimation_3()
        {
            const auto result = CreatePathKeyFrameAnimation(0.0F, Path_4(), _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.219512194F, _path_4, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.292682916F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_10())), _cubicBezierEasingFunction_2);
            return result;
        }

        // Path
        PathKeyFrameAnimation PathKeyFrameAnimation_4()
        {
            const auto result = CreatePathKeyFrameAnimation(0.0F, Path_5(), _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.292682916F, _path_5, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.365853667F, Path_6(), _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.951219499F, _path_6, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(1.0F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_13())), _cubicBezierEasingFunction_0);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Shape Layer 7
        // - - - Transforms: Blue_cntrl
        // - - Transforms: Null 29
        // - Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        // Path
        PathKeyFrameAnimation PathKeyFrameAnimation_5()
        {
            const auto result = CreatePathKeyFrameAnimation(0.0F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_14())), _c.CreateCubicBezierEasingFunction({ 0.865999997F, 0.0F }, { 1.0F, 1.0F }));
            result.InsertKeyFrame(0.024390243F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_15())), _cubicBezierEasingFunction_7);
            result.InsertKeyFrame(0.073170729F, Path_7(), _cubicBezierEasingFunction_8);
            result.InsertKeyFrame(0.219512194F, _path_7, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.353658527F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_17())), _cubicBezierEasingFunction_4);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Shape Layer 8
        // - - Transforms: BlueOctagon
        // - Transforms: Shape Layer 8 Offset:<58.254, 53.492>
        // Path
        PathKeyFrameAnimation PathKeyFrameAnimation_6()
        {
            const auto result = CreatePathKeyFrameAnimation(0.0F, Path_8(), _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, _path_8, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.51219511F, Path_9(), _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.585365832F, _path_9, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.833000004F, 0.833000004F }));
            result.InsertKeyFrame(0.719512224F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_21())), _cubicBezierEasingFunction_7);
            return result;
        }

        // - Layer aggregator
        // Layer: hexagon
        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_0()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.621951222F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.695121944F, 9.15799999F, _c.CreateCubicBezierEasingFunction({ 0.226999998F, 0.0F }, { 0.0F, 0.814999998F }));
            result.InsertKeyFrame(0.804878056F, 30.0F, _c.CreateCubicBezierEasingFunction({ 0.187000006F, 0.023F }, { 0.115999997F, 1.0F }));
            result.InsertKeyFrame(0.914634168F, 30.0F, _c.CreateCubicBezierEasingFunction({ 0.298000008F, 0.0F }, { 0.666999996F, 1.0F }));
            result.InsertKeyFrame(0.98780489F, 0.0F, _cubicBezierEasingFunction_1);
            return result;
        }

        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_1()
        {
            const auto result = _rotationAngleInDegreesScalarAnimation_0_to_0_1 = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.51219511F, 6.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.118000001F }, { 0.97299999F, 0.861000001F }));
            result.InsertKeyFrame(0.585365832F, 11.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.980000019F, 1.0F }));
            result.InsertKeyFrame(0.804878056F, 0.0F, _c.CreateCubicBezierEasingFunction({ 0.0199999996F, 0.0F }, { 0.0F, 1.0F }));
            return result;
        }

        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_45()
        {
            const auto result = _rotationAngleInDegreesScalarAnimation_0_to_45 = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.219512194F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.292682916F, 45.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.207000002F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_m45()
        {
            const auto result = _rotationAngleInDegreesScalarAnimation_0_to_m45 = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.365853667F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.439024389F, 180.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.238999993F }, { 0.959999979F, 0.843999982F }));
            result.InsertKeyFrame(0.585365832F, 180.0F, _c.CreateCubicBezierEasingFunction({ 0.296000004F, 0.296000004F }, { 0.666999996F, 0.666999996F }));
            result.InsertKeyFrame(0.658536613F, -45.0F, _c.CreateCubicBezierEasingFunction({ 0.0399999991F, 0.245000005F }, { 0.959999979F, 1.0F }));
            return result;
        }

        // - - Layer aggregator
        // - Layer: hexagon
        // Transforms: hexagon
        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_30_to_30()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 30.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.585365832F, 30.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.597561002F, -21.1669998F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.609756112F, -3.92199993F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.634146333F, 30.0F, _cubicBezierEasingFunction_0);
            return result;
        }

        // - Layer aggregator
        // Layer: Small_triangle
        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_128p5_to_127()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 128.5F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, 128.5F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.48780489F, 74.5F, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.666999996F, 1.0F }));
            result.InsertKeyFrame(0.573170722F, 0.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.214000002F }, { 0.966000021F, 0.948000014F }));
            result.InsertKeyFrame(0.804878056F, 112.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0939999968F }, { 0.986999989F, 0.967000008F }));
            result.InsertKeyFrame(0.902438998F, 112.0F, CubicBezierEasingFunction_0());
            result.InsertKeyFrame(0.939024389F, 127.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.939999998F, 1.0F }));
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScalarAnimation_1_to_0p66()
        {
            const auto result = _scalarAnimation_1_to_0p66 = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.890243888F, 1.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.98780489F, 0.790000021F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.97299999F, 1.0F }));
            result.InsertKeyFrame(1.0F, 0.660000026F, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.833000004F, 1.0F }));
            return result;
        }

        // - - Layer aggregator
        // - Layer: Smear_rect
        // SolidLayerRectangle
        // Scale
        ScalarKeyFrameAnimation ScaleXScalarAnimation_0p081_to_0p081()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.081249997F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.878048778F, 0.081249997F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.951219499F, 0.081249997F, _cubicBezierEasingFunction_5);
            result.InsertKeyFrame(1.0F, 0.081249997F, _cubicBezierEasingFunction_5);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Smear_rect
        // SolidLayerRectangle
        // Scale
        ScalarKeyFrameAnimation ScaleYScalarAnimation_0p09_to_0p569()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0900000036F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.878048778F, 0.0900000036F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.951219499F, 0.237540007F, _c.CreateCubicBezierEasingFunction({ 0.442000002F, 0.0F }, { 0.763999999F, 0.400999993F }));
            result.InsertKeyFrame(1.0F, 0.56852001F, _c.CreateCubicBezierEasingFunction({ 0.978999972F, 0.739000022F }, { 0.959999979F, 0.84799999F }));
            return result;
        }

        ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.451219529F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.48780486F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.585365891F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.597560942F, 1.0F, _cubicBezierEasingFunction_0);
            return result;
        }

        ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.597561002F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.609756052F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.609756112F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.621951163F, 1.0F, _cubicBezierEasingFunction_0);
            return result;
        }

        ScalarKeyFrameAnimation t2ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.597561061F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.609756052F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.621951222F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.634146273F, 1.0F, _cubicBezierEasingFunction_0);
            return result;
        }

        ScalarKeyFrameAnimation t3ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.585365891F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.804877996F, 1.0F, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.902439058F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.98780483F, 1.0F, _cubicBezierEasingFunction_1);
            return result;
        }

        ScalarKeyFrameAnimation t4ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.865853727F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.98780483F, 1.0F, _cubicBezierEasingFunction_5);
            return result;
        }

        // Layer aggregator
        ShapeVisual ShapeVisual_0()
        {
            const auto result = _c.CreateShapeVisual();
            result.Size({ 1920.0F, 1080.0F });
            const auto shapes = result.Shapes();
            // Layer: BG
            shapes.Append(SpriteShape_00());
            // Layer: BG 3
            shapes.Append(SpriteShape_01());
            // Layer: BG 2
            shapes.Append(SpriteShape_02());
            // Layer: Small_triangle
            shapes.Append(ContainerShape_00());
            // Layer: hexagon
            shapes.Append(ContainerShape_01());
            // Layer: Circle_small
            shapes.Append(ContainerShape_02());
            // Layer: Circle_Big
            shapes.Append(ContainerShape_03());
            // Layer: Btn_rectangle
            shapes.Append(SpriteShape_07());
            // Layer: Triangle
            shapes.Append(ContainerShape_05());
            // Layer: Long_bar
            shapes.Append(ContainerShape_06());
            // Layer: Long_bar 2
            shapes.Append(ContainerShape_07());
            // Layer: Smear_rect
            shapes.Append(ContainerShape_08());
            // Layer: Circle_solo 2
            shapes.Append(SpriteShape_12());
            // Layer: Shape Layer 7
            shapes.Append(ContainerShape_09());
            // Layer: Shape Layer 6
            shapes.Append(ContainerShape_12());
            // Layer: Shape Layer 8
            shapes.Append(ContainerShape_14());
            // Layer: Shape Layer 9
            shapes.Append(ContainerShape_16());
            return result;
        }

        StepEasingFunction HoldThenStepEasingFunction()
        {
            const auto result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
            result.IsFinalStepSingleFrame(true);
            return result;
        }

        StepEasingFunction StepThenHoldEasingFunction()
        {
            const auto result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
            result.IsInitialStepSingleFrame(true);
            return result;
        }

        // - Layer aggregator
        // Layer: Small_triangle
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_00()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 500.5F, 1076.0F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.365853667F, { 500.5F, 1076.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.439024389F, { 430.5F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.451219499F, { 382.359009F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertExpressionKeyFrame(0.48780486F, L"(Pow(1-_.t0,3)*Vector2(382.359,1076))+(3*Square(1-_.t0)*_.t0*Vector2(382.359,1076))+(3*(1-_.t0)*Square(_.t0)*Vector2(391.3793,1076))+(Pow(_.t0,3)*Vector2(387.5,1076))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.585365832F, { 387.5F, 1076.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.585365891F, { 367.5F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertExpressionKeyFrame(0.597560942F, L"(Pow(1-_.t0,3)*Vector2(367.5,1076))+(3*Square(1-_.t0)*_.t0*Vector2(361.1458,1076))+(3*(1-_.t0)*Square(_.t0)*Vector2(290.3446,1067.915))+(Pow(_.t0,3)*Vector2(283.202,1067.915))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.609756052F, L"(Pow(1-_.t1,3)*Vector2(283.202,1067.915))+(3*Square(1-_.t1)*_.t1*Vector2(197.4376,1067.915))+(3*(1-_.t1)*Square(_.t1)*Vector2(259.166,1067))+(Pow(_.t1,3)*Vector2(259.166,1067))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.609756112F, { 259.165985F, 1067.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.646341443F, { 191.436996F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.682926834F, { 154.723999F, 1072.50806F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.731707335F, { 134.044006F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.804878056F, { 126.5F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.914634168F, { 126.5F, 1076.0F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.666999996F, 0.666999996F }));
            result.InsertKeyFrame(0.98780489F, { 556.5F, 1076.0F }, CubicBezierEasingFunction_1());
            return result;
        }

        // - - Layer aggregator
        // - Layer: hexagon
        // Transforms: hexagon
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_01()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -660.291992F, -172.526001F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.585365832F, { -660.291992F, -172.526001F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.597561002F, { -242.292007F, -172.526001F }, _cubicBezierEasingFunction_0);
            result.InsertExpressionKeyFrame(0.609756052F, L"(Pow(1-_.t2,3)*Vector2(-242.292,-172.526))+(3*Square(1-_.t2)*_.t2*Vector2(-218.0033,-172.526))+(3*(1-_.t2)*Square(_.t2)*Vector2(-145.5887,-162.701))+(Pow(_.t2,3)*Vector2(-103.387,-162.701))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.621951163F, L"(Pow(1-_.t1,3)*Vector2(-103.387,-162.701))+(3*Square(1-_.t1)*_.t1*Vector2(-83.72858,-162.701))+(3*(1-_.t1)*Square(_.t1)*Vector2(-37.80243,-157.103))+(Pow(_.t1,3)*Vector2(-32.045,-157.103))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.634146273F, L"(Pow(1-_.t2,3)*Vector2(-32.045,-157.103))+(3*Square(1-_.t2)*_.t2*Vector2(-27.71596,-157.103))+(3*(1-_.t2)*Square(_.t2)*Vector2(-61.309,-157.103))+(Pow(_.t2,3)*Vector2(-61.309,-157.103))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.634146333F, { -61.3089981F, -157.102997F }, _stepThenHoldEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: hexagon
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_02()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 1791.10706F, 1075.5F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.621951222F, { 1791.10706F, 1075.5F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.634146333F, { 1798.10706F, 1075.5F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.914634168F, { 1798.10706F, 1075.5F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.98780489F, { 1406.10706F, 1075.5F }, _cubicBezierEasingFunction_1);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_small
        // Transforms: Circle_control
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_03()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -204.485992F, -890.875F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, { -204.485992F, -890.875F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.585365832F, { -204.485992F, 169.125F }, _c.CreateCubicBezierEasingFunction({ 0.949000001F, 0.0F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_04()
        {
            const auto result = _offsetVector2Animation_04 = CreateVector2KeyFrameAnimation(0.0F, { 657.0F, 842.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, { 657.0F, 842.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.51219511F, { 599.0F, 842.0F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.585365832F, { 557.0F, 842.0F }, _cubicBezierEasingFunction_4);
            result.InsertKeyFrame(0.804878056F, { 1039.0F, 842.0F }, _cubicBezierEasingFunction_2);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_Big
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_05()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 321.0F, 847.0F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.585365832F, { 321.0F, 847.0F }, _holdThenStepEasingFunction);
            result.InsertExpressionKeyFrame(0.804877996F, L"(Pow(1-_.t3,3)*Vector2(321,847))+(3*Square(1-_.t3)*_.t3*Vector2(380.3984,767.6546))+(3*(1-_.t3)*Square(_.t3)*Vector2(438,518))+(Pow(_.t3,3)*Vector2(438,518))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.804878056F, { 438.0F, 518.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.890243888F, { 438.0F, 518.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.951219499F, { 537.260986F, 518.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.98780489F, { 951.0F, 953.0F }, _cubicBezierEasingFunction_0);
            return result;
        }

        // - Layer aggregator
        // Layer: Btn_rectangle
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_06()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 820.0F, 1048.5F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.585365832F, { 820.0F, 1048.5F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.597561002F, { 1013.77502F, 1048.5F }, CubicBezierEasingFunction_5());
            result.InsertKeyFrame(0.804878056F, { 1502.0F, 1048.5F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.902438998F, { 1502.0F, 1048.5F }, CubicBezierEasingFunction_6());
            result.InsertExpressionKeyFrame(0.98780483F, L"(Pow(1-_.t3,3)*Vector2(1502,1048.5))+(3*Square(1-_.t3)*_.t3*Vector2(1502,1048.5))+(3*(1-_.t3)*Square(_.t3)*Vector2(1168.515,1048.5))+(Pow(_.t3,3)*Vector2(1113,1048.5))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.98780489F, { 1113.0F, 1048.5F }, _stepThenHoldEasingFunction);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_07()
        {
            const auto result = _offsetVector2Animation_07 = CreateVector2KeyFrameAnimation(0.0F, { 907.5F, 592.5F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.585365832F, { 907.5F, 592.5F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.804878056F, { 1291.5F, 592.5F }, CubicBezierEasingFunction_7());
            result.InsertKeyFrame(0.865853667F, { 1291.5F, 592.5F }, _cubicBezierEasingFunction_6);
            result.InsertExpressionKeyFrame(0.98780483F, L"(Pow(1-_.t4,3)*Vector2(1291.5,592.5))+(3*Square(1-_.t4)*_.t4*Vector2(1291.5,592.5))+(3*(1-_.t4)*Square(_.t4)*Vector2(1161.907,592.5))+(Pow(_.t4,3)*Vector2(1132.5,592.5))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.98780489F, { 1132.5F, 592.5F }, _stepThenHoldEasingFunction);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Long_bar
        // Transforms: Long_bar
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_08()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -80.0F, -302.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, { -80.0F, -302.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.51219511F, { -80.0F, -302.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.585365832F, { -80.0F, -295.0F }, CubicBezierEasingFunction_8());
            result.InsertKeyFrame(0.804878056F, { -80.0F, -302.0F }, _c.CreateCubicBezierEasingFunction({ 0.0F, 0.0F }, { 0.171000004F, 1.0F }));
            return result;
        }

        // - - Layer aggregator
        // - Layer: Long_bar 2
        // Transforms: Long_bar 2
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_09()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -80.0F, -302.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, { -80.0F, -302.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.51219511F, { -80.0F, -302.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.585365832F, { -80.0F, -295.0F }, _cubicBezierEasingFunction_8);
            result.InsertKeyFrame(0.804878056F, { -80.0F, -302.0F }, _cubicBezierEasingFunction_2);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Smear_rect
        // SolidLayerRectangle
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_10()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 0.0F, 0.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.951219499F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(1.0F, { 0.0F, 598.0F }, _c.CreateCubicBezierEasingFunction({ 0.0F, 0.0F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_solo 2
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_11()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 961.0F, 88.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.878048778F, { 961.0F, 88.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(1.0F, { 961.0F, 1080.0F }, _cubicBezierEasingFunction_8);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Shape Layer 7
        // - Transforms: Blue_cntrl
        // Transforms: Null 29
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_12()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 0.0F, 0.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.319148928F, { 0.0F, 0.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.446808517F, { 4.04099989F, 388.269012F }, _c.CreateCubicBezierEasingFunction({ 0.828000009F, 0.0F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // - - Layer aggregator
        // - Layer: Shape Layer 7
        // Transforms: Blue_cntrl
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_13()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 2.5F, -182.419998F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.073170729F, { 2.5F, -304.256012F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.5F, 1.0F }));
            result.InsertKeyFrame(0.219512194F, { 2.5F, -126.5F }, _cubicBezierEasingFunction_8);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_14()
        {
            const auto result = _offsetVector2Animation_14 = CreateVector2KeyFrameAnimation(0.0F, { -28.3169994F, -136.317001F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.646341443F, { -28.3169994F, -136.317001F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.731707335F, { -28.3169994F, -167.317001F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.804878056F, { -28.3169994F, -84.3170013F }, _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.0F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_15()
        {
            const auto result = _offsetVector2Animation_15 = CreateVector2KeyFrameAnimation(0.0F, { 1160.0F, 841.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.585365832F, { 1160.0F, 841.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.804878056F, { 1541.5F, 842.5F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.902438998F, { 1618.78796F, 842.5F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.98780489F, { 1252.70996F, 842.5F }, _cubicBezierEasingFunction_1);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Circle_Big
        // - ShapeGroup: Ellipse 1 Offset:<3, 122>
        // Ellipse Path 1.EllipseGeometry
        // Radius
        Vector2KeyFrameAnimation RadiusVector2Animation_0()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 40.0F, 40.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.585365832F, { 40.0F, 40.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.804878056F, { 435.0F, 435.0F }, _c.CreateCubicBezierEasingFunction({ 0.0F, 0.00499999989F }, { 0.0F, 1.0F }));
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_solo 2
        // Ellipse Path 1.EllipseGeometry
        // Radius
        Vector2KeyFrameAnimation RadiusVector2Animation_1()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 29.5F, 29.5F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.804878056F, { 29.5F, 29.5F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.878048778F, { 75.0F, 75.0F }, _c.CreateCubicBezierEasingFunction({ 0.0399999991F, 0.0F }, { 0.0F, 1.0F }));
            return result;
        }

        // - Layer aggregator
        // Layer: BG
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_00()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.073170729F, { 0.0F, 0.0F }, HoldThenStepEasingFunction());
            return result;
        }

        // - Layer aggregator
        // Layer: BG 3
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_01()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.073170729F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.219512194F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation ShapeVisibilityAnimation_02()
        {
            const auto result = _shapeVisibilityAnimation_02 = CreateVector2KeyFrameAnimation(0.219512194F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation ShapeVisibilityAnimation_03()
        {
            const auto result = _shapeVisibilityAnimation_03 = CreateVector2KeyFrameAnimation(0.365853667F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: hexagon
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_04()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.597561002F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_small
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_05()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.439024389F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.585365832F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_Big
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_06()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.585365832F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Long_bar
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_07()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.292682916F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.951219499F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Long_bar 2
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_08()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.951219499F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Smear_rect
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_09()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.878048778F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_solo 2
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_10()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.804878056F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 7
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_11()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.365853667F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 6
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_12()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.365853667F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.439024389F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 8
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_13()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.439024389F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.658536613F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 9
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_14()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.658536613F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        static IGeometrySource2D CanvasGeometryToIGeometrySource2D(winrt::com_ptr<CanvasGeometry> geo)
        {
            return geo.as<IGeometrySource2D>();
        }

    public:
        MotionCorpse_Jrcanest_AnimatedVisual_UAPv11(Compositor compositor)
            : _c{compositor}
            , _reusableExpressionAnimation(compositor.CreateExpressionAnimation())
        {
            winrt::check_hresult(D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, _d2dFactory.put()));
            const auto _ = Root();
        }

        void Close()
        {
            if (_root)
            {
                _root.Close();
            }
        }

        TimeSpan Duration() const
        {
            return TimeSpan{ c_durationTicks };
        }

        Visual RootVisual() const
        {
            return _root;
        }

        float2 Size() const
        {
            return { 1920.0F, 1080.0F };
        }

        static bool IsRuntimeCompatible()
        {
            return winrt::Windows::Foundation::Metadata::ApiInformation::IsApiContractPresent(L"Windows.Foundation.UniversalApiContract", 11);
        }
    };

    class MotionCorpse_Jrcanest_AnimatedVisual_UAPv7 : public winrt::implements<MotionCorpse_Jrcanest_AnimatedVisual_UAPv7,
            winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual,
            IClosable>
    {
        winrt::com_ptr<ID2D1Factory> _d2dFactory{ nullptr };
        static constexpr int64_t c_durationTicks{ 34166666L };
        Compositor const _c{ nullptr };
        ExpressionAnimation const _reusableExpressionAnimation{ nullptr };
        CompositionColorBrush _colorBrush_AlmostBlack_FF001623{ nullptr };
        CompositionColorBrush _colorBrush_AlmostCoral_FFFF7060{ nullptr };
        CompositionColorBrush _colorBrush_AlmostGainsboro_FFD8DBD6{ nullptr };
        CompositionColorBrush _colorBrush_AlmostLightSalmon_FFFFC17A{ nullptr };
        CompositionPathGeometry _pathGeometry_5{ nullptr };
        CompositionRoundedRectangleGeometry _roundedRectangle_2024p742x1181p836{ nullptr };
        ContainerVisual _root{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_0{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_1{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_2{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_3{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_4{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_5{ nullptr };
        CubicBezierEasingFunction _cubicBezierEasingFunction_6{ nullptr };
        ExpressionAnimation _rootProgress{ nullptr };
        ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_0_1{ nullptr };
        ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_45{ nullptr };
        ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_m45{ nullptr };
        ScalarKeyFrameAnimation _scalarAnimation_1_to_0p66{ nullptr };
        StepEasingFunction _holdThenStepEasingFunction{ nullptr };
        StepEasingFunction _stepThenHoldEasingFunction{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_04{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_07{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_14{ nullptr };
        Vector2KeyFrameAnimation _offsetVector2Animation_15{ nullptr };
        Vector2KeyFrameAnimation _shapeVisibilityAnimation_02{ nullptr };
        Vector2KeyFrameAnimation _shapeVisibilityAnimation_03{ nullptr };

        static void StartProgressBoundAnimation(
            CompositionObject target,
            winrt::hstring animatedPropertyName,
            CompositionAnimation animation,
            ExpressionAnimation controllerProgressExpression)
        {
            target.StartAnimation(animatedPropertyName, animation);
            const auto controller = target.TryGetAnimationController(animatedPropertyName);
            controller.Pause();
            controller.StartAnimation(L"Progress", controllerProgressExpression);
        }

        void BindProperty(
            CompositionObject target,
            winrt::hstring animatedPropertyName,
            winrt::hstring expression,
            winrt::hstring referenceParameterName,
            CompositionObject referencedObject)
        {
            _reusableExpressionAnimation.ClearAllParameters();
            _reusableExpressionAnimation.Expression(expression);
            _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
            target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
        }

        ColorKeyFrameAnimation CreateColorKeyFrameAnimation(float initialProgress, Color initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateColorKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InterpolationColorSpace(CompositionColorSpace::Rgb);
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateScalarKeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, float2 initialValue, CompositionEasingFunction initialEasingFunction)
        {
            const auto result = _c.CreateVector2KeyFrameAnimation();
            result.Duration(TimeSpan{ c_durationTicks });
            result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
            return result;
        }

        CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, float3x2 transformMatrix, CompositionBrush fillBrush)
        {
            const auto result = _c.CreateSpriteShape(geometry);
            result.TransformMatrix(transformMatrix);
            result.FillBrush(fillBrush);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Small_triangle
        // - - Transforms: Small_triangle Offset:<-50, 0>
        winrt::com_ptr<CanvasGeometry> Geometry_0()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -50.0F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 0.0F, -62.0F });
            sink->AddLine({ 50.0F, 0.0F });
            sink->AddLine({ -50.0F, 0.0F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: hexagon
        // - - Transforms: hexagon
        winrt::com_ptr<CanvasGeometry> Geometry_1()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -103.538002F, 76.2139969F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ -149.979004F, 103.026001F });
            sink->AddLine({ -149.979004F, 156.651001F });
            sink->AddLine({ -103.538002F, 183.464005F });
            sink->AddLine({ -57.0970001F, 156.651001F });
            sink->AddLine({ -57.0970001F, 103.026001F });
            sink->AddLine({ -103.538002F, 76.2139969F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Circle_small
        // - - Transforms: Circle_control
        winrt::com_ptr<CanvasGeometry> Geometry_2()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ -38.1990013F, 3.30900002F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddBezier({ { -38.1990013F, 25.6970005F }, { -20.0499992F, 43.8470001F }, { 2.33899999F, 43.8470001F } });
            sink->AddBezier({ { 24.7280006F, 43.8470001F }, { 42.8769989F, 25.6970005F }, { 42.8769989F, 3.30900002F } });
            sink->AddLine({ 42.7190018F, 3.23099995F });
            sink->AddBezier({ { 42.7190018F, -19.1569996F }, { 24.5699997F, -37.3069992F }, { 2.18099999F, -37.3069992F } });
            sink->AddBezier({ { -20.2080002F, -37.3069992F }, { -38.355999F, -19.1569996F }, { -38.355999F, 3.23099995F } });
            sink->AddLine({ -38.1990013F, 3.30900002F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Btn_rectangle
        winrt::com_ptr<CanvasGeometry> Geometry_3()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 222.5F, -206.5F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 222.0F, -161.5F });
            sink->AddLine({ -163.0F, -161.0F });
            sink->AddLine({ -162.5F, -206.0F });
            sink->AddLine({ 222.5F, -206.5F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Triangle
        // - - ShapeGroup: Shape RotationDegrees:-45
        winrt::com_ptr<CanvasGeometry> Geometry_4()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 108.502998F, 108.502998F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ -35.0400009F, 108.502998F });
            sink->AddLine({ -35.0400009F, -35.0400009F });
            sink->AddLine({ 108.502998F, 108.502998F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        winrt::com_ptr<CanvasGeometry> Geometry_5()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 80.0F, -535.0F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 80.0F, 535.0F });
            sink->AddLine({ 54.0F, 534.0F });
            sink->AddLine({ 54.0F, -536.0F });
            sink->AddLine({ 80.0F, -535.0F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - - Layer aggregator
        // - - - - - Layer: Shape Layer 7
        // - - - - Transforms: Blue_cntrl
        // - - - Transforms: Null 29
        // - - Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        winrt::com_ptr<CanvasGeometry> Geometry_6()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 499.217987F, 206.781998F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 706.0F, 0.0F });
            sink->AddLine({ 499.217987F, -206.781998F });
            sink->AddLine({ 499.217987F, -499.217987F });
            sink->AddLine({ 206.783005F, -499.217987F });
            sink->AddLine({ 0.0F, -706.0F });
            sink->AddLine({ -206.783005F, -499.217987F });
            sink->AddLine({ -499.217987F, -499.217987F });
            sink->AddLine({ -499.217987F, -206.781998F });
            sink->AddLine({ -706.0F, 0.0F });
            sink->AddLine({ -499.217987F, 206.781998F });
            sink->AddLine({ -499.217987F, 499.21701F });
            sink->AddLine({ -206.783005F, 499.21701F });
            sink->AddLine({ 0.0F, 706.0F });
            sink->AddLine({ 206.783005F, 499.21701F });
            sink->AddLine({ 499.217987F, 499.21701F });
            sink->AddLine({ 499.217987F, 206.781998F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Shape Layer 6
        // - - - Transforms: BlueOctagon
        // - - Transforms: Shape Layer 6 Offset:<58.254, 53.492>
        winrt::com_ptr<CanvasGeometry> Geometry_7()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 706.0F, 292.43399F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 706.0F, -292.43399F });
            sink->AddLine({ 292.434998F, -706.0F });
            sink->AddLine({ -292.434998F, -706.0F });
            sink->AddLine({ -706.0F, -292.43399F });
            sink->AddLine({ -706.0F, 292.43399F });
            sink->AddLine({ -292.434998F, 706.0F });
            sink->AddLine({ 292.434998F, 706.0F });
            sink->AddLine({ 706.0F, 292.43399F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Shape Layer 8
        // - - - Transforms: BlueOctagon
        // - - Transforms: Shape Layer 8 Offset:<58.254, 53.492>
        winrt::com_ptr<CanvasGeometry> Geometry_8()
        {
            winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
            winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
            winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
            winrt::check_hresult(path->Open(sink.put()));
            sink->BeginFigure({ 779.575012F, -623.637024F }, D2D1_FIGURE_BEGIN_FILLED);
            sink->AddLine({ 779.575012F, 716.0F });
            sink->AddLine({ -316.015991F, 716.0F });
            sink->AddLine({ -316.015991F, -623.637024F });
            sink->AddLine({ 779.575012F, -623.637024F });
            sink->EndFigure(D2D1_FIGURE_END_CLOSED);
            winrt::check_hresult(sink->Close());
            auto result = winrt::make_self<CanvasGeometry>(path);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Shape Layer 7
        // - - - Transforms: Blue_cntrl
        // - - Transforms: Null 29
        // - Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        // Color
        ColorKeyFrameAnimation ColorAnimation_AlmostBlack_FF001623_to_AlmostGainsboro_FFD8DBD6()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0xFF, 0x00, 0x16, 0x23 }, _holdThenStepEasingFunction);
            // AlmostGainsboro_FFD8DBD6
            result.InsertKeyFrame(0.073170729F, { 0xFF, 0xD8, 0xDB, 0xD6 }, _holdThenStepEasingFunction);
            // AlmostCoral_FFFF7060
            result.InsertKeyFrame(0.219512194F, { 0xFF, 0xFF, 0x70, 0x60 }, _holdThenStepEasingFunction);
            // AlmostGainsboro_FFD8DBD6
            result.InsertKeyFrame(0.365853667F, { 0xFF, 0xD8, 0xDB, 0xD6 }, _holdThenStepEasingFunction);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Small_triangle
        // - Transforms: Small_triangle Offset:<-50, 0>
        // Color
        ColorKeyFrameAnimation ColorAnimation_AlmostCoral_FFFF7060_to_AlmostBlack_FF001623()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0xFF, 0xFF, 0x70, 0x60 }, StepThenHoldEasingFunction());
            // AlmostCoral_FFFF7060
            result.InsertKeyFrame(0.341463417F, { 0xFF, 0xFF, 0x70, 0x60 }, _holdThenStepEasingFunction);
            // AlmostBlack_FF001623
            result.InsertKeyFrame(0.585365832F, { 0xFF, 0x00, 0x16, 0x23 }, _holdThenStepEasingFunction);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Small_triangle
        // - Transforms: Small_triangle Offset:<-50, 0>
        // Color
        ColorKeyFrameAnimation ColorAnimation_AlmostCoral_FFFF7060_to_AlmostGainsboro_FFD8DBD6()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0xFF, 0xFF, 0x70, 0x60 }, _stepThenHoldEasingFunction);
            // AlmostCoral_FFFF7060
            result.InsertKeyFrame(0.341463417F, { 0xFF, 0xFF, 0x70, 0x60 }, _holdThenStepEasingFunction);
            // AlmostGainsboro_FFD8DBD6
            result.InsertKeyFrame(0.585365832F, { 0xFF, 0xD8, 0xDB, 0xD6 }, _holdThenStepEasingFunction);
            return result;
        }

        // - - - - - Layer aggregator
        // - - - - Layer: Shape Layer 7
        // - - - Transforms: Blue_cntrl
        // - - Transforms: Null 29
        // - Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        // Color
        ColorKeyFrameAnimation ColorAnimation_AlmostLightSalmon_FFFFC17A_to_AlmostBlack_FF001623()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0xFF, 0xFF, 0xC1, 0x7A }, _holdThenStepEasingFunction);
            // AlmostCoral_FFFF7060
            result.InsertKeyFrame(0.073170729F, { 0xFF, 0xFF, 0x70, 0x60 }, _holdThenStepEasingFunction);
            // AlmostBlack_FF001623
            result.InsertKeyFrame(0.219512194F, { 0xFF, 0x00, 0x16, 0x23 }, _holdThenStepEasingFunction);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_solo 2
        // Color
        ColorKeyFrameAnimation ColorAnimation_TransparentAlmostLightSalmon_00FFC17A_to_AlmostLightSalmon_FFFFC17A()
        {
            const auto result = CreateColorKeyFrameAnimation(0.0F, { 0x00, 0xFF, 0xC1, 0x7A }, _stepThenHoldEasingFunction);
            // TransparentAlmostLightSalmon_00FFC17A
            result.InsertKeyFrame(0.865853667F, { 0x00, 0xFF, 0xC1, 0x7A }, _holdThenStepEasingFunction);
            // AlmostLightSalmon_FFFFC17A
            result.InsertKeyFrame(0.878048778F, { 0xFF, 0xFF, 0xC1, 0x7A }, _cubicBezierEasingFunction_0);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Shape Layer 7
        // - - Transforms: Blue_cntrl
        // - Transforms: Null 29
        // Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        CompositionColorBrush AnimatedColorBrush_AlmostBlack_FF001623_to_AlmostGainsboro_FFD8DBD6()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_AlmostBlack_FF001623_to_AlmostGainsboro_FFD8DBD6(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Small_triangle
        // Transforms: Small_triangle Offset:<-50, 0>
        CompositionColorBrush AnimatedColorBrush_AlmostCoral_FFFF7060_to_AlmostBlack_FF001623()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_AlmostCoral_FFFF7060_to_AlmostBlack_FF001623(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Small_triangle
        // Transforms: Small_triangle Offset:<-50, 0>
        CompositionColorBrush AnimatedColorBrush_AlmostCoral_FFFF7060_to_AlmostGainsboro_FFD8DBD6()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_AlmostCoral_FFFF7060_to_AlmostGainsboro_FFD8DBD6(), _rootProgress);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Shape Layer 7
        // - - Transforms: Blue_cntrl
        // - Transforms: Null 29
        // Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        CompositionColorBrush AnimatedColorBrush_AlmostLightSalmon_FFFFC17A_to_AlmostBlack_FF001623()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_AlmostLightSalmon_FFFFC17A_to_AlmostBlack_FF001623(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_solo 2
        CompositionColorBrush AnimatedColorBrush_TransparentAlmostLightSalmon_00FFC17A_to_AlmostLightSalmon_FFFFC17A()
        {
            const auto result = _c.CreateColorBrush();
            StartProgressBoundAnimation(result, L"Color", ColorAnimation_TransparentAlmostLightSalmon_00FFC17A_to_AlmostLightSalmon_FFFFC17A(), _rootProgress);
            return result;
        }

        CompositionColorBrush ColorBrush_AlmostBlack_FF001623()
        {
            return _colorBrush_AlmostBlack_FF001623 = _c.CreateColorBrush({ 0xFF, 0x00, 0x16, 0x23 });
        }

        // - Layer aggregator
        // Layer: BG 2
        CompositionColorBrush ColorBrush_AlmostBlack_FF001626()
        {
            return _c.CreateColorBrush({ 0xFF, 0x00, 0x16, 0x26 });
        }

        CompositionColorBrush ColorBrush_AlmostCoral_FFFF7060()
        {
            return _colorBrush_AlmostCoral_FFFF7060 = _c.CreateColorBrush({ 0xFF, 0xFF, 0x70, 0x60 });
        }

        CompositionColorBrush ColorBrush_AlmostGainsboro_FFD8DBD6()
        {
            return _colorBrush_AlmostGainsboro_FFD8DBD6 = _c.CreateColorBrush({ 0xFF, 0xD8, 0xDB, 0xD6 });
        }

        CompositionColorBrush ColorBrush_AlmostLightSalmon_FFFFC17A()
        {
            return _colorBrush_AlmostLightSalmon_FFFFC17A = _c.CreateColorBrush({ 0xFF, 0xFF, 0xC1, 0x7A });
        }

        // - - Layer aggregator
        // - Layer: Smear_rect
        // SolidLayerRectangle
        CompositionColorBrush ColorBrush_AlmostLightSalmon_FFFFC37A()
        {
            return _c.CreateColorBrush({ 0xFF, 0xFF, 0xC3, 0x7A });
        }

        // - Layer aggregator
        // Layer: BG 3
        CompositionColorBrush ColorBrush_AlmostSalmon_FFFF7063()
        {
            return _c.CreateColorBrush({ 0xFF, 0xFF, 0x70, 0x63 });
        }

        // - - Layer aggregator
        // - Layer: Long_bar 2
        // Transforms: Long_bar 2
        CompositionColorBrush ColorBrush_Black()
        {
            return _c.CreateColorBrush({ 0xFF, 0x00, 0x00, 0x00 });
        }

        // - - Layer aggregator
        // - Layer: Long_bar 2
        // Transforms: Long_bar 2
        CompositionColorBrush ColorBrush_White()
        {
            return _c.CreateColorBrush({ 0xFF, 0xFF, 0xFF, 0xFF });
        }

        // Layer aggregator
        // Layer: Small_triangle
        CompositionContainerShape ContainerShape_00()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: Small_triangle Offset:<-50, 0>
            result.Shapes().Append(SpriteShape_03());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_128p5_to_127(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_00(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_03(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: hexagon
        CompositionContainerShape ContainerShape_01()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: hexagon
            result.Shapes().Append(SpriteShape_04());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_0(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_02(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_04(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Circle_small
        CompositionContainerShape ContainerShape_02()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: Circle_control
            result.Shapes().Append(SpriteShape_05());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_1(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_04(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_05(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Circle_Big
        CompositionContainerShape ContainerShape_03()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            result.Shapes().Append(ContainerShape_04());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_06(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_Big
        CompositionContainerShape ContainerShape_04()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 3.0F, 122.0F });
            // ShapeGroup: Ellipse 1 Offset:<3, 122>
            result.Shapes().Append(SpriteShape_06());
            StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1_to_0p66(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1_to_0p66, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_05(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Triangle
        CompositionContainerShape ContainerShape_05()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // ShapeGroup: Shape RotationDegrees:-45
            result.Shapes().Append(SpriteShape_08());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_45(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_07(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", _shapeVisibilityAnimation_02, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Long_bar
        CompositionContainerShape ContainerShape_06()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: Long_bar
            result.Shapes().Append(SpriteShape_09());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_04, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_07(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Long_bar 2
        CompositionContainerShape ContainerShape_07()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: Long_bar 2
            result.Shapes().Append(SpriteShape_10());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0_1, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_04, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_08(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Smear_rect
        CompositionContainerShape ContainerShape_08()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // SolidLayerRectangle
            result.Shapes().Append(SpriteShape_11());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_09(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Shape Layer 7
        CompositionContainerShape ContainerShape_09()
        {
            const auto result = _c.CreateContainerShape();
            // Transforms: Blue_cntrl
            result.Shapes().Append(ContainerShape_10());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_45, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_07, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_11(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 7
        // Transforms for Blue_cntrl
        CompositionContainerShape ContainerShape_10()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 50.0F, 50.0F });
            result.RotationAngleInDegrees(270.0F);
            result.Scale({ 0.699999988F, 0.699999988F });
            // Transforms: Null 29
            result.Shapes().Append(ContainerShape_11());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_13(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Shape Layer 7
        // Transforms: Blue_cntrl
        // Transforms for Null 29
        CompositionContainerShape ContainerShape_11()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 50.0F, 50.0F });
            result.RotationAngleInDegrees(90.0F);
            result.Scale({ 0.150000006F, 0.150000006F });
            // Transforms: Shape Layer 7 Offset:<34.725, 81.275>
            result.Shapes().Append(SpriteShape_13());
            result.StartAnimation(L"Offset", OffsetVector2Animation_12());
            const auto controller = result.TryGetAnimationController(L"Offset");
            controller.Pause();
            BindProperty(controller, L"Progress", L"(_.Progress*0.8723404)+0.1276596", L"_", _root);
            return result;
        }

        // Layer aggregator
        // Layer: Shape Layer 6
        CompositionContainerShape ContainerShape_12()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: BlueOctagon
            result.Shapes().Append(ContainerShape_13());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_m45(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_15(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_12(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 6
        // Transforms for BlueOctagon
        CompositionContainerShape ContainerShape_13()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.104999997F, 0.104999997F });
            // Transforms: Shape Layer 6 Offset:<58.254, 53.492>
            result.Shapes().Append(SpriteShape_14());
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_14(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Shape Layer 8
        CompositionContainerShape ContainerShape_14()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: BlueOctagon
            result.Shapes().Append(ContainerShape_15());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_m45, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_15, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_13(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 8
        // Transforms for BlueOctagon
        CompositionContainerShape ContainerShape_15()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.104999997F, 0.104999997F });
            // Transforms: Shape Layer 8 Offset:<58.254, 53.492>
            result.Shapes().Append(SpriteShape_15());
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_14, _rootProgress);
            return result;
        }

        // Layer aggregator
        // Layer: Shape Layer 9
        CompositionContainerShape ContainerShape_16()
        {
            const auto result = _c.CreateContainerShape();
            result.Scale({ 0.0F, 0.0F });
            // Transforms: BlueOctagon
            result.Shapes().Append(ContainerShape_17());
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_m45, _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_15, _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_14(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 9
        // Transforms for BlueOctagon
        CompositionContainerShape ContainerShape_17()
        {
            const auto result = _c.CreateContainerShape();
            result.CenterPoint({ 60.0F, 60.0F });
            result.Scale({ 0.104999997F, 0.104999997F });
            // Transforms: Shape Layer 9 Offset:<58.254, 53.492>
            result.Shapes().Append(SpriteShape_16());
            StartProgressBoundAnimation(result, L"Offset", _offsetVector2Animation_14, _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Circle_Big
        // ShapeGroup: Ellipse 1 Offset:<3, 122>
        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_0_0()
        {
            const auto result = _c.CreateEllipseGeometry();
            result.Radius({ 0.0F, 0.0F });
            StartProgressBoundAnimation(result, L"Radius", RadiusVector2Animation_0(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_solo 2
        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_0_1()
        {
            const auto result = _c.CreateEllipseGeometry();
            result.Radius({ 0.0F, 0.0F });
            StartProgressBoundAnimation(result, L"Radius", RadiusVector2Animation_1(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Shape Layer 9
        // - Transforms: BlueOctagon
        // Transforms: Shape Layer 9 Offset:<58.254, 53.492>
        // Ellipse Path 1.EllipseGeometry
        CompositionEllipseGeometry Ellipse_840p73()
        {
            const auto result = _c.CreateEllipseGeometry();
            result.Radius({ 840.72998F, 840.72998F });
            return result;
        }

        // - - Layer aggregator
        // - Layer: Small_triangle
        // Transforms: Small_triangle Offset:<-50, 0>
        CompositionPathGeometry PathGeometry_0()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_0())));
        }

        // - - Layer aggregator
        // - Layer: hexagon
        // Transforms: hexagon
        CompositionPathGeometry PathGeometry_1()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_1())));
        }

        // - - Layer aggregator
        // - Layer: Circle_small
        // Transforms: Circle_control
        CompositionPathGeometry PathGeometry_2()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_2())));
        }

        // - Layer aggregator
        // Layer: Btn_rectangle
        CompositionPathGeometry PathGeometry_3()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_3())));
        }

        // - - Layer aggregator
        // - Layer: Triangle
        // ShapeGroup: Shape RotationDegrees:-45
        CompositionPathGeometry PathGeometry_4()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_4())));
        }

        CompositionPathGeometry PathGeometry_5()
        {
            return _pathGeometry_5 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_5())));
        }

        // - - - - Layer aggregator
        // - - - Layer: Shape Layer 7
        // - - Transforms: Blue_cntrl
        // - Transforms: Null 29
        // Transforms: Shape Layer 7 Offset:<34.725, 81.275>
        CompositionPathGeometry PathGeometry_6()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_6())));
        }

        // - - - Layer aggregator
        // - - Layer: Shape Layer 6
        // - Transforms: BlueOctagon
        // Transforms: Shape Layer 6 Offset:<58.254, 53.492>
        CompositionPathGeometry PathGeometry_7()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_7())));
        }

        // - - - Layer aggregator
        // - - Layer: Shape Layer 8
        // - Transforms: BlueOctagon
        // Transforms: Shape Layer 8 Offset:<58.254, 53.492>
        CompositionPathGeometry PathGeometry_8()
        {
            return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_8())));
        }

        // - - Layer aggregator
        // - Layer: Smear_rect
        // SolidLayerRectangle
        // SolidLayerRectangle.RectangleGeometry
        CompositionRoundedRectangleGeometry RoundedRectangle_1920x1080()
        {
            const auto result = _c.CreateRoundedRectangleGeometry();
            result.CornerRadius({ 9.99999997E-07F, 9.99999997E-07F });
            result.Size({ 1920.0F, 1080.0F });
            return result;
        }

        // Rectangle Path 1.RectangleGeometry
        CompositionRoundedRectangleGeometry RoundedRectangle_2024p742x1181p836()
        {
            const auto result = _roundedRectangle_2024p742x1181p836 = _c.CreateRoundedRectangleGeometry();
            result.CornerRadius({ 9.99999997E-07F, 9.99999997E-07F });
            result.Offset({ -1012.37097F, -590.91803F });
            result.Size({ 2024.74194F, 1181.83606F });
            return result;
        }

        // Layer aggregator
        // Rectangle Path 1
        CompositionSpriteShape SpriteShape_00()
        {
            // Offset:<961.371, 536.918>
            const auto result = CreateSpriteShape(RoundedRectangle_2024p742x1181p836(), { 1.0F, 0.0F, 0.0F, 1.0F, 961.370972F, 536.91803F }, ColorBrush_AlmostLightSalmon_FFFFC17A());
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_00(), RootProgress());
            return result;
        }

        // Layer aggregator
        // Rectangle Path 1
        CompositionSpriteShape SpriteShape_01()
        {
            // Offset:<961.371, 536.918>
            const auto result = CreateSpriteShape(_roundedRectangle_2024p742x1181p836, { 1.0F, 0.0F, 0.0F, 1.0F, 961.370972F, 536.91803F }, ColorBrush_AlmostSalmon_FFFF7063());
            result.Scale({ 0.0F, 0.0F });
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_01(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Rectangle Path 1
        CompositionSpriteShape SpriteShape_02()
        {
            // Offset:<961.371, 536.918>
            const auto result = CreateSpriteShape(_roundedRectangle_2024p742x1181p836, { 1.0F, 0.0F, 0.0F, 1.0F, 961.370972F, 536.91803F }, ColorBrush_AlmostBlack_FF001626());
            result.Scale({ 0.0F, 0.0F });
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_02(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Small_triangle
        // Path 1
        CompositionSpriteShape SpriteShape_03()
        {
            // Offset:<-50, 0>
            const auto result = CreateSpriteShape(PathGeometry_0(), { 1.0F, 0.0F, 0.0F, 1.0F, -50.0F, 0.0F }, AnimatedColorBrush_AlmostCoral_FFFF7060_to_AlmostBlack_FF001623());
            result.StrokeBrush(AnimatedColorBrush_AlmostCoral_FFFF7060_to_AlmostGainsboro_FFD8DBD6());
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - Layer aggregator
        // Layer: hexagon
        // Path 1
        CompositionSpriteShape SpriteShape_04()
        {
            const auto result = _c.CreateSpriteShape(PathGeometry_1());
            result.CenterPoint({ -87.7080002F, 159.526001F });
            result.FillBrush(ColorBrush_AlmostBlack_FF001623());
            result.StrokeBrush(ColorBrush_AlmostCoral_FFFF7060());
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_30_to_30(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_01(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_small
        // Path 1
        CompositionSpriteShape SpriteShape_05()
        {
            const auto result = _c.CreateSpriteShape(PathGeometry_2());
            result.FillBrush(_colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(ColorBrush_AlmostGainsboro_FFD8DBD6());
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_03(), _rootProgress);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_Big
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_06()
        {
            // Offset:<3, 122>
            const auto result = CreateSpriteShape(Ellipse_0_0(), { 1.0F, 0.0F, 0.0F, 1.0F, 3.0F, 122.0F }, _colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostLightSalmon_FFFFC17A);
            result.StrokeThickness(8.0F);
            return result;
        }

        // Layer aggregator
        // Path 1
        CompositionSpriteShape SpriteShape_07()
        {
            const auto result = _c.CreateSpriteShape(PathGeometry_3());
            result.Scale({ 0.0F, 0.0F });
            result.FillBrush(_colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostLightSalmon_FFFFC17A);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_06(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", _shapeVisibilityAnimation_03, _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Triangle
        // Path 1
        CompositionSpriteShape SpriteShape_08()
        {
            // Rotation:-44.99999927302816 degrees, Scale:<0.99999994, 0.99999994>
            const auto result = CreateSpriteShape(PathGeometry_4(), { 0.707106769F, -0.707106769F, 0.707106769F, 0.707106769F, 0.0F, 0.0F }, _colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostLightSalmon_FFFFC17A);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            return result;
        }

        // - Layer aggregator
        // Layer: Long_bar
        // Path 1
        CompositionSpriteShape SpriteShape_09()
        {
            const auto result = _c.CreateSpriteShape(PathGeometry_5());
            result.FillBrush(_colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostCoral_FFFF7060);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_08(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Long_bar 2
        // Path 1
        CompositionSpriteShape SpriteShape_10()
        {
            const auto result = _c.CreateSpriteShape(_pathGeometry_5);
            result.FillBrush(ColorBrush_Black());
            result.StrokeBrush(ColorBrush_White());
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_09(), _rootProgress);
            return result;
        }

        // - Layer aggregator
        // Layer: Smear_rect
        // SolidLayerRectangle
        CompositionSpriteShape SpriteShape_11()
        {
            const auto result = _c.CreateSpriteShape(RoundedRectangle_1920x1080());
            result.CenterPoint({ 960.0F, 0.0F });
            result.FillBrush(ColorBrush_AlmostLightSalmon_FFFFC37A());
            StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_0p081_to_0p081(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_0p09_to_0p569(), _rootProgress);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_10(), _rootProgress);
            return result;
        }

        // Layer aggregator
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_12()
        {
            const auto result = _c.CreateSpriteShape(Ellipse_0_1());
            result.Scale({ 0.0F, 0.0F });
            result.FillBrush(AnimatedColorBrush_TransparentAlmostLightSalmon_00FFC17A_to_AlmostLightSalmon_FFFFC17A());
            result.StrokeBrush(_colorBrush_AlmostLightSalmon_FFFFC17A);
            result.StrokeThickness(8.0F);
            StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_11(), _rootProgress);
            StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_10(), _rootProgress);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Shape Layer 7
        // - Transforms: Blue_cntrl
        // Transforms: Null 29
        // Path 1
        CompositionSpriteShape SpriteShape_13()
        {
            // Offset:<34.725, 81.275>
            const auto result = CreateSpriteShape(PathGeometry_6(), { 1.0F, 0.0F, 0.0F, 1.0F, 34.7249985F, 81.2750015F }, AnimatedColorBrush_AlmostLightSalmon_FFFFC17A_to_AlmostBlack_FF001623());
            result.StrokeBrush(AnimatedColorBrush_AlmostBlack_FF001623_to_AlmostGainsboro_FFD8DBD6());
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(80.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Shape Layer 6
        // Transforms: BlueOctagon
        // Path 1
        CompositionSpriteShape SpriteShape_14()
        {
            // Offset:<58.254, 53.492>
            const auto result = CreateSpriteShape(PathGeometry_7(), { 1.0F, 0.0F, 0.0F, 1.0F, 58.2540016F, 53.4920006F }, _colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostGainsboro_FFD8DBD6);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(80.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Shape Layer 8
        // Transforms: BlueOctagon
        // Path 1
        CompositionSpriteShape SpriteShape_15()
        {
            // Offset:<58.254, 53.492>
            const auto result = CreateSpriteShape(PathGeometry_8(), { 1.0F, 0.0F, 0.0F, 1.0F, 58.2540016F, 53.4920006F }, _colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostGainsboro_FFD8DBD6);
            result.StrokeMiterLimit(2.0F);
            result.StrokeThickness(80.0F);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Shape Layer 9
        // Transforms: BlueOctagon
        // Ellipse Path 1
        CompositionSpriteShape SpriteShape_16()
        {
            // Offset:<582.55505, -95.660995>
            const auto result = CreateSpriteShape(Ellipse_840p73(), { 1.0F, 0.0F, 0.0F, 1.0F, 582.555054F, -95.6609955F }, _colorBrush_AlmostBlack_FF001623);
            result.StrokeBrush(_colorBrush_AlmostGainsboro_FFD8DBD6);
            result.StrokeThickness(80.0F);
            return result;
        }

        // The root of the composition.
        ContainerVisual Root()
        {
            const auto result = _root = _c.CreateContainerVisual();
            const auto propertySet = result.Properties();
            propertySet.InsertScalar(L"Progress", 0.0F);
            propertySet.InsertScalar(L"t0", 0.0F);
            propertySet.InsertScalar(L"t1", 0.0F);
            propertySet.InsertScalar(L"t2", 0.0F);
            propertySet.InsertScalar(L"t3", 0.0F);
            propertySet.InsertScalar(L"t4", 0.0F);
            // Layer aggregator
            result.Children().InsertAtTop(ShapeVisual_0());
            StartProgressBoundAnimation(propertySet, L"t0", t0ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t1", t1ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t2", t2ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t3", t3ScalarAnimation_0_to_1(), _rootProgress);
            StartProgressBoundAnimation(propertySet, L"t4", t4ScalarAnimation_0_to_1(), _rootProgress);
            return result;
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_0()
        {
            return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.833000004F, 0.833000004F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_1()
        {
            return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction({ 0.810000002F, 0.0F }, { 0.666999996F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_2()
        {
            return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.666999996F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_3()
        {
            return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction({ 0.0F, 0.0F }, { 0.0F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_4()
        {
            return _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.0F }, { 0.666999996F, 1.0F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_5()
        {
            return _cubicBezierEasingFunction_5 = _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.333000004F }, { 0.666999996F, 0.666999996F });
        }

        CubicBezierEasingFunction CubicBezierEasingFunction_6()
        {
            return _cubicBezierEasingFunction_6 = _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.833000004F, 0.833000004F });
        }

        ExpressionAnimation RootProgress()
        {
            const auto result = _rootProgress = _c.CreateExpressionAnimation(L"_.Progress");
            result.SetReferenceParameter(L"_", _root);
            return result;
        }

        // - Layer aggregator
        // Layer: hexagon
        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_0()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.621951222F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.695121944F, 9.15799999F, _c.CreateCubicBezierEasingFunction({ 0.226999998F, 0.0F }, { 0.0F, 0.814999998F }));
            result.InsertKeyFrame(0.804878056F, 30.0F, _c.CreateCubicBezierEasingFunction({ 0.187000006F, 0.023F }, { 0.115999997F, 1.0F }));
            result.InsertKeyFrame(0.914634168F, 30.0F, _c.CreateCubicBezierEasingFunction({ 0.298000008F, 0.0F }, { 0.666999996F, 1.0F }));
            result.InsertKeyFrame(0.98780489F, 0.0F, _cubicBezierEasingFunction_1);
            return result;
        }

        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_1()
        {
            const auto result = _rotationAngleInDegreesScalarAnimation_0_to_0_1 = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.51219511F, 6.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.118000001F }, { 0.97299999F, 0.861000001F }));
            result.InsertKeyFrame(0.585365832F, 11.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.980000019F, 1.0F }));
            result.InsertKeyFrame(0.804878056F, 0.0F, _c.CreateCubicBezierEasingFunction({ 0.0199999996F, 0.0F }, { 0.0F, 1.0F }));
            return result;
        }

        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_45()
        {
            const auto result = _rotationAngleInDegreesScalarAnimation_0_to_45 = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.219512194F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.292682916F, 45.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.207000002F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_m45()
        {
            const auto result = _rotationAngleInDegreesScalarAnimation_0_to_m45 = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.365853667F, 0.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.439024389F, 180.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.238999993F }, { 0.959999979F, 0.843999982F }));
            result.InsertKeyFrame(0.585365832F, 180.0F, _c.CreateCubicBezierEasingFunction({ 0.296000004F, 0.296000004F }, { 0.666999996F, 0.666999996F }));
            result.InsertKeyFrame(0.658536613F, -45.0F, _c.CreateCubicBezierEasingFunction({ 0.0399999991F, 0.245000005F }, { 0.959999979F, 1.0F }));
            return result;
        }

        // - - Layer aggregator
        // - Layer: hexagon
        // Transforms: hexagon
        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_30_to_30()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 30.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.585365832F, 30.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.597561002F, -21.1669998F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.609756112F, -3.92199993F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.634146333F, 30.0F, _cubicBezierEasingFunction_0);
            return result;
        }

        // - Layer aggregator
        // Layer: Small_triangle
        // Rotation
        ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_128p5_to_127()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 128.5F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, 128.5F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.48780489F, 74.5F, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.666999996F, 1.0F }));
            result.InsertKeyFrame(0.573170722F, 0.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.214000002F }, { 0.966000021F, 0.948000014F }));
            result.InsertKeyFrame(0.804878056F, 112.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0939999968F }, { 0.986999989F, 0.967000008F }));
            result.InsertKeyFrame(0.902438998F, 112.0F, CubicBezierEasingFunction_0());
            result.InsertKeyFrame(0.939024389F, 127.0F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.939999998F, 1.0F }));
            return result;
        }

        // Scale
        ScalarKeyFrameAnimation ScalarAnimation_1_to_0p66()
        {
            const auto result = _scalarAnimation_1_to_0p66 = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.890243888F, 1.0F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.98780489F, 0.790000021F, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 0.97299999F, 1.0F }));
            result.InsertKeyFrame(1.0F, 0.660000026F, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.833000004F, 1.0F }));
            return result;
        }

        // - - Layer aggregator
        // - Layer: Smear_rect
        // SolidLayerRectangle
        // Scale
        ScalarKeyFrameAnimation ScaleXScalarAnimation_0p081_to_0p081()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.081249997F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.878048778F, 0.081249997F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.951219499F, 0.081249997F, _cubicBezierEasingFunction_4);
            result.InsertKeyFrame(1.0F, 0.081249997F, _cubicBezierEasingFunction_4);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Smear_rect
        // SolidLayerRectangle
        // Scale
        ScalarKeyFrameAnimation ScaleYScalarAnimation_0p09_to_0p569()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0900000036F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.878048778F, 0.0900000036F, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.951219499F, 0.237540007F, _c.CreateCubicBezierEasingFunction({ 0.442000002F, 0.0F }, { 0.763999999F, 0.400999993F }));
            result.InsertKeyFrame(1.0F, 0.56852001F, _c.CreateCubicBezierEasingFunction({ 0.978999972F, 0.739000022F }, { 0.959999979F, 0.84799999F }));
            return result;
        }

        ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.451219529F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.48780486F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.585365891F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.597560942F, 1.0F, _cubicBezierEasingFunction_0);
            return result;
        }

        ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.597561002F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.609756052F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.609756112F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.621951163F, 1.0F, _cubicBezierEasingFunction_0);
            return result;
        }

        ScalarKeyFrameAnimation t2ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.597561061F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.609756052F, 1.0F, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.621951222F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.634146273F, 1.0F, _cubicBezierEasingFunction_0);
            return result;
        }

        ScalarKeyFrameAnimation t3ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.585365891F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.804877996F, 1.0F, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.902439058F, 0.0F, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.98780483F, 1.0F, _cubicBezierEasingFunction_1);
            return result;
        }

        ScalarKeyFrameAnimation t4ScalarAnimation_0_to_1()
        {
            const auto result = CreateScalarKeyFrameAnimation(0.865853727F, 0.0F, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.98780483F, 1.0F, _cubicBezierEasingFunction_4);
            return result;
        }

        // Layer aggregator
        ShapeVisual ShapeVisual_0()
        {
            const auto result = _c.CreateShapeVisual();
            result.Size({ 1920.0F, 1080.0F });
            const auto shapes = result.Shapes();
            // Layer: BG
            shapes.Append(SpriteShape_00());
            // Layer: BG 3
            shapes.Append(SpriteShape_01());
            // Layer: BG 2
            shapes.Append(SpriteShape_02());
            // Layer: Small_triangle
            shapes.Append(ContainerShape_00());
            // Layer: hexagon
            shapes.Append(ContainerShape_01());
            // Layer: Circle_small
            shapes.Append(ContainerShape_02());
            // Layer: Circle_Big
            shapes.Append(ContainerShape_03());
            // Layer: Btn_rectangle
            shapes.Append(SpriteShape_07());
            // Layer: Triangle
            shapes.Append(ContainerShape_05());
            // Layer: Long_bar
            shapes.Append(ContainerShape_06());
            // Layer: Long_bar 2
            shapes.Append(ContainerShape_07());
            // Layer: Smear_rect
            shapes.Append(ContainerShape_08());
            // Layer: Circle_solo 2
            shapes.Append(SpriteShape_12());
            // Layer: Shape Layer 7
            shapes.Append(ContainerShape_09());
            // Layer: Shape Layer 6
            shapes.Append(ContainerShape_12());
            // Layer: Shape Layer 8
            shapes.Append(ContainerShape_14());
            // Layer: Shape Layer 9
            shapes.Append(ContainerShape_16());
            return result;
        }

        StepEasingFunction HoldThenStepEasingFunction()
        {
            const auto result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
            result.IsFinalStepSingleFrame(true);
            return result;
        }

        StepEasingFunction StepThenHoldEasingFunction()
        {
            const auto result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
            result.IsInitialStepSingleFrame(true);
            return result;
        }

        // - Layer aggregator
        // Layer: Small_triangle
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_00()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 500.5F, 1076.0F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.365853667F, { 500.5F, 1076.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.439024389F, { 430.5F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.451219499F, { 382.359009F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertExpressionKeyFrame(0.48780486F, L"(Pow(1-_.t0,3)*Vector2(382.359,1076))+(3*Square(1-_.t0)*_.t0*Vector2(382.359,1076))+(3*(1-_.t0)*Square(_.t0)*Vector2(391.3793,1076))+(Pow(_.t0,3)*Vector2(387.5,1076))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.585365832F, { 387.5F, 1076.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.585365891F, { 367.5F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertExpressionKeyFrame(0.597560942F, L"(Pow(1-_.t0,3)*Vector2(367.5,1076))+(3*Square(1-_.t0)*_.t0*Vector2(361.1458,1076))+(3*(1-_.t0)*Square(_.t0)*Vector2(290.3446,1067.915))+(Pow(_.t0,3)*Vector2(283.202,1067.915))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.609756052F, L"(Pow(1-_.t1,3)*Vector2(283.202,1067.915))+(3*Square(1-_.t1)*_.t1*Vector2(197.4376,1067.915))+(3*(1-_.t1)*Square(_.t1)*Vector2(259.166,1067))+(Pow(_.t1,3)*Vector2(259.166,1067))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.609756112F, { 259.165985F, 1067.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.646341443F, { 191.436996F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.682926834F, { 154.723999F, 1072.50806F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.731707335F, { 134.044006F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.804878056F, { 126.5F, 1076.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.914634168F, { 126.5F, 1076.0F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.666999996F, 0.666999996F }));
            result.InsertKeyFrame(0.98780489F, { 556.5F, 1076.0F }, CubicBezierEasingFunction_1());
            return result;
        }

        // - - Layer aggregator
        // - Layer: hexagon
        // Transforms: hexagon
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_01()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -660.291992F, -172.526001F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.585365832F, { -660.291992F, -172.526001F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.597561002F, { -242.292007F, -172.526001F }, _cubicBezierEasingFunction_0);
            result.InsertExpressionKeyFrame(0.609756052F, L"(Pow(1-_.t2,3)*Vector2(-242.292,-172.526))+(3*Square(1-_.t2)*_.t2*Vector2(-218.0033,-172.526))+(3*(1-_.t2)*Square(_.t2)*Vector2(-145.5887,-162.701))+(Pow(_.t2,3)*Vector2(-103.387,-162.701))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.621951163F, L"(Pow(1-_.t1,3)*Vector2(-103.387,-162.701))+(3*Square(1-_.t1)*_.t1*Vector2(-83.72858,-162.701))+(3*(1-_.t1)*Square(_.t1)*Vector2(-37.80243,-157.103))+(Pow(_.t1,3)*Vector2(-32.045,-157.103))", _stepThenHoldEasingFunction);
            result.InsertExpressionKeyFrame(0.634146273F, L"(Pow(1-_.t2,3)*Vector2(-32.045,-157.103))+(3*Square(1-_.t2)*_.t2*Vector2(-27.71596,-157.103))+(3*(1-_.t2)*Square(_.t2)*Vector2(-61.309,-157.103))+(Pow(_.t2,3)*Vector2(-61.309,-157.103))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.634146333F, { -61.3089981F, -157.102997F }, _stepThenHoldEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: hexagon
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_02()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 1791.10706F, 1075.5F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.621951222F, { 1791.10706F, 1075.5F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.634146333F, { 1798.10706F, 1075.5F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.914634168F, { 1798.10706F, 1075.5F }, CubicBezierEasingFunction_2());
            result.InsertKeyFrame(0.98780489F, { 1406.10706F, 1075.5F }, _cubicBezierEasingFunction_1);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_small
        // Transforms: Circle_control
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_03()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -204.485992F, -890.875F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, { -204.485992F, -890.875F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.585365832F, { -204.485992F, 169.125F }, _c.CreateCubicBezierEasingFunction({ 0.949000001F, 0.0F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_04()
        {
            const auto result = _offsetVector2Animation_04 = CreateVector2KeyFrameAnimation(0.0F, { 657.0F, 842.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, { 657.0F, 842.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.51219511F, { 599.0F, 842.0F }, CubicBezierEasingFunction_3());
            result.InsertKeyFrame(0.585365832F, { 557.0F, 842.0F }, _c.CreateCubicBezierEasingFunction({ 1.0F, 0.0F }, { 1.0F, 1.0F }));
            result.InsertKeyFrame(0.804878056F, { 1039.0F, 842.0F }, _cubicBezierEasingFunction_3);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_Big
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_05()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 321.0F, 847.0F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.585365832F, { 321.0F, 847.0F }, _holdThenStepEasingFunction);
            result.InsertExpressionKeyFrame(0.804877996F, L"(Pow(1-_.t3,3)*Vector2(321,847))+(3*Square(1-_.t3)*_.t3*Vector2(380.3984,767.6546))+(3*(1-_.t3)*Square(_.t3)*Vector2(438,518))+(Pow(_.t3,3)*Vector2(438,518))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.804878056F, { 438.0F, 518.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.890243888F, { 438.0F, 518.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.951219499F, { 537.260986F, 518.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.98780489F, { 951.0F, 953.0F }, _cubicBezierEasingFunction_0);
            return result;
        }

        // - Layer aggregator
        // Layer: Btn_rectangle
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_06()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 820.0F, 1048.5F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.585365832F, { 820.0F, 1048.5F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.597561002F, { 1013.77502F, 1048.5F }, CubicBezierEasingFunction_4());
            result.InsertKeyFrame(0.804878056F, { 1502.0F, 1048.5F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.902438998F, { 1502.0F, 1048.5F }, CubicBezierEasingFunction_5());
            result.InsertExpressionKeyFrame(0.98780483F, L"(Pow(1-_.t3,3)*Vector2(1502,1048.5))+(3*Square(1-_.t3)*_.t3*Vector2(1502,1048.5))+(3*(1-_.t3)*Square(_.t3)*Vector2(1168.515,1048.5))+(Pow(_.t3,3)*Vector2(1113,1048.5))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.98780489F, { 1113.0F, 1048.5F }, _stepThenHoldEasingFunction);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_07()
        {
            const auto result = _offsetVector2Animation_07 = CreateVector2KeyFrameAnimation(0.0F, { 907.5F, 592.5F }, _stepThenHoldEasingFunction);
            result.SetReferenceParameter(L"_", _root);
            result.InsertKeyFrame(0.585365832F, { 907.5F, 592.5F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.804878056F, { 1291.5F, 592.5F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.0F, 1.0F }));
            result.InsertKeyFrame(0.865853667F, { 1291.5F, 592.5F }, _cubicBezierEasingFunction_5);
            result.InsertExpressionKeyFrame(0.98780483F, L"(Pow(1-_.t4,3)*Vector2(1291.5,592.5))+(3*Square(1-_.t4)*_.t4*Vector2(1291.5,592.5))+(3*(1-_.t4)*Square(_.t4)*Vector2(1161.907,592.5))+(Pow(_.t4,3)*Vector2(1132.5,592.5))", _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.98780489F, { 1132.5F, 592.5F }, _stepThenHoldEasingFunction);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Long_bar
        // Transforms: Long_bar
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_08()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -80.0F, -302.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, { -80.0F, -302.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.51219511F, { -80.0F, -302.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.585365832F, { -80.0F, -295.0F }, CubicBezierEasingFunction_6());
            result.InsertKeyFrame(0.804878056F, { -80.0F, -302.0F }, _c.CreateCubicBezierEasingFunction({ 0.0F, 0.0F }, { 0.171000004F, 1.0F }));
            return result;
        }

        // - - Layer aggregator
        // - Layer: Long_bar 2
        // Transforms: Long_bar 2
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_09()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { -80.0F, -302.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.439024389F, { -80.0F, -302.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.51219511F, { -80.0F, -302.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.585365832F, { -80.0F, -295.0F }, _cubicBezierEasingFunction_6);
            result.InsertKeyFrame(0.804878056F, { -80.0F, -302.0F }, _cubicBezierEasingFunction_3);
            return result;
        }

        // - - Layer aggregator
        // - Layer: Smear_rect
        // SolidLayerRectangle
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_10()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 0.0F, 0.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.951219499F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(1.0F, { 0.0F, 598.0F }, _c.CreateCubicBezierEasingFunction({ 0.0F, 0.0F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_solo 2
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_11()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 961.0F, 88.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.878048778F, { 961.0F, 88.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(1.0F, { 961.0F, 1080.0F }, _cubicBezierEasingFunction_6);
            return result;
        }

        // - - - Layer aggregator
        // - - Layer: Shape Layer 7
        // - Transforms: Blue_cntrl
        // Transforms: Null 29
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_12()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 0.0F, 0.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.319148928F, { 0.0F, 0.0F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.446808517F, { 4.04099989F, 388.269012F }, _c.CreateCubicBezierEasingFunction({ 0.828000009F, 0.0F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // - - Layer aggregator
        // - Layer: Shape Layer 7
        // Transforms: Blue_cntrl
        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_13()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 2.5F, -182.419998F }, _cubicBezierEasingFunction_0);
            result.InsertKeyFrame(0.073170729F, { 2.5F, -304.256012F }, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.5F, 1.0F }));
            result.InsertKeyFrame(0.219512194F, { 2.5F, -126.5F }, _cubicBezierEasingFunction_6);
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_14()
        {
            const auto result = _offsetVector2Animation_14 = CreateVector2KeyFrameAnimation(0.0F, { -28.3169994F, -136.317001F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.646341443F, { -28.3169994F, -136.317001F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.731707335F, { -28.3169994F, -167.317001F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.804878056F, { -28.3169994F, -84.3170013F }, _c.CreateCubicBezierEasingFunction({ 0.333000004F, 0.0F }, { 0.833000004F, 0.833000004F }));
            return result;
        }

        // Offset
        Vector2KeyFrameAnimation OffsetVector2Animation_15()
        {
            const auto result = _offsetVector2Animation_15 = CreateVector2KeyFrameAnimation(0.0F, { 1160.0F, 841.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.585365832F, { 1160.0F, 841.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.804878056F, { 1541.5F, 842.5F }, _cubicBezierEasingFunction_3);
            result.InsertKeyFrame(0.902438998F, { 1618.78796F, 842.5F }, _cubicBezierEasingFunction_2);
            result.InsertKeyFrame(0.98780489F, { 1252.70996F, 842.5F }, _cubicBezierEasingFunction_1);
            return result;
        }

        // - - - - Layer aggregator
        // - - - Layer: Circle_Big
        // - ShapeGroup: Ellipse 1 Offset:<3, 122>
        // Ellipse Path 1.EllipseGeometry
        // Radius
        Vector2KeyFrameAnimation RadiusVector2Animation_0()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 40.0F, 40.0F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.585365832F, { 40.0F, 40.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.804878056F, { 435.0F, 435.0F }, _c.CreateCubicBezierEasingFunction({ 0.0F, 0.00499999989F }, { 0.0F, 1.0F }));
            return result;
        }

        // - - Layer aggregator
        // - Layer: Circle_solo 2
        // Ellipse Path 1.EllipseGeometry
        // Radius
        Vector2KeyFrameAnimation RadiusVector2Animation_1()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.0F, { 29.5F, 29.5F }, _stepThenHoldEasingFunction);
            result.InsertKeyFrame(0.804878056F, { 29.5F, 29.5F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.878048778F, { 75.0F, 75.0F }, _c.CreateCubicBezierEasingFunction({ 0.0399999991F, 0.0F }, { 0.0F, 1.0F }));
            return result;
        }

        // - Layer aggregator
        // Layer: BG
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_00()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.073170729F, { 0.0F, 0.0F }, HoldThenStepEasingFunction());
            return result;
        }

        // - Layer aggregator
        // Layer: BG 3
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_01()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.073170729F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.219512194F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation ShapeVisibilityAnimation_02()
        {
            const auto result = _shapeVisibilityAnimation_02 = CreateVector2KeyFrameAnimation(0.219512194F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        Vector2KeyFrameAnimation ShapeVisibilityAnimation_03()
        {
            const auto result = _shapeVisibilityAnimation_03 = CreateVector2KeyFrameAnimation(0.365853667F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: hexagon
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_04()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.597561002F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_small
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_05()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.439024389F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.585365832F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_Big
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_06()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.585365832F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Long_bar
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_07()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.292682916F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.951219499F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Long_bar 2
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_08()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.951219499F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Smear_rect
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_09()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.878048778F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Circle_solo 2
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_10()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.804878056F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 7
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_11()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.365853667F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 6
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_12()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.365853667F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.439024389F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 8
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_13()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.439024389F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            result.InsertKeyFrame(0.658536613F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
            return result;
        }

        // - Layer aggregator
        // Layer: Shape Layer 9
        Vector2KeyFrameAnimation ShapeVisibilityAnimation_14()
        {
            const auto result = CreateVector2KeyFrameAnimation(0.658536613F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
            return result;
        }

        static IGeometrySource2D CanvasGeometryToIGeometrySource2D(winrt::com_ptr<CanvasGeometry> geo)
        {
            return geo.as<IGeometrySource2D>();
        }

    public:
        MotionCorpse_Jrcanest_AnimatedVisual_UAPv7(Compositor compositor)
            : _c{compositor}
            , _reusableExpressionAnimation(compositor.CreateExpressionAnimation())
        {
            winrt::check_hresult(D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, _d2dFactory.put()));
            const auto _ = Root();
        }

        void Close()
        {
            if (_root)
            {
                _root.Close();
            }
        }

        TimeSpan Duration() const
        {
            return TimeSpan{ c_durationTicks };
        }

        Visual RootVisual() const
        {
            return _root;
        }

        float2 Size() const
        {
            return { 1920.0F, 1080.0F };
        }

        static bool IsRuntimeCompatible()
        {
            return winrt::Windows::Foundation::Metadata::ApiInformation::IsApiContractPresent(L"Windows.Foundation.UniversalApiContract", 7);
        }
    };

    winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual MotionCorpse_Jrcanest::TryCreateAnimatedVisual(
        Compositor const& compositor,
        IInspectable& diagnostics)
    {
        diagnostics = nullptr;

        if (MotionCorpse_Jrcanest_AnimatedVisual_UAPv12::IsRuntimeCompatible())
        {
            return winrt::make<MotionCorpse_Jrcanest_AnimatedVisual_UAPv12>(compositor);
        }

        if (MotionCorpse_Jrcanest_AnimatedVisual_UAPv11::IsRuntimeCompatible())
        {
            return winrt::make<MotionCorpse_Jrcanest_AnimatedVisual_UAPv11>(compositor);
        }

        if (MotionCorpse_Jrcanest_AnimatedVisual_UAPv7::IsRuntimeCompatible())
        {
            return winrt::make<MotionCorpse_Jrcanest_AnimatedVisual_UAPv7>(compositor);
        }

        return nullptr;
    }

    double MotionCorpse_Jrcanest::FrameToProgress(double frameNumber)
    {
        return frameNumber / 82.0;
    }

    winrt::Windows::Foundation::Collections::IMapView<hstring, double> MotionCorpse_Jrcanest::Markers()
    {
        return winrt::single_threaded_map<winrt::hstring, double>(
            std::map<winrt::hstring, double>
            {
            }
        ).GetView();
    }

    void MotionCorpse_Jrcanest::SetColorProperty(hstring const&, Color)
    {
    }

    void MotionCorpse_Jrcanest::SetScalarProperty(hstring const&, double)
    {
    }
} // end namespace
